[{"documents":[{"i":930,"t":"部署架构","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-architecture/","b":["NebulaGraph on AWS"]},{"i":932,"t":"连接服务","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-connect-to-services/","b":["NebulaGraph on AWS"]},{"i":934,"t":"部署步骤","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-deployment-steps/","b":["NebulaGraph on AWS"]},{"i":936,"t":"NebulaGraph Cloud AWS 版概览","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-overview/","b":["NebulaGraph on AWS"]},{"i":944,"t":"部署准备","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-planning-deployment/","b":["NebulaGraph on AWS"]},{"i":958,"t":"什么是 NebulaGraph Cloud","u":"/zh-Hans/cloud/what-is-cloud/","b":[]},{"i":968,"t":"NebulaGraph 数据库","u":"/zh-Hans/docs/","b":[]},{"i":970,"t":"数据模型","u":"/zh-Hans/docs/introduction/data-model/","b":["产品简介"]},{"i":975,"t":"图数据库的市场概况","u":"/zh-Hans/docs/introduction/graph-database/","b":["产品简介"]},{"i":989,"t":"图","u":"/zh-Hans/docs/introduction/graph/","b":["产品简介"]},{"i":1007,"t":"Nebula Graph 架构总览","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/architecture-overview/","b":["产品简介","NebulaGraph 架构"]},{"i":1013,"t":"Graph 服务","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","b":["产品简介","NebulaGraph 架构"]},{"i":1029,"t":"Meta 服务","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","b":["产品简介","NebulaGraph 架构"]},{"i":1046,"t":"Storage 服务","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","b":["产品简介","NebulaGraph 架构"]},{"i":1080,"t":"路径","u":"/zh-Hans/docs/introduction/path/","b":["产品简介"]},{"i":1090,"t":"相关技术","u":"/zh-Hans/docs/introduction/related-tech/","b":["产品简介"]},{"i":1117,"t":"点 VID","u":"/zh-Hans/docs/introduction/vid/","b":["产品简介"]},{"i":1129,"t":"什么是 Nebula Graph","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","b":["产品简介"]},{"i":1170,"t":"NebulaGraph 培训中心","u":"/zh-Hans/training/","b":["培训中心"]},{"i":1173,"t":"属性图","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-property/","b":["培训中心","图技术基础","图基础知识"]},{"i":1186,"t":"图结构","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","b":["培训中心","图技术基础","图基础知识"]},{"i":1206,"t":"图","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph/","b":["培训中心","图技术基础","图基础知识"]},{"i":1215,"t":"课程介绍","u":"/zh-Hans/training/graph-basics/basic-knowledge/overview/","b":["培训中心","图技术基础","图基础知识"]},{"i":1227,"t":"悬挂边","u":"/zh-Hans/training/graph-basics/widen-knowledge/dangling-edge/","b":["培训中心","图技术基础","磨人小概念"]},{"i":1235,"t":"课程介绍","u":"/zh-Hans/training/graph-basics/widen-knowledge/overview/","b":["培训中心","图技术基础","磨人小概念"]},{"i":1249,"t":"路径","u":"/zh-Hans/training/graph-basics/widen-knowledge/path-type/","b":["培训中心","图技术基础","磨人小概念"]},{"i":1260,"t":"自环","u":"/zh-Hans/training/graph-basics/widen-knowledge/selfloop/","b":["培训中心","图技术基础","磨人小概念"]},{"i":1266,"t":"VID 和 Rank","u":"/zh-Hans/training/graph-basics/widen-knowledge/tag-edgetype-rank-vid/","b":["培训中心","图技术基础","磨人小概念"]},{"i":1272,"t":"nebulagraph-architecture","u":"/zh-Hans/training/nebulagraph-intro/nebulagraph-architecture/","b":["培训中心","NebulaGraph 简介"]},{"i":1273,"t":"nebulagraph-concept","u":"/zh-Hans/training/nebulagraph-intro/nebulagraph-concept/","b":["培训中心","NebulaGraph 简介"]},{"i":1274,"t":"nebulagraph-features","u":"/zh-Hans/training/nebulagraph-intro/nebulagraph-features/","b":["培训中心","NebulaGraph 简介"]},{"i":1275,"t":"课程介绍","u":"/zh-Hans/training/nebulagraph-intro/overview/","b":["培训中心","NebulaGraph 简介"]},{"i":1284,"t":"云上部署 NebulaGraph","u":"/zh-Hans/training/practice-cloud-deployment/","b":["培训中心"]},{"i":1288,"t":"基于 NebulaGraph 的智能问答机器人应用","u":"/zh-Hans/training/practice-nebulagraph-app/","b":["培训中心"]}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/930",[0,0.126]],["t/932",[0,0.126]],["t/934",[0,0.126]],["t/936",[0,0.067,1,0.832,2,1.684,3,2.01]],["t/944",[0,0.126]],["t/958",[0,0.08,1,0.986,2,1.995]],["t/968",[0,0.098,1,1.209]],["t/970",[0,0.126]],["t/975",[0,0.126]],["t/989",[0,0.126]],["t/1007",[0,0.08,4,1.995,5,1.74]],["t/1013",[0,0.098,5,2.134]],["t/1029",[0,0.098,6,2.919]],["t/1046",[0,0.098,7,2.919]],["t/1080",[0,0.126]],["t/1090",[0,0.126]],["t/1117",[0,0.098,8,2.446]],["t/1129",[0,0.08,4,1.995,5,1.74]],["t/1170",[0,0.098,1,1.209]],["t/1173",[0,0.126]],["t/1186",[0,0.126]],["t/1206",[0,0.126]],["t/1215",[0,0.126]],["t/1227",[0,0.126]],["t/1235",[0,0.126]],["t/1249",[0,0.126]],["t/1260",[0,0.126]],["t/1266",[0,0.08,8,1.995,9,2.381]],["t/1272",[1,1.209,10,2.919]],["t/1273",[1,1.209,11,2.919]],["t/1274",[1,1.209,12,2.919]],["t/1275",[0,0.126]],["t/1284",[0,0.098,1,1.209]],["t/1288",[0,0.119,1,0.986]]],"invertedIndex":[["",{"_index":0,"t":{"930":{"position":[[0,4]]},"932":{"position":[[0,4]]},"934":{"position":[[0,4]]},"936":{"position":[[22,3]]},"944":{"position":[[0,4]]},"958":{"position":[[0,3]]},"968":{"position":[[12,3]]},"970":{"position":[[0,4]]},"975":{"position":[[0,9]]},"989":{"position":[[0,1]]},"1007":{"position":[[13,4]]},"1013":{"position":[[6,2]]},"1029":{"position":[[5,2]]},"1046":{"position":[[8,2]]},"1080":{"position":[[0,2]]},"1090":{"position":[[0,4]]},"1117":{"position":[[0,1]]},"1129":{"position":[[0,3]]},"1170":{"position":[[12,4]]},"1173":{"position":[[0,3]]},"1186":{"position":[[0,3]]},"1206":{"position":[[0,1]]},"1215":{"position":[[0,4]]},"1227":{"position":[[0,3]]},"1235":{"position":[[0,4]]},"1249":{"position":[[0,2]]},"1260":{"position":[[0,2]]},"1266":{"position":[[4,1]]},"1275":{"position":[[0,4]]},"1284":{"position":[[0,4]]},"1288":{"position":[[0,2],[15,10]]}}}],["architectur",{"_index":10,"t":{"1272":{"position":[[12,12]]}}}],["aw",{"_index":3,"t":{"936":{"position":[[18,3]]}}}],["cloud",{"_index":2,"t":{"936":{"position":[[12,5]]},"958":{"position":[[16,5]]}}}],["concept",{"_index":11,"t":{"1273":{"position":[[12,7]]}}}],["featur",{"_index":12,"t":{"1274":{"position":[[12,8]]}}}],["graph",{"_index":5,"t":{"1007":{"position":[[7,5]]},"1013":{"position":[[0,5]]},"1129":{"position":[[11,5]]}}}],["meta",{"_index":6,"t":{"1029":{"position":[[0,4]]}}}],["nebula",{"_index":4,"t":{"1007":{"position":[[0,6]]},"1129":{"position":[[4,6]]}}}],["nebulagraph",{"_index":1,"t":{"936":{"position":[[0,11]]},"958":{"position":[[4,11]]},"968":{"position":[[0,11]]},"1170":{"position":[[0,11]]},"1272":{"position":[[0,11]]},"1273":{"position":[[0,11]]},"1274":{"position":[[0,11]]},"1284":{"position":[[5,11]]},"1288":{"position":[[3,11]]}}}],["rank",{"_index":9,"t":{"1266":{"position":[[6,4]]}}}],["storag",{"_index":7,"t":{"1046":{"position":[[0,7]]}}}],["vid",{"_index":8,"t":{"1117":{"position":[[2,3]]},"1266":{"position":[[0,3]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":938,"t":"费用","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-overview/","h":"#费用","p":936},{"i":940,"t":"许可证","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-overview/","h":"#许可证","p":936},{"i":942,"t":"内核版本","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-overview/","h":"#内核版本","p":936},{"i":946,"t":"知识准备","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-planning-deployment/","h":"#知识准备","p":944},{"i":948,"t":"账户与权限","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-planning-deployment/","h":"#账户与权限","p":944},{"i":950,"t":"资源额度","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-planning-deployment/","h":"#资源额度","p":944},{"i":952,"t":"AWS 地域","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-planning-deployment/","h":"#aws-地域","p":944},{"i":954,"t":"EC2 密钥对","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-planning-deployment/","h":"#ec2-密钥对","p":944},{"i":956,"t":"部署方式","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-planning-deployment/","h":"#部署方式","p":944},{"i":960,"t":"内核版本","u":"/zh-Hans/cloud/what-is-cloud/","h":"#内核版本","p":958},{"i":962,"t":"产品功能","u":"/zh-Hans/cloud/what-is-cloud/","h":"#产品功能","p":958},{"i":964,"t":"产品优点","u":"/zh-Hans/cloud/what-is-cloud/","h":"#产品优点","p":958},{"i":966,"t":"视频","u":"/zh-Hans/cloud/what-is-cloud/","h":"#视频","p":958},{"i":973,"t":"有向属性图","u":"/zh-Hans/docs/introduction/data-model/","h":"#有向属性图","p":970},{"i":977,"t":"三方机构的统计和预测","u":"/zh-Hans/docs/introduction/graph-database/","h":"#三方机构的统计和预测","p":975},{"i":978,"t":"DB-Engines 的统计","u":"/zh-Hans/docs/introduction/graph-database/","h":"#db-engines-的统计","p":975},{"i":980,"t":"Gartner 的预测","u":"/zh-Hans/docs/introduction/graph-database/","h":"#gartner-的预测","p":975},{"i":982,"t":"对于市场规模的预测","u":"/zh-Hans/docs/introduction/graph-database/","h":"#对于市场规模的预测","p":975},{"i":984,"t":"市场参与者","u":"/zh-Hans/docs/introduction/graph-database/","h":"#市场参与者","p":975},{"i":985,"t":"（第一代）图数据库的先行者 Neo4j","u":"/zh-Hans/docs/introduction/graph-database/","h":"#第一代图数据库的先行者-neo4j","p":975},{"i":987,"t":"分布式图数据库","u":"/zh-Hans/docs/introduction/graph-database/","h":"#分布式图数据库","p":975},{"i":991,"t":"图、图片与图论","u":"/zh-Hans/docs/introduction/graph/","h":"#图图片与图论","p":989},{"i":993,"t":"属性图","u":"/zh-Hans/docs/introduction/graph/","h":"#属性图","p":989},{"i":995,"t":"为什么要使用图数据库","u":"/zh-Hans/docs/introduction/graph/","h":"#为什么要使用图数据库","p":989},{"i":997,"t":"RDF","u":"/zh-Hans/docs/introduction/graph/","h":"#rdf","p":989},{"i":999,"t":"What are graphs?","u":"/zh-Hans/docs/introduction/graph/","h":"#what-are-graphs","p":989},{"i":1001,"t":"Property graphs","u":"/zh-Hans/docs/introduction/graph/","h":"#property-graphs","p":989},{"i":1003,"t":"Why do we use graph databases?","u":"/zh-Hans/docs/introduction/graph/","h":"#why-do-we-use-graph-databases","p":989},{"i":1005,"t":"RDF","u":"/zh-Hans/docs/introduction/graph/","h":"#rdf-1","p":989},{"i":1009,"t":"Meta 服务","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/architecture-overview/","h":"#meta-服务","p":1007},{"i":1011,"t":"Graph 服务和 Storage 服务","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/architecture-overview/","h":"#graph-服务和-storage-服务","p":1007},{"i":1015,"t":"Graph 服务架构","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"#graph-服务架构","p":1013},{"i":1017,"t":"Parser","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"#parser","p":1013},{"i":1019,"t":"Validator","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"#validator","p":1013},{"i":1021,"t":"Planner","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"#planner","p":1013},{"i":1023,"t":"Executor","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"#executor","p":1013},{"i":1025,"t":"代码结构","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"#代码结构","p":1013},{"i":1027,"t":"视频","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"#视频","p":1013},{"i":1031,"t":"Meta 服务架构","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#meta-服务架构","p":1029},{"i":1033,"t":"Meta 服务功能","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#meta-服务功能","p":1029},{"i":1034,"t":"管理用户账号","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#管理用户账号","p":1029},{"i":1036,"t":"管理分片","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#管理分片","p":1029},{"i":1038,"t":"管理图空间","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#管理图空间","p":1029},{"i":1040,"t":"管理 Schema 信息","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#管理-schema-信息","p":1029},{"i":1042,"t":"管理 TTL 信息","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#管理-ttl-信息","p":1029},{"i":1044,"t":"管理作业","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#管理作业","p":1029},{"i":1048,"t":"优势","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#优势","p":1046},{"i":1050,"t":"Storage 服务架构","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#storage-服务架构","p":1046},{"i":1052,"t":"Storage 写入流程","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#storage-写入流程","p":1046},{"i":1053,"t":"KVStore","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#kvstore","p":1046},{"i":1055,"t":"数据存储格式","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#数据存储格式","p":1046},{"i":1057,"t":"属性说明","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#属性说明","p":1046},{"i":1059,"t":"数据分片","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#数据分片","p":1046},{"i":1061,"t":"切边与存储放大","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#切边与存储放大","p":1046},{"i":1063,"t":"分片算法","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#分片算法","p":1046},{"i":1065,"t":"Raft","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#raft","p":1046},{"i":1066,"t":"关于 Raft 的简单介绍","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#关于-raft-的简单介绍","p":1046},{"i":1068,"t":"Multi Group Raft","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#multi-group-raft","p":1046},{"i":1070,"t":"批量（Batch）操作","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#批量batch操作","p":1046},{"i":1072,"t":"leader 切换（Transfer Leadership）","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#leader-切换transfer-leadership","p":1046},{"i":1074,"t":"成员变更","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#成员变更","p":1046},{"i":1076,"t":"缓存","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#缓存","p":1046},{"i":1078,"t":"与 HDFS 的区别","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#与-hdfs-的区别","p":1046},{"i":1082,"t":"walk","u":"/zh-Hans/docs/introduction/path/","h":"#walk","p":1080},{"i":1084,"t":"trail","u":"/zh-Hans/docs/introduction/path/","h":"#trail","p":1080},{"i":1086,"t":"path","u":"/zh-Hans/docs/introduction/path/","h":"#path","p":1080},{"i":1088,"t":"视频","u":"/zh-Hans/docs/introduction/path/","h":"#视频","p":1080},{"i":1092,"t":"数据库方面","u":"/zh-Hans/docs/introduction/related-tech/","h":"#数据库方面","p":1090},{"i":1093,"t":"关系型数据库","u":"/zh-Hans/docs/introduction/related-tech/","h":"#关系型数据库","p":1090},{"i":1095,"t":"NoSQL 数据库","u":"/zh-Hans/docs/introduction/related-tech/","h":"#nosql-数据库","p":1090},{"i":1097,"t":"图技术方面","u":"/zh-Hans/docs/introduction/related-tech/","h":"#图技术方面","p":1090},{"i":1099,"t":"图语言","u":"/zh-Hans/docs/introduction/related-tech/","h":"#图语言","p":1090},{"i":1101,"t":"图数据库(Graph Database)与图处理(Graph processing)系统","u":"/zh-Hans/docs/introduction/related-tech/","h":"#图数据库graph-database与图处理graph-processing系统","p":1090},{"i":1103,"t":"图的分片方式","u":"/zh-Hans/docs/introduction/related-tech/","h":"#图的分片方式","p":1090},{"i":1105,"t":"一些技术上的挑战","u":"/zh-Hans/docs/introduction/related-tech/","h":"#一些技术上的挑战","p":1090},{"i":1107,"t":"一些开源的单机图工具","u":"/zh-Hans/docs/introduction/related-tech/","h":"#一些开源的单机图工具","p":1090},{"i":1109,"t":"一些行业数据集和 Benchmark","u":"/zh-Hans/docs/introduction/related-tech/","h":"#一些行业数据集和-benchmark","p":1090},{"i":1111,"t":"一些趋势","u":"/zh-Hans/docs/introduction/related-tech/","h":"#一些趋势","p":1090},{"i":1112,"t":"虽然图的各种技术起源和目标并不相同，但在相互借鉴和融合","u":"/zh-Hans/docs/introduction/related-tech/","h":"#虽然图的各种技术起源和目标并不相同但在相互借鉴和融合","p":1090},{"i":1113,"t":"上云的趋势在加速，对于弹性能力提出更高要求","u":"/zh-Hans/docs/introduction/related-tech/","h":"#上云的趋势在加速对于弹性能力提出更高要求","p":1090},{"i":1115,"t":"硬件趋势，SSD 将成为主流的持久化设备","u":"/zh-Hans/docs/introduction/related-tech/","h":"#硬件趋势ssd-将成为主流的持久化设备","p":1090},{"i":1119,"t":"VID 的特点","u":"/zh-Hans/docs/introduction/vid/","h":"#vid-的特点","p":1117},{"i":1121,"t":"VID 使用建议","u":"/zh-Hans/docs/introduction/vid/","h":"#vid-使用建议","p":1117},{"i":1123,"t":"VID 生成建议","u":"/zh-Hans/docs/introduction/vid/","h":"#vid-生成建议","p":1117},{"i":1125,"t":"定义和修改 VID 与其数据类型","u":"/zh-Hans/docs/introduction/vid/","h":"#定义和修改-vid-与其数据类型","p":1117},{"i":1127,"t":"\"查询起始点\"(start vid) 与全局扫描","u":"/zh-Hans/docs/introduction/vid/","h":"#查询起始点start-vid-与全局扫描","p":1117},{"i":1131,"t":"什么是图数据库","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#什么是图数据库","p":1129},{"i":1133,"t":"Nebula Graph 的优势","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#nebula-graph-的优势","p":1129},{"i":1134,"t":"开源","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#开源","p":1129},{"i":1136,"t":"高性能","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#高性能","p":1129},{"i":1138,"t":"易扩展","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#易扩展","p":1129},{"i":1140,"t":"易开发","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#易开发","p":1129},{"i":1142,"t":"高可靠访问控制","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#高可靠访问控制","p":1129},{"i":1144,"t":"生态多样化","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#生态多样化","p":1129},{"i":1146,"t":"兼容 openCypher 查询语言","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#兼容-opencypher-查询语言","p":1129},{"i":1148,"t":"面向未来硬件，读写平衡","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#面向未来硬件读写平衡","p":1129},{"i":1150,"t":"灵活数据建模","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#灵活数据建模","p":1129},{"i":1152,"t":"广受欢迎","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#广受欢迎","p":1129},{"i":1154,"t":"适用场景","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#适用场景","p":1129},{"i":1156,"t":"欺诈检测","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#欺诈检测","p":1129},{"i":1158,"t":"实时推荐","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#实时推荐","p":1129},{"i":1160,"t":"知识图谱","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#知识图谱","p":1129},{"i":1162,"t":"社交网络","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#社交网络","p":1129},{"i":1164,"t":"视频","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#视频","p":1129},{"i":1166,"t":"主题演讲","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#主题演讲","p":1129},{"i":1168,"t":"相关链接","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#相关链接","p":1129},{"i":1171,"t":"课程列表","u":"/zh-Hans/training/","h":"#课程列表","p":1170},{"i":1174,"t":"属性图定义","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-property/","h":"#属性图定义","p":1173},{"i":1176,"t":"属性","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-property/","h":"#属性","p":1173},{"i":1178,"t":"标签","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-property/","h":"#标签","p":1173},{"i":1180,"t":"关系类型","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-property/","h":"#关系类型","p":1173},{"i":1182,"t":"属性、标签、关系类型之间的关系","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-property/","h":"#属性标签关系类型之间的关系","p":1173},{"i":1184,"t":"课堂小测试","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-property/","h":"#课堂小测试","p":1173},{"i":1188,"t":"基本元素","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#基本元素","p":1186},{"i":1190,"t":"点","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#点","p":1186},{"i":1192,"t":"边","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#边","p":1186},{"i":1194,"t":"其他元素","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#其他元素","p":1186},{"i":1196,"t":"悬挂边","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#悬挂边","p":1186},{"i":1198,"t":"子图","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#子图","p":1186},{"i":1200,"t":"属性","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#属性","p":1186},{"i":1202,"t":"路径","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#路径","p":1186},{"i":1204,"t":"课堂小测试","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#课堂小测试","p":1186},{"i":1207,"t":"柯尼斯堡七桥问题","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph/","h":"#柯尼斯堡七桥问题","p":1206},{"i":1209,"t":"图论","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph/","h":"#图论","p":1206},{"i":1211,"t":"图的定义","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph/","h":"#图的定义","p":1206},{"i":1213,"t":"课程小测试","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph/","h":"#课程小测试","p":1206},{"i":1217,"t":"📄️ 图","u":"/zh-Hans/training/graph-basics/basic-knowledge/overview/","h":"","p":1215},{"i":1219,"t":"📄️ 图结构","u":"/zh-Hans/training/graph-basics/basic-knowledge/overview/","h":"","p":1215},{"i":1221,"t":"📄️ 属性图","u":"/zh-Hans/training/graph-basics/basic-knowledge/overview/","h":"","p":1215},{"i":1223,"t":"前提条件","u":"/zh-Hans/training/graph-basics/basic-knowledge/overview/","h":"#前提条件","p":1215},{"i":1225,"t":"时长","u":"/zh-Hans/training/graph-basics/basic-knowledge/overview/","h":"#时长","p":1215},{"i":1229,"t":"定义","u":"/zh-Hans/training/graph-basics/widen-knowledge/dangling-edge/","h":"#定义","p":1227},{"i":1231,"t":"悬挂边的产生","u":"/zh-Hans/training/graph-basics/widen-knowledge/dangling-edge/","h":"#悬挂边的产生","p":1227},{"i":1233,"t":"悬挂边的查询","u":"/zh-Hans/training/graph-basics/widen-knowledge/dangling-edge/","h":"#悬挂边的查询","p":1227},{"i":1237,"t":"📄️ VID 和 Rank","u":"/zh-Hans/training/graph-basics/widen-knowledge/overview/","h":"","p":1235},{"i":1239,"t":"📄️ 悬挂边","u":"/zh-Hans/training/graph-basics/widen-knowledge/overview/","h":"","p":1235},{"i":1241,"t":"📄️ 路径","u":"/zh-Hans/training/graph-basics/widen-knowledge/overview/","h":"","p":1235},{"i":1243,"t":"📄️ 自环","u":"/zh-Hans/training/graph-basics/widen-knowledge/overview/","h":"","p":1235},{"i":1245,"t":"前提条件","u":"/zh-Hans/training/graph-basics/widen-knowledge/overview/","h":"","p":1235},{"i":1247,"t":"时长","u":"/zh-Hans/training/graph-basics/widen-knowledge/overview/","h":"","p":1235},{"i":1250,"t":"定义和分类","u":"/zh-Hans/training/graph-basics/widen-knowledge/path-type/","h":"#定义和分类","p":1249},{"i":1252,"t":"walk","u":"/zh-Hans/training/graph-basics/widen-knowledge/path-type/","h":"#walk","p":1249},{"i":1254,"t":"trail","u":"/zh-Hans/training/graph-basics/widen-knowledge/path-type/","h":"#trail","p":1249},{"i":1256,"t":"path","u":"/zh-Hans/training/graph-basics/widen-knowledge/path-type/","h":"#path","p":1249},{"i":1258,"t":"总结","u":"/zh-Hans/training/graph-basics/widen-knowledge/path-type/","h":"#总结","p":1249},{"i":1262,"t":"定义","u":"/zh-Hans/training/graph-basics/widen-knowledge/selfloop/","h":"#定义","p":1260},{"i":1264,"t":"作用","u":"/zh-Hans/training/graph-basics/widen-knowledge/selfloop/","h":"#作用","p":1260},{"i":1268,"t":"VID","u":"/zh-Hans/training/graph-basics/widen-knowledge/tag-edgetype-rank-vid/","h":"#vid","p":1266},{"i":1270,"t":"Rank","u":"/zh-Hans/training/graph-basics/widen-knowledge/tag-edgetype-rank-vid/","h":"#rank","p":1266},{"i":1277,"t":"📄️ nebulagraph-concept","u":"/zh-Hans/training/nebulagraph-intro/overview/","h":"","p":1275},{"i":1278,"t":"📄️ nebulagraph-architecture","u":"/zh-Hans/training/nebulagraph-intro/overview/","h":"","p":1275},{"i":1279,"t":"📄️ nebulagraph-features","u":"/zh-Hans/training/nebulagraph-intro/overview/","h":"","p":1275},{"i":1280,"t":"必备知识","u":"/zh-Hans/training/nebulagraph-intro/overview/","h":"","p":1275},{"i":1282,"t":"时长","u":"/zh-Hans/training/nebulagraph-intro/overview/","h":"","p":1275},{"i":1286,"t":"课程目标","u":"/zh-Hans/training/practice-cloud-deployment/","h":"#课程目标","p":1284},{"i":1290,"t":"前言","u":"/zh-Hans/training/practice-nebulagraph-app/","h":"#前言","p":1288},{"i":1292,"t":"数据建模","u":"/zh-Hans/training/practice-nebulagraph-app/","h":"#数据建模","p":1288},{"i":1294,"t":"应用设计","u":"/zh-Hans/training/practice-nebulagraph-app/","h":"#应用设计","p":1288},{"i":1295,"t":"前端","u":"/zh-Hans/training/practice-nebulagraph-app/","h":"#前端","p":1288},{"i":1297,"t":"后端","u":"/zh-Hans/training/practice-nebulagraph-app/","h":"#后端","p":1288},{"i":1299,"t":"代码","u":"/zh-Hans/training/practice-nebulagraph-app/","h":"#代码","p":1288}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/938",[0,0.177]],["t/940",[0,0.177]],["t/942",[0,0.177]],["t/946",[0,0.177]],["t/948",[0,0.177]],["t/950",[0,0.177]],["t/952",[0,0.132,1,3.954]],["t/954",[0,0.132,2,3.954]],["t/956",[0,0.177]],["t/960",[0,0.177]],["t/962",[0,0.177]],["t/964",[0,0.177]],["t/966",[0,0.177]],["t/973",[0,0.177]],["t/977",[0,0.177]],["t/978",[0,0.106,3,3.162,4,3.162]],["t/980",[0,0.132,5,3.954]],["t/982",[0,0.177]],["t/984",[0,0.177]],["t/985",[0,0.132,6,3.954]],["t/987",[0,0.177]],["t/991",[0,0.177]],["t/993",[0,0.177]],["t/995",[0,0.177]],["t/997",[7,4.7]],["t/999",[8,3.462]],["t/1001",[8,2.595,9,3.954]],["t/1003",[8,2.075,10,3.162,11,3.162]],["t/1005",[7,4.7]],["t/1009",[0,0.132,12,3.238]],["t/1011",[0,0.14,8,1.729,13,2.157]],["t/1015",[0,0.132,8,2.595]],["t/1017",[14,5.275]],["t/1019",[15,5.275]],["t/1021",[16,5.275]],["t/1023",[17,5.275]],["t/1025",[0,0.177]],["t/1027",[0,0.177]],["t/1031",[0,0.132,12,3.238]],["t/1033",[0,0.132,12,3.238]],["t/1034",[0,0.177]],["t/1036",[0,0.177]],["t/1038",[0,0.177]],["t/1040",[0,0.162,18,3.162]],["t/1042",[0,0.162,19,3.162]],["t/1044",[0,0.177]],["t/1048",[0,0.177]],["t/1050",[0,0.132,13,3.238]],["t/1052",[0,0.132,13,3.238]],["t/1053",[20,5.275]],["t/1055",[0,0.177]],["t/1057",[0,0.177]],["t/1059",[0,0.177]],["t/1061",[0,0.177]],["t/1063",[0,0.177]],["t/1065",[21,4.32]],["t/1066",[0,0.162,21,2.589]],["t/1068",[21,2.589,22,3.162,23,3.162]],["t/1070",[24,5.275]],["t/1072",[25,3.162,26,3.162,27,3.162]],["t/1074",[0,0.177]],["t/1076",[0,0.177]],["t/1078",[0,0.162,28,3.162]],["t/1082",[29,4.7]],["t/1084",[30,4.7]],["t/1086",[31,4.7]],["t/1088",[0,0.177]],["t/1092",[0,0.177]],["t/1093",[0,0.177]],["t/1095",[0,0.132,32,3.954]],["t/1097",[0,0.177]],["t/1099",[0,0.177]],["t/1101",[8,2.075,33,3.162,34,3.162]],["t/1103",[0,0.177]],["t/1105",[0,0.177]],["t/1107",[0,0.177]],["t/1109",[0,0.132,35,3.954]],["t/1111",[0,0.177]],["t/1112",[0,0.177]],["t/1113",[0,0.177]],["t/1115",[0,0.132,36,3.954]],["t/1119",[0,0.132,37,2.595]],["t/1121",[0,0.132,37,2.595]],["t/1123",[0,0.132,37,2.595]],["t/1125",[0,0.162,37,2.075]],["t/1127",[0,0.106,37,2.075,38,3.162]],["t/1131",[0,0.177]],["t/1133",[0,0.106,8,2.075,39,3.162]],["t/1134",[0,0.177]],["t/1136",[0,0.177]],["t/1138",[0,0.177]],["t/1140",[0,0.177]],["t/1142",[0,0.177]],["t/1144",[0,0.177]],["t/1146",[0,0.162,40,3.162]],["t/1148",[0,0.177]],["t/1150",[0,0.177]],["t/1152",[0,0.177]],["t/1154",[0,0.177]],["t/1156",[0,0.177]],["t/1158",[0,0.177]],["t/1160",[0,0.177]],["t/1162",[0,0.177]],["t/1164",[0,0.177]],["t/1166",[0,0.177]],["t/1168",[0,0.177]],["t/1171",[0,0.177]],["t/1174",[0,0.177]],["t/1176",[0,0.177]],["t/1178",[0,0.177]],["t/1180",[0,0.177]],["t/1182",[0,0.177]],["t/1184",[0,0.177]],["t/1188",[0,0.177]],["t/1190",[0,0.177]],["t/1192",[0,0.177]],["t/1194",[0,0.177]],["t/1196",[0,0.177]],["t/1198",[0,0.177]],["t/1200",[0,0.177]],["t/1202",[0,0.177]],["t/1204",[0,0.177]],["t/1207",[0,0.177]],["t/1209",[0,0.177]],["t/1211",[0,0.177]],["t/1213",[0,0.177]],["t/1217",[0,0.191]],["t/1219",[0,0.191]],["t/1221",[0,0.191]],["t/1223",[0,0.177]],["t/1225",[0,0.177]],["t/1229",[0,0.177]],["t/1231",[0,0.177]],["t/1233",[0,0.177]],["t/1237",[0,0.14,37,1.729,41,2.347]],["t/1239",[0,0.191]],["t/1241",[0,0.191]],["t/1243",[0,0.191]],["t/1245",[0,0.177]],["t/1247",[0,0.177]],["t/1250",[0,0.177]],["t/1252",[29,4.7]],["t/1254",[30,4.7]],["t/1256",[31,4.7]],["t/1258",[0,0.177]],["t/1262",[0,0.177]],["t/1264",[0,0.177]],["t/1268",[37,3.462]],["t/1270",[41,4.7]],["t/1277",[0,0.106,42,2.589,43,3.162]],["t/1278",[0,0.106,42,2.589,44,3.162]],["t/1279",[0,0.106,42,2.589,45,3.162]],["t/1280",[0,0.177]],["t/1282",[0,0.177]],["t/1286",[0,0.177]],["t/1290",[0,0.177]],["t/1292",[0,0.177]],["t/1294",[0,0.177]],["t/1295",[0,0.177]],["t/1297",[0,0.177]],["t/1299",[0,0.177]]],"invertedIndex":[["",{"_index":0,"t":{"938":{"position":[[0,2]]},"940":{"position":[[0,3]]},"942":{"position":[[0,4]]},"946":{"position":[[0,4]]},"948":{"position":[[0,5]]},"950":{"position":[[0,4]]},"952":{"position":[[4,2]]},"954":{"position":[[4,3]]},"956":{"position":[[0,4]]},"960":{"position":[[0,4]]},"962":{"position":[[0,4]]},"964":{"position":[[0,4]]},"966":{"position":[[0,2]]},"973":{"position":[[0,5]]},"977":{"position":[[0,10]]},"978":{"position":[[11,3]]},"980":{"position":[[8,3]]},"982":{"position":[[0,9]]},"984":{"position":[[0,5]]},"985":{"position":[[0,13]]},"987":{"position":[[0,7]]},"991":{"position":[[0,7]]},"993":{"position":[[0,3]]},"995":{"position":[[0,10]]},"1009":{"position":[[5,2]]},"1011":{"position":[[6,3],[18,2]]},"1015":{"position":[[6,4]]},"1025":{"position":[[0,4]]},"1027":{"position":[[0,2]]},"1031":{"position":[[5,4]]},"1033":{"position":[[5,4]]},"1034":{"position":[[0,6]]},"1036":{"position":[[0,4]]},"1038":{"position":[[0,5]]},"1040":{"position":[[0,2],[10,2]]},"1042":{"position":[[0,2],[7,2]]},"1044":{"position":[[0,4]]},"1048":{"position":[[0,2]]},"1050":{"position":[[8,4]]},"1052":{"position":[[8,4]]},"1055":{"position":[[0,6]]},"1057":{"position":[[0,4]]},"1059":{"position":[[0,4]]},"1061":{"position":[[0,7]]},"1063":{"position":[[0,4]]},"1066":{"position":[[0,2],[8,5]]},"1074":{"position":[[0,4]]},"1076":{"position":[[0,2]]},"1078":{"position":[[0,1],[7,3]]},"1088":{"position":[[0,2]]},"1092":{"position":[[0,5]]},"1093":{"position":[[0,6]]},"1095":{"position":[[6,3]]},"1097":{"position":[[0,5]]},"1099":{"position":[[0,3]]},"1103":{"position":[[0,6]]},"1105":{"position":[[0,8]]},"1107":{"position":[[0,10]]},"1109":{"position":[[0,8]]},"1111":{"position":[[0,4]]},"1112":{"position":[[0,27]]},"1113":{"position":[[0,21]]},"1115":{"position":[[9,11]]},"1119":{"position":[[4,3]]},"1121":{"position":[[4,4]]},"1123":{"position":[[4,4]]},"1125":{"position":[[0,5],[10,6]]},"1127":{"position":[[19,5]]},"1131":{"position":[[0,7]]},"1133":{"position":[[13,3]]},"1134":{"position":[[0,2]]},"1136":{"position":[[0,3]]},"1138":{"position":[[0,3]]},"1140":{"position":[[0,3]]},"1142":{"position":[[0,7]]},"1144":{"position":[[0,5]]},"1146":{"position":[[0,2],[14,4]]},"1148":{"position":[[0,11]]},"1150":{"position":[[0,6]]},"1152":{"position":[[0,4]]},"1154":{"position":[[0,4]]},"1156":{"position":[[0,4]]},"1158":{"position":[[0,4]]},"1160":{"position":[[0,4]]},"1162":{"position":[[0,4]]},"1164":{"position":[[0,2]]},"1166":{"position":[[0,4]]},"1168":{"position":[[0,4]]},"1171":{"position":[[0,4]]},"1174":{"position":[[0,5]]},"1176":{"position":[[0,2]]},"1178":{"position":[[0,2]]},"1180":{"position":[[0,4]]},"1182":{"position":[[0,15]]},"1184":{"position":[[0,5]]},"1188":{"position":[[0,4]]},"1190":{"position":[[0,1]]},"1192":{"position":[[0,1]]},"1194":{"position":[[0,4]]},"1196":{"position":[[0,3]]},"1198":{"position":[[0,2]]},"1200":{"position":[[0,2]]},"1202":{"position":[[0,2]]},"1204":{"position":[[0,5]]},"1207":{"position":[[0,8]]},"1209":{"position":[[0,2]]},"1211":{"position":[[0,4]]},"1213":{"position":[[0,5]]},"1217":{"position":[[0,3],[4,1]]},"1219":{"position":[[0,3],[4,3]]},"1221":{"position":[[0,3],[4,3]]},"1223":{"position":[[0,4]]},"1225":{"position":[[0,2]]},"1229":{"position":[[0,2]]},"1231":{"position":[[0,6]]},"1233":{"position":[[0,6]]},"1237":{"position":[[0,3],[8,1]]},"1239":{"position":[[0,3],[4,3]]},"1241":{"position":[[0,3],[4,2]]},"1243":{"position":[[0,3],[4,2]]},"1245":{"position":[[0,4]]},"1247":{"position":[[0,2]]},"1250":{"position":[[0,5]]},"1258":{"position":[[0,2]]},"1262":{"position":[[0,2]]},"1264":{"position":[[0,2]]},"1277":{"position":[[0,3]]},"1278":{"position":[[0,3]]},"1279":{"position":[[0,3]]},"1280":{"position":[[0,4]]},"1282":{"position":[[0,2]]},"1286":{"position":[[0,4]]},"1290":{"position":[[0,2]]},"1292":{"position":[[0,4]]},"1294":{"position":[[0,4]]},"1295":{"position":[[0,2]]},"1297":{"position":[[0,2]]},"1299":{"position":[[0,2]]}}}],["architectur",{"_index":44,"t":{"1278":{"position":[[16,12]]}}}],["aw",{"_index":1,"t":{"952":{"position":[[0,3]]}}}],["batch",{"_index":24,"t":{"1070":{"position":[[0,11]]}}}],["benchmark",{"_index":35,"t":{"1109":{"position":[[9,9]]}}}],["concept",{"_index":43,"t":{"1277":{"position":[[16,7]]}}}],["databas",{"_index":11,"t":{"1003":{"position":[[20,10]]}}}],["database)与图处理(graph",{"_index":33,"t":{"1101":{"position":[[11,19]]}}}],["db",{"_index":3,"t":{"978":{"position":[[0,2]]}}}],["ec2",{"_index":2,"t":{"954":{"position":[[0,3]]}}}],["engin",{"_index":4,"t":{"978":{"position":[[3,7]]}}}],["executor",{"_index":17,"t":{"1023":{"position":[[0,8]]}}}],["featur",{"_index":45,"t":{"1279":{"position":[[16,8]]}}}],["gartner",{"_index":5,"t":{"980":{"position":[[0,7]]}}}],["graph",{"_index":8,"t":{"999":{"position":[[9,7]]},"1001":{"position":[[9,6]]},"1003":{"position":[[14,5]]},"1011":{"position":[[0,5]]},"1015":{"position":[[0,5]]},"1101":{"position":[[0,10]]},"1133":{"position":[[7,5]]}}}],["group",{"_index":23,"t":{"1068":{"position":[[6,5]]}}}],["hdf",{"_index":28,"t":{"1078":{"position":[[2,4]]}}}],["kvstore",{"_index":20,"t":{"1053":{"position":[[0,7]]}}}],["leader",{"_index":25,"t":{"1072":{"position":[[0,6]]}}}],["leadership",{"_index":27,"t":{"1072":{"position":[[19,11]]}}}],["meta",{"_index":12,"t":{"1009":{"position":[[0,4]]},"1031":{"position":[[0,4]]},"1033":{"position":[[0,4]]}}}],["multi",{"_index":22,"t":{"1068":{"position":[[0,5]]}}}],["nebula",{"_index":39,"t":{"1133":{"position":[[0,6]]}}}],["nebulagraph",{"_index":42,"t":{"1277":{"position":[[4,11]]},"1278":{"position":[[4,11]]},"1279":{"position":[[4,11]]}}}],["neo4j",{"_index":6,"t":{"985":{"position":[[14,5]]}}}],["nosql",{"_index":32,"t":{"1095":{"position":[[0,5]]}}}],["opencyph",{"_index":40,"t":{"1146":{"position":[[3,10]]}}}],["parser",{"_index":14,"t":{"1017":{"position":[[0,6]]}}}],["path",{"_index":31,"t":{"1086":{"position":[[0,4]]},"1256":{"position":[[0,4]]}}}],["planner",{"_index":16,"t":{"1021":{"position":[[0,7]]}}}],["process",{"_index":34,"t":{"1101":{"position":[[31,13]]}}}],["properti",{"_index":9,"t":{"1001":{"position":[[0,8]]}}}],["raft",{"_index":21,"t":{"1065":{"position":[[0,4]]},"1066":{"position":[[3,4]]},"1068":{"position":[[12,4]]}}}],["rank",{"_index":41,"t":{"1237":{"position":[[10,4]]},"1270":{"position":[[0,4]]}}}],["rdf",{"_index":7,"t":{"997":{"position":[[0,3]]},"1005":{"position":[[0,3]]}}}],["schema",{"_index":18,"t":{"1040":{"position":[[3,6]]}}}],["ssd",{"_index":36,"t":{"1115":{"position":[[0,8]]}}}],["start",{"_index":38,"t":{"1127":{"position":[[0,13]]}}}],["storag",{"_index":13,"t":{"1011":{"position":[[10,7]]},"1050":{"position":[[0,7]]},"1052":{"position":[[0,7]]}}}],["trail",{"_index":30,"t":{"1084":{"position":[[0,5]]},"1254":{"position":[[0,5]]}}}],["transfer",{"_index":26,"t":{"1072":{"position":[[7,11]]}}}],["ttl",{"_index":19,"t":{"1042":{"position":[[3,3]]}}}],["us",{"_index":10,"t":{"1003":{"position":[[10,3]]}}}],["valid",{"_index":15,"t":{"1019":{"position":[[0,9]]}}}],["vid",{"_index":37,"t":{"1119":{"position":[[0,3]]},"1121":{"position":[[0,3]]},"1123":{"position":[[0,3]]},"1125":{"position":[[6,3]]},"1127":{"position":[[14,4]]},"1237":{"position":[[4,3]]},"1268":{"position":[[0,3]]}}}],["walk",{"_index":29,"t":{"1082":{"position":[[0,4]]},"1252":{"position":[[0,4]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":931,"t":"使用 CloudFormation 模板创建 NebulaGraph 服务集群时可以按需调节集群组件。本文介绍生产环境中推荐的部署架构。 生产环境中典型的集群架构如下图所示。 上图中的集群包含： 一套跨越三个可用区域的高可用架构。 一个配置了公共子网和私有子网的 VPC（virtual private cloud）网络。 一个用于在多个主机之间均衡流量的网络负载均衡器（Network Load Balancer）。 公共子网中包含： 允许堡垒机等服务连接互联网的 NAT 网关。 一台 Linux 系统的堡垒机，用于支持通过 SSH 方式访问公共子网和私有子网。 用于可视化图查询、图探索和图计算的 Nebula Explorer 服务器。 私有子网中包含： 运行在 graphd 进程中的 NebulaGraph Graph 服务。共有三个 graphd 进程，每个私有网络中一个进程。 运行在 metad 进程中的 NebulaGraph Meta 服务。共有三个 metad 进程，每个私有网络中一个进程。 运行在 storaged 进程中的 NebulaGraph Storage 服务。共有五个 storaged 进程，分布在三个私有网络中。 每个子网一个 EBS（Elastic Block Store）卷。","s":"部署架构","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-architecture/","h":"","p":930},{"i":933,"t":"完成 NebulaGraph 服务集群部署后，用户可以在 Stack 详情页的 Outputs 页签下查看各服务的连接地址。 连接地址包括： BastionIP：堡垒机的弹性 IP 地址。 ExplorerPortal：Nebula Explorer 服务的连接地址。 GraphPrivateIP：Graph 服务的私网 IP 地址。 使用 Nebula Explorer 连接 NebulaGraph 的说明参见连接数据库。 使用客户端连接 NebulaGraph 的说明参见客户端文档。","s":"连接服务","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-connect-to-services/","h":"","p":932},{"i":935,"t":"完成部署准备后即可开始部署 NebulaGraph 服务集群。部署过程耗时约 15 到 20 分钟。 使用拥有必要 IAM 权限的 AWS 账号登录 AWS Console。 根据选定的部署方式，单击在新的 VPC 中部署 NebulaGraph 或在现有 VPC 中部署 NebulaGraph 以指定模板。 检查页面右上角的地域，如有需要则修改地域。默认地域为 us-east-1。 在 Create stack 页面，单击右下角的 Next。 在 Specify stack details 页面，设置 Stack name，即服务集群的名称。 检查页面中的模板参数，根据业务需要和参数下方的详细说明设置或修改相关参数，之后单击页面右下角的 Next。 在 Configure stack options 页面，根据需要设置 Tags、Permissions、Stack failure options 和 Advanced options，之后单击页面右下角的 Next。 各选项的详细说明参见 Setting AWS CLoudFormation stack options。 在 Review 页面，检查模板的设置。在 Capacities 区域，确认须知内容后选中两个复选框。 单击页面右下角的 Create stack，开始部署服务集群。 在 Events 页签中关注 stack 的 Status，当其变为 CREATE_COMPLETE 时，NebulaGraph 服务集群的创建成功。","s":"部署步骤","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-deployment-steps/","h":"","p":934},{"i":937,"t":"NebulaGraph 提供了基于 AWS EC2 的安全、可靠的云服务。用户可以使用 CloudFormation 模板快速部署一整套企业版 NebulaGraph 云服务，包含相应的网络、计算、存储、可视化等服务。","s":"NebulaGraph Cloud AWS 版概览","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-overview/","h":"","p":936},{"i":939,"t":"用户需承担部署和运行 NebulaGraph 服务使用的 AWS 资源相应的费用。 在创建 NebulaGraph 服务集群时，部分配置会影响费用，例如实例规格、存储介质类型、存储空间等。页面下方会显示当前配置的预估费用。 部署 NebulaGraph 服务集群后，用户可以创建成本和使用率报告，AWS会根据报告的设置将计费指标数据发送到指定的AWS S3 存储桶中。这些报告会根据每个月的使用情况提供成本估算，并在月末汇总数据。 除了 AWS 资源，用户还需要为 NebulaGraph 服务申请许可证，并保持许可证有效。申请许可证需要一定的费用。","s":"费用","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-overview/","h":"#费用","p":936},{"i":941,"t":"NebulaGraph Cloud AWS 版使用 NebulaGraph 企业版服务，默认提供有效期 3 天的试用版许可证。许可证到期后服务不可用，数据依然保留在 AWS 资源中。 申请和设置许可证的说明参见设置内核许可证和设置 Explorer 许可证。","s":"许可证","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-overview/","h":"#许可证","p":936},{"i":943,"t":"当前支持的 NebulaGraph 企业版内核版本为 {{cloud.awsRelease}}。","s":"内核版本","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-overview/","h":"#内核版本","p":936},{"i":945,"t":"开始部署 NebulaGraph Cloud AWS 版的服务集群前，用户需要具备相关的 AWS 和 NebulaGraph 知识、准备好 AWS 账号、确认资源情况和选择部署方式。","s":"部署准备","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-planning-deployment/","h":"","p":944},{"i":947,"t":"用户需要熟悉 AWS 的常用服务，尤其是 EC2、VPC 和 EBS。AWS 新用户可以通过 Getting Started Resource Center、AWS Training and Certification 学习相应的知识。","s":"知识准备","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-planning-deployment/","h":"#知识准备","p":944},{"i":949,"t":"用户需准备 AWS 账户。如果没有，在 AWS 主页申请。 部署集群使用的 AWS 账户必须具有使用使用相应资源的 IAM 权限。","s":"账户与权限","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-planning-deployment/","h":"#账户与权限","p":944},{"i":951,"t":"部署前需要在 Service Quotas console 检查 AWS 资源额度，防止资源额度不足导致部署失败。部署一个 NebulaGraph 服务集群需要的资源见下表。 资源 部署需求数 VPC 1 个 弹性 IP 地址 5 到 15 个（由主机数量决定） 安全组 2 个 IAM 角色 2 个 负载均衡器 1 个 EC2 实例（堡垒机） 1 个 EC2 实例（Nebula Explorer 主机） 1 个 EC2 实例（graphd 主机） 1 到 3 个 EC2 实例（metad 主机） 1 或 3 个 EC2 实例（storaged 主机） 1 或 3 或 5 或 7 个 弹性 IP 地址和 EC2 实例的数量由实际部署架构决定。 如果所需资源的额度不足，先申请提升资源额度再部署集群。","s":"资源额度","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-planning-deployment/","h":"#资源额度","p":944},{"i":953,"t":"如需在默认地域（us-east-1）以外部署集群，建议先在 AWS Regional Services 页面确认目标地域支持部署 NebulaGraph 服务集群需要的所有服务。 如果部署时返回错误信息Unrecognized resource type，则该地域不支持部署。","s":"AWS 地域","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-planning-deployment/","h":"#aws-地域","p":944},{"i":955,"t":"确保目标地域存在至少一对 EC2 密钥对。记住需要使用的密钥对名称，部署集群时要通过名称选择密钥对。 如果部署集群的目的是测试或验证概念，建议创建新的密钥对，而不是使用生产实例已经使用的密钥对。","s":"EC2 密钥对","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-planning-deployment/","h":"#ec2-密钥对","p":944},{"i":957,"t":"AWS CloudFormation 提供了两种部署方式： 在新的 VPC 中部署 NebulaGraph。该方式支持构建一个新的 AWS 环境，包括 VPC、子网、NAT 网关、安全组、堡垒机等基础设施组件，NebulaGraph 将被部署在新的 VPC 中。 在现有 VPC 中部署 NebulaGraph。如果决定使用该方式，需确保选定的 VPC 在每个目标可用区都有两个互不共享的私有子网。 用户需在开始部署前决定部署方式，并在部署步骤中指定相应的模板。","s":"部署方式","u":"/zh-Hans/cloud/nebula-cloud-on-aws/aws-planning-deployment/","h":"#部署方式","p":944},{"i":959,"t":"NebulaGraph Cloud（简称 Cloud）是一套集成了 NebulaGraph 数据库和数据服务的云上服务，支持一键部署 NebulaGraph 和相关可视化产品。用户可以在几分钟内创建一个图数据库，并快速扩展计算、存储等资源。 基于阿里云的自管云服务，即 NebulaGraph Cloud 阿里云版。 基于 AWS 的自管云服务，即 NebulaGraph Cloud AWS 版。","s":"什么是 NebulaGraph Cloud","u":"/zh-Hans/cloud/what-is-cloud/","h":"","p":958},{"i":961,"t":"Cloud 支持的最新 NebulaGraph 内核版本为 {{cloud.aliyunRelease}}。","s":"内核版本","u":"/zh-Hans/cloud/what-is-cloud/","h":"#内核版本","p":958},{"i":963,"t":"即买即用。用户可以根据自己的业务发展随时创建或停止 NebulaGraph 实例，业务提供充分的灵活性。 集成可视化图数据库管理工具 Nebula Dashboard、Nebula Explorer。可以使用它们导入图数据集、执行 nGQL 语句查询、探索图数据、监控数据等。即使没有图数据库操作经验，也可以快速成为图专家。 用户可直接使用 Nebula Console 等客户端连接到云上数据库，而不需要先访问云平台。 权限控制。用户可以为指定图空间增加不同角色权限的数据库用户，保证业务数据安全。 官方支持。用户可以快速创建工单，咨询使用过程中遇到的问题。","s":"产品功能","u":"/zh-Hans/cloud/what-is-cloud/","h":"#产品功能","p":958},{"i":965,"t":"灵活与弹性：Cloud 最大的优势在于灵活与弹性，无需自购软硬件即可快速（5-10分钟）搭建 NebulaGraph 数据库。 高可用性：Cloud 上创建的 NebulaGraph 集群采用 Raft 协议，结合云厂商提供的同城多机房实现数据冗余备份，保证云计算基础框架的高可用性、数据的可靠性以及云服务器的高可用性。 操作易用：Cloud 提供 Web 页面对 NebulaGraph 集群进行在线管理，同时提供配套的可视化软件，降低用户使用门槛，快速上手。","s":"产品优点","u":"/zh-Hans/cloud/what-is-cloud/","h":"#产品优点","p":958},{"i":967,"t":"用户也可以观看视频了解 NebulaGraph Cloud。 NebulaGraph Cloud 阿里云版介绍（05 分 37 秒）","s":"视频","u":"/zh-Hans/cloud/what-is-cloud/","h":"#视频","p":958},{"i":969,"t":"NebulaGraph 是一款开源的、分布式的、易扩展的原生图数据库，能够承载数千亿个点和数万亿条边的超大规模数据集，并且提供毫秒级查询。 阅读文档了解更多关于 NebulaGraph 的信息。","s":"NebulaGraph 数据库","u":"/zh-Hans/docs/","h":"","p":968},{"i":971,"t":"本文介绍 Nebula Graph 的数据模型。数据模型是一种组织数据并说明它们如何相互关联的模型。","s":"数据模型","u":"/zh-Hans/docs/introduction/data-model/","h":"","p":970},{"i":972,"t":"Nebula Graph 数据模型使用 6 种基本的数据模型： 图空间（Space） 图空间用于隔离不同团队或者项目的数据。不同图空间的数据是相互隔离的，可以指定不同的存储副本数、权限、分片等。 点（Vertex） 点用来保存实体对象，特点如下： 点是用点标识符（VID）标识的。VID在同一图空间中唯一。VID 是一个 int64，或者 fixed_string(N)。 点可以有 0 到多个 Tag。 !!! Compatibility Nebula Graph 2.x 及以下版本中的点必须包含至少一个 Tag。 边（Edge） 边是用来连接点的，表示两个点之间的关系或行为，特点如下： 两点之间可以有多条边。 边是有方向的，不存在无向边。 四元组 <起点 VID、Edge type、边排序值 (rank)、终点 VID> 用于唯一标识一条边。边没有 EID。 一条边有且仅有一个 Edge type。 一条边有且仅有一个 Rank，类型为 int64，默认值为 0。 !!! 关于 Rank Rank 可以用来区分 Edge type、起始点、目的点都相同的边。该值完全由用户自己指定。 读取时必须自行取得全部的 Rank 值后排序过滤和拼接。 不支持诸如`next(), pre(), head(), tail(), max(), min(), lessThan(), moreThan()`等函数功能，也不能通过创建索引加速访问或者条件过滤。 标签（Tag） Tag 由一组事先预定义的属性构成。 边类型（Edge type） Edge type 由一组事先预定义的属性构成。 属性（Property） 属性是指以键值对（Key-value pair）形式表示的信息。 !!! Note Tag 和 Edge type 的作用，类似于关系型数据库中“点表”和“边表”的表结构。","s":"数据模型","u":"/zh-Hans/docs/introduction/data-model/","h":"#数据模型-1","p":970},{"i":974,"t":"Nebula Graph 使用有向属性图模型，指点和边构成的图，这些边是有方向的，点和边都可以有属性。 下表为篮球运动员数据集的结构示例，包括两种类型的点（player、team）和两种类型的边（serve、follow）。 类型 名称 属性名（数据类型） 说明 Tag player name (string) age（int） 表示球员。 Tag team name (string) 表示球队。 Edge type serve start_year (int) end_year (int) 表示球员的行为。 该行为将球员和球队联系起来，方向是从球员到球队。 Edge type follow degree (int) 表示球员的行为。 该行为将两个球员联系起来，方向是从一个球员到另一个球员。 !!! Note Nebula Graph 中没有无向边，只支持有向边。 !!! compatibility 由于 Nebula Graph {{ nebula.release }} 的数据模型中，允许存在\"悬挂边\"，因此在增删时，用户需自行保证“一条边所对应的起点和终点”的存在性。详见 [INSERT VERTEX](../3.ngql-guide/12.vertex-statements/1.insert-vertex.md)、[DELETE VERTEX](../3.ngql-guide/12.vertex-statements/4.delete-vertex.md)、[INSERT EDGE](../3.ngql-guide/13.edge-statements/1.insert-edge.md)、[DELETE EDGE](../3.ngql-guide/13.edge-statements/4.delete-edge.md)。 不支持 openCypher 中的 MERGE 语句。","s":"有向属性图","u":"/zh-Hans/docs/introduction/data-model/","h":"#有向属性图","p":970},{"i":976,"t":"既然已经讨论了什么是图，接下来让我们进一步认识基于图论和属性图模型发展起来的图数据库。 不同的图数据库在术语方面可能会略有不同，但是归根结底都是在讲点、边和属性。至于更多的功能，例如标签、索引、约束、TTL、长任务、存储过程和UDF等这些高级功能，在不同图数据库中，会存在明显的差异。 图数据库用图来存储数据，而图是最接近高度灵活、高性能的数据结构之一。图数据库是一种专门用于存储和检索庞大信息网的存储引擎，它能够高效地将数据存储为点和边，并允许对这些点边结构进行高性能的检索和查询。我们也可以为这些点和边添加属性。 图数据库几乎适用于存储所有领域的数据。因为在几乎所有领域中，事物之间都是由某种相关联的。图数据库支持存储实体之间的丰富关系，并且能够将这些关系完美地呈现出来，而无需像其他建模方式那样，将关系也当成实体存储。因此图数据库能够以最接近对数据直观认知的形式存储数据。","s":"图数据库的市场概况","u":"/zh-Hans/docs/introduction/graph-database/","h":"","p":975},{"i":979,"t":"根据世界知名的数据库排名网站DB-Engines.com的统计，图数据库至2013年以来，一直是“增速最快”的数据库类别dbe。 该网站根据一些指标来统计每种类别的数据库的流行度变化趋势，这些指标包括基于Google等搜索引擎的收录和趋势情况、主要IT技术论坛和社交网站上讨论的技术话题、招聘网站的职位变化等。该网站共收录了371种数据库产品，并分为12个类别。这12个类别中，图数据库这种类别的增速远远快于其他任何的类别。","s":"DB-Engines 的统计","u":"/zh-Hans/docs/introduction/graph-database/","h":"#db-engines-的统计","p":975},{"i":981,"t":"世界顶级智库Gartner早在2013年之前Gartner1，就将图数据库作为主要的\"商业智能与分析技术趋势\"。在那个时候，Big Data正火热的如日中天，数据科学家更是炙手可热的职位。 直到最近，图数据库及相关的图技术依旧是\"2021年十大数据与分析趋势\"Gartner2: !!! quote \"趋势八：图技术使一切产生关联（Graph Relates Everything）\" 图技术已成为许多现代数据和分析能力的基础，能够在不同的数据资产中发现人、地点、事物、事件和位置之间的关系。数据和分析领导者依靠图技术快速回答需要在了解情况并理解多个实体之间的联系和优势的性质后才能回答的复杂业务问题。 Gartner预测，到2025年图技术在数据和分析创新中的占比将从2021年的10%上升到80%。该技术将促进整个企业机构的快速决策。 可以注意到，Gartner 的预测比较好的吻合了 DB-Engines 的统计结论。技术的进步并不是完全线性的，通常会有一段快速发展的泡沫期，然后进入一段平台期，之后由于新的技术的出现产生新一轮的泡沫期，再经历一段平台期。以此往复螺旋形的循环发展。","s":"Gartner 的预测","u":"/zh-Hans/docs/introduction/graph-database/","h":"#gartner-的预测","p":975},{"i":983,"t":"根据 verifiedmarketresearcver, fnfresearchfnf, marketsandmarketsmam, 以及 gartnergar 等智库的统计和预测，图数据库市场（包括云服务）规模在2019年大约是8亿美元，将在未来6年保持25%左右的年复合增长(CAGR)至 30-40 亿美元，这大约对应于全球数据库市场 5-10% 的市场份额。","s":"对于市场规模的预测","u":"/zh-Hans/docs/introduction/graph-database/","h":"#对于市场规模的预测","p":975},{"i":986,"t":"虽然在 1970 年代，人们已经提出了一些类似于\"图”的数据模型和产品原型（例如 CODASYLDDIA)和相应的图语言 G/G+ 语言Glang。但真正能够让“图数据库”这个概念流行起来，不得不说到这个市场最主要的先行者 Neo4j，甚至(标签)属性图和图数据库这两个主要术语就是 Neo4j 最早提出并实践的。 !!! Info \"本小节关于Neo4j和其创造的图查询语言Cypher的历史内容主要摘录自 ISO WG3 的工作论文\"An overview of the recent history of Graph Query Languages\"Tobias2018 和Glang，本书作者根据最新两年的进展有删减和更新。\" !!! Note \"关于图查询语言(Graph Query Language，GQL) 和国际标准的制定\" 熟悉数据库的读者可能都知道结构化查询语言SQL。通过使用SQL，人们以接近自然语言的方式访问数据库。在 SQL 被广泛采用和标准化之前，关系型数据库的市场是非常碎片和割裂的——各家厂商的产品都有完全不同的接入访问方式，数据库产品自身的开发人员、数据库产品周边工具的开发人员、数据库最终的使用人员，都不得不学习各个厂商的完全不同的产品，在不同产品之间迁移极其困难。当1989年SQL-89标准被制定后，整个关系型数据库的市场快速收敛到SQL-89上。这大大降低了上述各种人员的学习曲线。 类似的，在图数据库领域，图语言(GQL)承担了类似于SQL的作用，是一种用户与图数据库主要的交互方式。但不同于SQL-89这种国际标准，GQL还没有任何国际标准。目前有两种主流的图语言： Neo4j的Cypher (及其后续——ISO正在制定过程中的 GQL-standard 草案)和Apache TinkerPop的Gremlin。前者通常被称为声明式语言(Declarative query language)——也即用户只需要告诉系统“要什么”，而不管“怎么做”；后者通常被称为命令式语言(Imperative query language)，用户会显式地指定系统的操作。 GQL国际标准正在制定过程中。 年表简述​ 2000 年，Neo4j 的创始人产生将数据建模成网络（network）的想法。 2001 年，Neo4j 开发了最早的核心部分代码。 2007 年，Neo4j 开始以一个公司的方式运作。 2009 年，Neo4j 团队借鉴 XPath 作为图查询语言，GremlinGremlin最初也是基于这个想法。 2010 年，Neo4j 的员工 Marko Rodriguez 采用术语属性图（Property Graph）来描述 Neo4j 和 Tinkerpop / Gremlin 的数据模型。 2011 年，第一个公开发行版本 Neo4j 1.4; 并发布了Cypher的第一个版本。 2012 年，Neo4j 1.8 为 Cypher 增加写入图的能力。Neo4j 2.0 增加了标签和索引，Cypher 成为一种声明式的语言。 2015 年，Neo4j 将 Cypher 开源为 openCypher。 2017 年，ISO WG3 工作组开始讨论如何将属性图查询能力引入 SQL。 2018 年 12 月，从 Neo4j 3.5 开始其核心部分转为闭源。 2019 年, ISO 正式立项两个项目(ISO/IEC JTC 1 N 14279和ISO/IEC JTC 1/SC 32 N 3228），启动关于图数据库语言国际标准的制定工作。 2021 年，Neo4j 完成 F 轮 3.25 亿美元的融资，是整个数据库（包括关系型）历史上最大一轮融资。 Neo4j 的早期历史​ Neo4j 和属性图这种数据模型，最早构想于 2000 年。Neo4j 的创始人们当时在开发一个媒体管理系统，所使用的数据库的 schema 经常会发生重大变化。为了支持这种灵活性，Neo4j 的联合创始人 Peter Neubauer，受到 Informix Cocoon 的启发，希望将系统能够建模为一种概念相互连接的网络。印度理工学院孟买分校的一群研究生们实现了最早的原型。Neo4j 的联合创始人 Emil Eifrém 和这些学生们花了一周的时间，将 Peter 最初的想法扩展成为一个更抽象的模型：节点通过关系连接，key-value 作为节点和关系的属性。这群人开发了一个 Java API 来和这种数据模型交互，并在关系型数据库之上实现了一个抽象层。 虽然这种网络模型极大的提高了生产力，但是性能一直很差。所以 Neo4j 联合创始人 Johan Svensson 花了不少精力，为这种网络模型实现了一个原生的数据管理系统。这个就成为了 Neo4j。在最初的几年，Neo4j 作为一个内部产品很成功。在 2007 年，Neo4j 的知识产权转移给了一家独立的数据库公司。 在 Neo4j 的第一个公开发行版中（Neo4j 1.4，2011 年），数据模型由节点和有类型的边构成，节点和边都有 key-value 组成的属性。Neo4j 的早期版本没有任何的索引，应用程序只能从根节点开始自己构造查询结构（search structure）。因为这样对于应用程序非常笨重，Neo4j 2.0（2013.12）引入了一个新概念——点上的标签（label）。基于点标签，Neo4j 可以为一些预定义的节点属性建立索引。 \"节点\"、\"关系\"、\"属性\"、\"关系只能有一个标签\"、\"节点可以有零个或者多个标签\"，以上这些概念构成了 Neo4j 属性图的数据模型定义。随着后来增加的索引功能，让 Cypher 成为了与 Neo4j 交互的主要方式。因为这样应用程序开发者只需要关注于数据本身，而不是上段提到的那个开发者自己构建的查询结构（search structure）。 Gremlin 的创造​ Gremlin是基于Apache TinkerPop开发的图语言，其风格接近于一连串的函数（过程）调用。最初 Neo4j 的查询方式是通过 Java API。应用程序可以将查询引擎作为库(library)嵌入到应用程序中，然后使用 API 来查询图。 就在这段时间，NOSQL 这个概念开始出现。NOSQL 型的数据库引擎一般用 REST 和 HTTP 来交互和查询。Neo4j 的早期员工 Tobias Lindaaker、Ivarsson、Peter Neubauer 、Marko Rodriguez用 XPath 作为图查询，Groovy 提供循环结构，分支和计算（等图灵完毕的功能）。 这个就是 Gremlin 最初的原型。 2009 年 11 月发布了第一个版本。 后来，Marko 发现同时用两种不同的解析器（XPath 和 Groovy）有很多问题，就将 Gremlin 改为基于 Groovy 的一种领域特定语言（DSL）。 Cypher 的创造​ Gremlin 和 Neo4j 的 Java API 一样，最初用于表达如何查询数据库的一种过程（Procedural）。它允许更短的语法来表达查询，也允许通过网络远程访问数据库。Gremlin 这种过程式的特性，需要用户知道如何采用最好的办法查询结果，这样对于应用程序开发人员来说仍旧有负担。与此同时，在过去30年中，声明式语言 SQL 取得了极大的成功：SQL 可以将“获取数据的声明方式”和“引擎如何获取数据”相分开，所以 Neo4j 的工程师们希望开发一种声明式的图查询语言。 2010 年，Andrés Taylor 作为工程师加入 Neo4j。受 SQL 启发，他启动了一个项目来开发图查询语言，而这种新语言于 2011 年 Neo4j 1.4 发布，这种新语言就是如今大多数图查询语言的先祖——Cypher 。 Cypher 的语法基础，是用 \"ASCII艺术(ASCII art)\" 来描述图模式。这种方式最初来源于 Neo4j 工程师团队在源代码中评注如何描述图模式。可以看下图的例子： ASCII art 简单说，就是如何用可打印文本来描述点和边。Cypher 文本用()表示点，-[]->表示边。(query)-[modeled as]->(drawing) 来表示起点 query，终点 drawing，边 modeled as，这样一个最简单的图关系(也可以称为图模式)。 Cypher 第一个版本实现了对图的读取，但是需要用户说明从哪些节点开始查询。只有从这些节点开始，才可以支持图的模式匹配。 在后面的版本，2012 年 10 月发布的 Neo4j 1.8 中，Cypher 增加了修改图的能力。但查询还是需要指明从哪些节点开始。 2013 年 12 月，Neo4j 2.0 引入了 label 的概念，label 本质上是个索引。这样，查询引擎就可以利用索引，来选择模式所匹配到的节点，而不需要用户指定开始查询的节点。 随着 Neo4j 的普及，Cypher 有着广泛的开发者群体，在各行各业的得到广泛的使用。至今仍是最受欢迎的图查询语言。 2015 年 9 月，Neo4j 发起成立了 openCypher Implementors Group（oCIG），将 Cypher 开放为 openCypher，通过开源的方式来治理和推进语言自身的演化。 后续​ Cypher 启发了一系列后续的图查询语言，包括 2015 年，Oracle 发布图引擎PGX使用的图语言PGQL。 2016 年，Linked Data Benchmarking Council, LDBC 是一个行业知名的图性能基准评测机构。LDBC 发布 G-CORE 2018 年，基于 Redis 的图库(library) RedisGraph 采用 Cypher 作为其图语言 2019 年，国际标准组织 ISO 启动两个项目，基于 openCypher, PGQL, GSQLGSQL, and G-CORE 等现有业界成果，启动图语言国际标准的制定过程 2019 年，Nebula Graph 以 openCypher 为基础发布其扩展的图语言 Nebula Graph Query Language, nGQL。","s":"（第一代）图数据库的先行者 Neo4j","u":"/zh-Hans/docs/introduction/graph-database/","h":"#第一代图数据库的先行者-neo4j","p":975},{"i":988,"t":"大约 2005-2010 年，随着 Google 云计算\"三驾马车\"的发布，各种分布式的架构开始越来越流行，其中就包括以开源方式运作的 Hadoop 和 Cassandra 等。这里包括几个方面的影响： 由于数据量和计算量越来越大，相比于单机(例如 Neo4j)或者小型机这种方案，分布式系统的技术和成本优势更加明显；而同时，分布式系统使得应用程序在访问这成千上万台机器时，就如同访问本地的系统一样，不需要在代码层面进行过多改造； 开源方式使得更多的人（包括代码开发者、数据科学家、产品经理等）以更加低成本和有效的方式参与新兴的技术，并反馈给社区。 严格说，Neo4j 也提供了不少的分布式的能力，但都和业界意义上的（对等、分片的）分布式系统有较大的不同: Neo4j 3.X 要求全量数据必须存放在单机中。虽然其也提供多机之间(Master-slave/slave)做全量复制和高可用，但数据不可切分为不同子图存放。 Neo4j 4.X 允许在不同机器上各存放一部分数据（子图），然后在应用层需通过一定方式拼装后(其称为编织 Fabric)fosdem20，将读写分发到各个机器上。这种做法需要应用层代码有大量的参与和工作。例如，设计如何把不同子图应该放置在哪些机器上，如何将从各机器获取的部分结果重新编织为最终的结果。 其语法风格大体是 USE graphA # S1.1 从 Shard A 读 MATCH (movie:Movie) Return movie.title AS title UNION # S2. 在代理服务器 Join 结果 USE graphB # S1.2 从 Shard B 读 MATCH （move:Movie) RETURN movie.title AS title 第二代（分布式）图数据库：Titan 和其后继者 JanusGraph​ 2011 年，Aurelius 公司成立，致力于开发一个开源的分布式图数据库 Titantitan。到 2015 年 Titan 的第一个正式版发布，Titan 后端可以支持多种主流的分布式存储架构（例如 Cassandra, HBase, Elasticsearch, BerkeleyDB)，并可以复用 Hadoop 生态的诸多便利，前端以 Gremlin 为统一的查询语言。对于程序员使用、开发和社区参与都很方便。大规模的图，可以分片后存放在 HBase 或者 Cassarndar上(这些当时都已经是相对成熟的分布式存储方案)，Gremlin 语言虽然略微冗长但相对功能完备。整个方案在当时(2011-2015)体现了不错的竞争力。 下图显示了 2012年 - 2015 年，Titan 和 Neo4j 在 GitHub.com 上 star 的增长情况。 2015 年 Aurelius(Titan) 被 DataStax 收购，这之后 Titan 逐渐转变为一个闭源的商业产品 (DataStax Enterprise Graph)。 在 Aurelius(Titan) 被收购后，市场对于开源分布式的图数据库一直仍有比较强烈的需求，而当时市场上成熟和活跃的产品并不多。大数据时代，数据仍在远快于摩尔定律的速度，源源不断的产生。Linux 基金会以及一些技术巨头(Expero, Google, GRAKN.AI, Hortonworks, IBM and Amazon) 在2017年，复制并分叉(fork)了原有的Titan项目，并启动为一个新项目 JanusGraphJanus。之后大多数的社区工作，包括开发、测试、发布和推广都逐步转移到了新的 JanusGraph。 下图显示了两个项目2012-2021年日常代码提交(pull request)的变化情况，可以观察到几点： 即使 Aurelius(Titan) 2015 年被收购后，其开源代码仍有一定的活跃度(左侧)，但增速已经明显放缓。这体现了社区的力量。 新项目 JanusGraph 项目在 2017 年 1 月启动后，其社区迅速活跃起来，短短一年时间就超越了 Titan 过去 5 年累计的 pull request 数量。而与此同时，Titan 开源项目就此停滞。 同期知名产品 OrientDB, TigerGraph, ArangoDB, 和 DGraph​ 此后更多的厂商加入整个市场，除了由Linux基金会托管的 JanusGraph，还有一些由商业公司主导开发的分布式图数据，各方采用的数据模型和访问方式也有明显的不同。 本文不做一一介绍，仅简单列出主要区别。 厂商名 创立时间 核心产品名 开源协议 数据模型 查询语言 OrientDB LTD (2017 年 被 SAP 收购) 2011 OrientDB 开源 文档 + KV + 图 OrientDB SQL (基于SQL扩展的图能力) GraphSQL (后改名 TigerGraph) 2012 TigerGraph 商业版本 图(分析) GraphSQL (类SQL风格) ArangoDB GmbH 2014 ArangoDB Apache License 2.0 文档 + KV + 图 AQL (同时操作文档, KV 和图) DGraph Labs 2016 DGraph Apache Public License 2.0 + Dgraph Community License 原 RDF，后改为 GraphQL GraphQL+- 传统巨头微软、亚马逊和甲骨文纷纷入场​ 除了聚焦于图产品的厂商外，传统巨头也纷纷进入这个领域。 Microsoft Azure Cosmos DBcosmos 是一个在微软云上的多模数据库云服务，可以提供SQL、文档、图、key-value等多种能力； Amazon AWS Neptuneneptune 是一种由 AWS 提供图数据库云服务, 可以提供属性图和 RDF 两种数据模型； Oracle graphOracle 是关系型数据库巨头 Oracle 在图技术与图数据库方向的产品。 新一代开源分布式图数据库 Nebula Graph​ 在下一章，我们将正式介绍新一代开源分布式图数据库 Nebula Graph。 https://db-engines.com/en/ranking_categories↩ https://www.yellowfinbi.com/blog/2014/06/yfcommunitynews-big-data-analytics-the-need-for-pragmatism-tangible-benefits-and-real-world-case-165305↩ https://www.gartner.com/smarterwithgartner/gartner-top-10-data-and-analytics-trends-for-2021/↩ https://www.verifiedmarketresearch.com/product/graph-database-market/↩ https://www.globenewswire.com/news-release/2021/01/28/2165742/0/en/Global-Graph-Database-Market-Size-Share-to-Exceed-USD-4-500-Million-By-2026-Facts-Factors.html↩ https://www.marketsandmarkets.com/Market-Reports/graph-database-market-126230231.html↩ https://www.gartner.com/en/newsroom/press-releases/2019-07-01-gartner-says-the-future-of-the-database-market-is-the↩ https://www.amazon.com/Designing-Data-Intensive-Applications-Reliable-Maintainable/dp/1449373321↩ I. F. Cruz, A. O. Mendelzon, and P. T. Wood. A Graphical Query Language Supporting Recursion. In Proceedings of the Association for Computing Machinery Special Interest Group on Management of Data, pages 323–330. ACM Press, May 1987.↩ \"An overview of the recent history of Graph Query Languages\". Authors: Tobias Lindaaker, U.S. National Expert.Date: 2018-05-14 ↩ Gremlin是基于Apache TinkerPop开发的图语言(https://tinkerpop.apache.org/)。↩ https://docs.tigergraph.com/dev/gsql-ref↩ https://neo4j.com/fosdem20/↩ https://github.com/thinkaurelius/titan↩ https://github.com/JanusGraph/janusgraph↩ https://azure.microsoft.com/en-us/free/cosmos-db/↩ https://aws.amazon.com/cn/neptune/↩ https://www.oracle.com/database/graph/↩","s":"分布式图数据库","u":"/zh-Hans/docs/introduction/graph-database/","h":"#分布式图数据库","p":975},{"i":990,"t":"当前，从计算机行业巨头（例如 Amazon 和 Facebook）到小型研究团队，都投入了大量的资源探索图数据库在解决各种数据关系问题上的潜力。当然你也可以选择像他们这样进行尝试，现在可供选择的数据库有很多。那么图数据库究竟是什么？它可以做些什么？作为一类数据库，它在数据库领域里处于什么位置呢？要回答这些问题，我们首先得了解图。 图是计算机科学研究的主要领域之一。图能够高效地解决目前存在的诸多问题。本章将从图说起，继而说明图数据库的优点及其在现代应用程序开发中的巨大潜力，然后介绍分布式图数据库的区别和几种其他类型的数据库。","s":"图","u":"/zh-Hans/docs/introduction/graph/","h":"","p":989},{"i":992,"t":"图无处不在。当听到图这个词时，很多人都会想到条形图或折线图，因为有时候我们确实会把它们称作图。从传统意义上来说，图是用来展示两个或多个数据系统之间的联系的。最简单的例子如下图，下图展示了 Nebula Graph GitHub 仓库星星数量随时间推移的变化。 这是相对比较简单的一种图，横轴为时间，纵轴为星星数量。可以看到，星星数量是随着时间推移而上升的。这种类型的图通常称为折线图。折线图可以显示随时间（根据常用比例设置）而变化的连续数据。此处我们只给出了折线图的例子。当然图的形式有多种，比如饼图、条形图等。 还有一种“图”在日常口语中会更多的被提及，例如，“图像识别”，“美图秀”，“修图”等。例如下“图”的左边。 但是——总会有但是——我们在本书中讨论的图是另外一个概念——“图论”中的图。 在数学的分支图论中，图是基本研究对象，用于表示实体与实体之间的关系。一张图由一些小圆点（称为顶点或节点，即 Vertex）和连接这些圆点的直线或曲线（称为边，即 Edge）组成。“图（Graph）”这一名词最早由西尔维斯特在 1878 年提出。 通常，在英文中，为了区分这两种不同的图，前者会称为 Image，后者称为 Graph。在中文中，前者会强调为“图片”，后者会强调为“拓扑图”、“网络图”等。 这才是本书所说的图。 简单来说，图论就是研究图的学问。图论始于 18 世纪初期的柯尼斯堡七桥问题。柯尼斯堡当时是普鲁士的城市（现在属于俄罗斯，更名为加里宁格勒）。普雷格尔河穿过柯尼斯堡，不仅把柯尼斯堡分成了两部分，而且还在河中间形成了两个小岛。这就将整个城市分割成了四个区域，各区域由七座桥连接。当时有一个与柯尼斯堡相关的小游戏，即如何只穿过每座桥一次，浏览整个城市的四个区域。下图为柯尼斯堡七座桥的简化图。 有兴趣的话可以试试寻找这个小游戏的答案171。 大数学家欧拉为了解决了这一问题。通过将城市的四个区域抽象成点，将连接城市的七座桥抽象成连接点的边，欧拉证明了这一问题是无法解决的。简化的抽象图如下063： 图中四个点代表柯尼斯堡的四个区域，点之间的线代表连接四个区域的七座桥。从图中不难看出，偶数座桥连接的区域可以轻松通过，因为来去可以选择不同的路线。奇数座桥连接的区域只能作为起点或者终点，因为同样的路线只能走一次。和节点相关联的边的条数称为节点度。现在可以证明，只有两个节点有奇数度，另外节点有偶数度时，也即两个区域必须有偶数座桥，剩下的区域有奇数座桥时，柯尼斯堡问题才能解决。然而由上图得知，柯尼斯堡的任何区域都没有偶数座桥，所以这个谜题无解。","s":"图、图片与图论","u":"/zh-Hans/docs/introduction/graph/","h":"#图图片与图论","p":989},{"i":994,"t":"从数学角度来说，图论是研究建模对象之间关系结构的学科。但是从工业界使用的角度，通常会对基础的图模型进行扩展，称为属性图模型。属性图通常由以下几部分组成： 节点，即对象或实体。在本书中，通常简称为点（Vertex）。 节点之间的关系，在本书中，通常简称为边（Edge）。通常边是有方向或者无方向的，以表示两个实体之间有持续的关系。 此外，在节点和边上，还可以有属性（properties）。 在现实生活中，有很多属性图的例子。 例如企查查或者 BOSS 直聘这类的公司，用图来建模商业股权关系网络。这个网络中，点通常是一个自然人或者是一家企业，边通常是某自然人与某企业之间的股权关系。点上的属性可以是自然人姓名、年龄、身份证号等。边上的属性可以是投资金额、投资时间、董监高等职位关系。 在一个股票市场里面，点可以是一家上市公司，边可以是上市公司之间的相关性。点的属性可以为股票代码、简称、市值、板块等；边的属性可以为股价的时间序列相关性系数T01。 图关系还可以是类似《权力的游戏》这样电视剧中的人物关系网s-01：点为人物，边为人物之间的互动关系；点的属性为人物姓名、年龄、阵营等，边的属性（距离）为两个人物之间的互动次数，互动越频繁距离越近。 图也可以用于 IT 系统内部的治理。例如，对于像微众银行这样的公司，通常有着非常庞大的数据仓库，以及相应的数仓管理工具。这些管理工具记录了数仓内 Hive 表之间通过 Job 实现的 ETL 关系ware，这样的 ETL 关系，可以非常方便的用图的形式呈现和管理，当出现问题时也可以非常方便地追溯根源。 图也可以用于记录一个大型 IT 系统内部错综复杂的微服务之间的调用关系tice，运维团队用其进行服务治理。这里每个点表示一个微服务，边表示两个微服务之间的调用关系；这样，运维人员可以方便地寻找可用性低于阈值 (99.99%) 的调用链路，或者发现那些出故障会影响面特别大的微服务节点。 图也可以用于提升代码开发效率。用图存放代码之间的函数调用关系tice，可以提升研发团队审查和测试代码的效率。在这样的图中，每个点是代码中的一个函数或者变量，每个边是函数或者变量之间的调用关系。当有新提交的代码之时，人们可以更方便的看到可能会受到影响到的其他接口，这样可以帮助测试人员更好的评估潜在的上线风险。 此外，相对于静态不发生变化的属性图，我们还可以通过增加一些时间信息，发掘出更多的使用场景。 例如，在一个银行间账户资金流向网络里面1440w，点是账户，边是账户之间的转账记录。边属性记录了转账的时间、金额等。同盾、邦盛、半云科技等公司采用图技术，可以方便地通过图的方式探索发现明显的资金挪用、“以贷还贷”、“团伙贷款”等现象。 同样的方法也可以用于探索发现加密货币的流向。 在一个黑产账户和设备网络中360，其中的点可以是账户、手机设备和 WIFI 网络，边是这些账户与手机设备之间的登录关系，以及手机设备和 WIFI 网络之间的接入关系。 这些登录记录的网络构成了黑产群体网络的团伙作案特征。360 数科360、快手kuaishou、微信weixin、知乎zhihu、携程金融这些公司都通过图技术实时（毫秒级的）识别超过百万个的黑产社群。 更进一步，除了时间这个维度外，我们通过添加一些地理位置信息，还能发现属性图更多的应用场景。 例如新冠病毒的流行病学溯源CoV02，点是人物，边是人与人之间的接触；点属性为人物的身份证、发病时间等信息，边属性为人物之间发生密切接触的时间和地理位置等。为卫生防疫部门快速识别高风险人群和其行为轨迹提供帮助。 地理位置与图的结合也可以用于一些 O2O 的场景，例如基于 POI（Point-of-Interest）的实时美食推荐mt，使得美团这类本地生活服务平台公司能在消费者在打开 APP 的时候，实时推荐出更为合适的商家。 图还可以用于更深度的知识推理，华为、vivo、OPPO、微信、美团等公司，将图用于表征底层知识关系的数据模型。","s":"属性图","u":"/zh-Hans/docs/introduction/graph/","h":"#属性图","p":989},{"i":996,"t":"虽然关系型数据库与 XML/JSON 等半结构类型的数据库，都可以用来描述图结构的数据模型，但是，图（数据库）不仅可以描述图结构与存储数据本身，更着眼于处理数据之间的关联（拓扑）关系。具体来说，图（数据库）有这么几个优点： 图是一种更直观、更符合人脑思考直觉的知识表示方式。这使得我们在抽象业务问题时，可以着眼于“业务问题本身”，而不是“如何将问题描述为数据库的某种特定结构（例如表格结构）”。 图更容易展现数据的特征，例如转账的路径、近邻的社区。例如，如果要分析《权力的游戏》中的人物派别关系和人物重要性，表的组织方式如下： 这显然不如下方图的组织方式直观： 特别是当某些中心节点被删除： 或者，增加一条边，可以彻底地改变整个图拓扑： 虽然只是个别数据的细微改变，图可以比表更直观地表现其中的重要而系统的信息。 图查询语言是针对图结构访问设计的，可以更加直观。例如，下面是一个 LDBC 中的查询示例，要求：查找某人（Person）在社交网络上发布的帖子（Posts）；查找相应的回复（Message，回复本身还会被多次回复）;发帖时间、回帖时间都满足一定条件；根据回帖数量对结果排序。 如果使用 PostgreSQL 编写查询语句： --PostgreSQL WITH RECURSIVE post_all(psa_threadid , psa_thread_creatorid, psa_messageid , psa_creationdate, psa_messagetype ) AS ( SELECT m_messageid AS psa_threadid , m_creatorid AS psa_thread_creatorid , m_messageid AS psa_messageid , m_creationdate, 'Post' FROM message WHERE 1=1 AND m_c_replyof IS NULL -- post, not comment AND m_creationdate BETWEEN :startDate AND :endDate UNION ALL SELECT psa.psa_threadid AS psa_threadid , psa.psa_thread_creatorid AS psa_thread_creatorid , m_messageid, m_creationdate, 'Comment' FROM message p, post_all psa WHERE 1=1 AND p.m_c_replyof = psa.psa_messageid AND m_creationdate BETWEEN :startDate AND :endDate ) SELECT p.p_personid AS \"person.id\" , p.p_firstname AS \"person.firstName\" , p.p_lastname AS \"person.lastName\" , count(DISTINCT psa.psa_threadid) AS threadCount END) AS messageCount , count(DISTINCT psa.psa_messageid) AS messageCount FROM person p left join post_all psa on ( 1=1 AND p.p_personid = psa.psa_thread_creatorid AND psa_creationdate BETWEEN :startDate AND :endDate ) GROUP BY p.p_personid, p.p_firstname, p.p_lastname ORDER BY messageCount DESC, p.p_personid LIMIT 100; 如果使用为图专门设计的图语言 Cypher 编写查询语句： --Cypher MATCH (person:Person)<-[:HAS_CREATOR]-(post:Post)<-[:REPLY_OF*0..]-(reply:Message) WHERE post.creationDate >= $startDate AND post.creationDate <= $endDate AND reply.creationDate >= $startDate AND reply.creationDate <= $endDate RETURN person.id, person.firstName, person.lastName, count(DISTINCT post) AS threadCount, count(DISTINCT reply) AS messageCount ORDER BY messageCount DESC, person.id ASC LIMIT 100 由于存储引擎和查询引擎可以针对图的结构专门设计，图的遍历（对应 SQL 中的 join）要高效得多。下图是知名产品 Neo4j 所做的一个对比mt。 图数据库具有广泛的适用场景。例如数据集成（知识图谱）、个性化推荐、欺诈与威胁检测、风险分析与合规、身份（与控制权）验证、IT 基础设施管理、供应链与物流、社交网络研究等。 根据文献Ubiquity 的统计，使用图技术最多的领域，依次是：信息技术(IT)、学术界研究、金融、工业界实验室、政府、医疗健康、国防、制药业、零售与电子商务、交通运输、电信、保险。 2019 年，根据 Gartner 的问卷调研，27% 的客户（500 组）在使用图数据库，20% 有计划使用。","s":"为什么要使用图数据库","u":"/zh-Hans/docs/introduction/graph/","h":"#为什么要使用图数据库","p":989},{"i":998,"t":"受篇幅所限，本章不讨论 RDF 数据模型。 s of graph databases and their great potential in modern application development, and then describe the differences between distributed graph databases and several other types of databases.","s":"RDF","u":"/zh-Hans/docs/introduction/graph/","h":"#rdf","p":989},{"i":1000,"t":"Graphs are everywhere. When hearing the word graph, many people think of bar charts or line charts, because sometimes we call them graphs, which show the connections between two or more data systems. The simplest example is the following picture, which shows the number of Nebula Graph GitHub repository stars over time. This type of diagram is often called a line chart. As you can see, the number of starts rises over time. A line chart can show data changes over time (depending on the scale settings). Here we have given only examples of line charts. There are various graphs, such as pie charts, bar charts, etc. Another kind of diagram is often used in daily conversation, such as image recognition, retouched photos. This type of diagram is called a picture/photo/image. The diagram we discuss in this topic is a different concept, the graph in graph theory. In graph theory, a branch of mathematics, graphs are used to represent the relationships between entities. A graph consists of several small dots (called vertices or nodes) and lines or curves (called edges) that connect these dots. The term graph was proposed by Sylvester in 1878. The following picture is what this topic calls a graph. Simply put, graph theory is the study of graphs. Graph theory began in the early 18th century with the problem of the Seven Bridges of Königsberg. Königsberg was then a Prussian city (now part of Russia, renamed Kaliningrad). The river Preger crossed Königsberg and not only divided Königsberg into two parts, but also formed two small islands in the middle of the river. This divided the city into four areas, each connected by seven bridges. There was a game associated with Königsberg at the time, namely how to cross each bridge only once and navigate the entire four areas of the city. A simplified view of the seven bridges is shown below. Try to find the answer to this game if you are interested 171. To solve this problem, the great mathematician Euler proved that the problem was unsolvable by abstracting the four regions of the city into points and the seven bridges connecting the city into edges connecting the points. The simplified abstract diagram is as follows 063. The four dots in the picture represent the four regions of Königsberg, and the lines between the dots represent the seven bridges connecting the four regions. It is easy to see that the area connected by the even-numbered bridges can be easily passed because different routes can be chosen to come and go. The areas connected by the odd-numbered bridges can only be used as starting or endings points because the same route can only be taken once. The number of edges associated with a node is called the node degree. Now it can be shown that the Königsberg problem can only be solved if two nodes have odd degrees and the other nodes have even degrees, i.e., two regions must have an even number of bridges and the remaining regions have an odd number of bridges. However, as we know from the above picture, there is no even number of bridges in any region of Königsberg, so this puzzle is unsolvable.","s":"What are graphs?","u":"/zh-Hans/docs/introduction/graph/","h":"#what-are-graphs","p":989},{"i":1002,"t":"From a mathematical point of view, graph theory studies the relationships between modeled objects. However, it is common to extend the underlying graph model. The extended graphs are called the attribute graph model. A property graph usually consists of the following components. Node, an object or entity. In this topic, nodes are called vertices. Relationship between nodes. In this topic, relationships are called edges. Usually, the edges can be directed or undirected to indicate a relationship between two entities. There can be properties on nodes and edges. In real life, there are many examples of property graphs. For example, Qichacha or BOSS Zhipin use graphs to model business equity relationships. A vertex usually represents a natural person or a business, and the edge represents the equity relationship between a person and a business. The properties on vertices can be the name, age, ID number, etc. of the natural person. The properties on edges can be the investment amount, investment time, position such as director and supervisor. A vertex can be a listed company and an edge can be a correlation between listed companies. The vertex property can be a stock code, abbreviation, market capitalization, sector, etc. The edge property can be the time-series correlation coefficient of the stock price T01. The graph relationship can also be similar to the character relationship in a TV series like Game of Thrones s-01. Vertices stand for the characters. Edges represent the interactions between the characters. Vertex properties are the character's names, ages, camps, etc., and edge properties are the number of interactions between two characters. Graphs are also used for governance within IT systems. For example, a company like WeBank has a very large data warehouse and corresponding data warehouse management tools. These management tools record the ETL relationships between the Hive tables in the data warehouse through Job implementation ware. Such ETL relationships can be very easily presented and managed in the form of graphs, and the root cause can be easily traced when problems arise. Graphs can also be used to document the invocation relationships between the intricate microservices within a large IT system tice, which is used by operations teams for service governance. Here each point represents a microservice and the edge represents the invocation relationship between two microservices; thus, Ops can easily find invocation links with availability below a threshold (99.99%) or discover microservice nodes that would be particularly affected by a failure. Graphs are also used to record the invocation relationships between the intricate microservices tice. Each vertex represents a microservice and an edge represents the invocation relationship between two microservices. This allows Ops to easily find call links with availability below a threshold (99.99%), or to discover microservice nodes where a failure would have a particularly large impact. Graphs can also be used to improve the efficiency of code development. Graphs store function call relationships between codes tice to improve the efficiency of reviewing and testing the code. In such a graph, each vertex is a function or variable, each edge is a call relationship between functions or variables. When there is a new code commit, one can more easily see other interfaces that may be affected, which helps testers better assess potential go-live risks. In addition, we can discover more scenarios by adding some temporal information as opposed to a static property graph that does not change. For example, inside a network of interbank account fund flows 1440w, a vertex is an account, an edge is the transfer record between accounts. Edge properties record the time, amount, etc. of the transfer. Companies can use graph technology to easily explore the graph to discover obvious misappropriation of funds, paying back a load to with the loan, loan gang scams, and other phenomena. The same approach can be used to explore the discovery of the flow of cryptocurrencies. In a network of accounts and devices 360, vertices can be accounts, mobile devices, and WIFI networks, edges are the login relationships between these accounts and mobile devices, and the access relationships between mobile devices and WIFI networks. These graph data records the characteristic of the network black production operations. Some big companies such as 360 DigiTech360, Kuaishoukuaishou, WeChatweixin, Zhihuzhihu, and Ctrip Finance all identified over a million crime groups through technology. In addition to the dimension of time, you can find more scenarios for property graphs by adding some geographic location information. For an example of tracing the source of the Coronavirus Disease (COVID-19) CoV02, vertices are the person and edges are the contact between people. Vertex properties are the information of the person's ID card and onset time, and edge properties are the time and geographical location of the close contact between people, etc. It provides help for health prevention departments to quickly identify high-risk people and their behavioral trajectories. The combination of geographic location and graph is also used in some O2O scenarios, such as real-time food recommendation based on POI (Point-of-Interest) mt, which enables local life service platform companies like Meituan to recommend more suitable businesses in real-time when consumers open the APP. A graph is also used for knowledge inference. Huawei, Vivo, OPPO, WeChat, Meituan, and other companies use graphs for the representation of the underlying knowledge relationships.","s":"Property graphs","u":"/zh-Hans/docs/introduction/graph/","h":"#property-graphs","p":989},{"i":1004,"t":"Although relational databases and semi-structured databases such as XML/JSON can be used to describe a graph-structured data model, a graph (database) not only describes the graph structure and stores data itself but also focuses on handling the associative relationships between the data. Specifically, graph databases have several advantages: Graphs are a more visual and intuitive way of representing knowledge to human brains. This allows us to focus on the business problem itself rather than how to describe the problem as a particular structure of the database (e.g., a table structure). It is easier to show the characteristic of the data in graphs. Such as transfer paths and nearby communities. To analyze the relationships of characters and character importance in Game of Thrones, data displayed with tables is not as intuitive as with graphs. Especially when some central vertices are deleted: Adding an edge can completely change the entire topology. We can intuitively sense the importance of minor changes in graphs rather than in tables. Graph query language is designed based on graph structures. The following is a query example in LDBC. Requirements: Query the posts posted by a person, and query the corresponding replies (the replies themselves will also be replied multiple times). Since the posting time and reply time both meet certain conditions, you can sort the results according to the number of replies. Write querying statements using PostgreSQL: --PostgreSQL WITH RECURSIVE post_all(psa_threadid , psa_thread_creatorid, psa_messageid , psa_creationdate, psa_messagetype ) AS ( SELECT m_messageid AS psa_threadid , m_creatorid AS psa_thread_creatorid , m_messageid AS psa_messageid , m_creationdate, 'Post' FROM message WHERE 1=1 AND m_c_replyof IS NULL -- post, not comment AND m_creationdate BETWEEN :startDate AND :endDate UNION ALL SELECT psa.psa_threadid AS psa_threadid , psa.psa_thread_creatorid AS psa_thread_creatorid , m_messageid, m_creationdate, 'Comment' FROM message p, post_all psa WHERE 1=1 AND p.m_c_replyof = psa.psa_messageid AND m_creationdate BETWEEN :startDate AND :endDate ) SELECT p.p_personid AS \"person.id\" , p.p_firstname AS \"person.firstName\" , p.p_lastname AS \"person.lastName\" , count(DISTINCT psa.psa_threadid) AS threadCount END) AS messageCount , count(DISTINCT psa.psa_messageid) AS messageCount FROM person p left join post_all psa on ( 1=1 AND p.p_personid = psa.psa_thread_creatorid AND psa_creationdate BETWEEN :startDate AND :endDate ) GROUP BY p.p_personid, p.p_firstname, p.p_lastname ORDER BY messageCount DESC, p.p_personid LIMIT 100; Write querying statements using Cypher designed especially for graphs: --Cypher MATCH (person:Person)<-[:HAS_CREATOR]-(post:Post)<-[:REPLY_OF*0..]-(reply:Message) WHERE post.creationDate >= $startDate AND post.creationDate <= $endDate AND reply.creationDate >= $startDate AND reply.creationDate <= $endDate RETURN person.id, person.firstName, person.lastName, count(DISTINCT post) AS threadCount, count(DISTINCT reply) AS messageCount ORDER BY messageCount DESC, person.id ASC LIMIT 100 Graph traversal (corresponding to Join in SQL) is much more efficient because the storage and query engines are designed specifically for the structure of the graph. Graph databases have a wide range of application scenarios. Examples include data integration (knowledge graph), personalized recommendations, fraud, and threat detection, risk analysis, and compliance, identity (and control) verification, IT infrastructure management, supply chain, and logistics, social network research, etc. According to the literature Ubiquity, the fields that use graph technology are (from the greatest to least): information technology (IT), research in academia, finance, laboratories in industry, government, healthcare, defense, pharmaceuticals, retail, and e-commerce, transportation, telecommunications, and insurance. In 2019, according to Gartner's questionnaire research, 27% of customers (500 groups) are using graph databases and 20% have plans to use them.","s":"Why do we use graph databases?","u":"/zh-Hans/docs/introduction/graph/","h":"#why-do-we-use-graph-databases","p":989},{"i":1006,"t":"This topic does not discuss the RDF data model due to space limitations. 图片来源 https://medium.freecodecamp.org/i-dont-understand-graph-theory-1c96572a1401.↩ 图片来源 https://medium.freecodecamp.org/i-dont-understand-graph-theory-1c96572a1401↩ https://nebula-graph.com.cn/posts/stock-interrelation-analysis-jgrapht-nebula-graph/↩ https://nebula-graph.com.cn/posts/game-of-thrones-relationship-networkx-gephi-nebula-graph/↩ https://nebula-graph.com.cn/posts/practicing-nebula-graph-webank/↩ https://nebula-graph.com.cn/posts/meituan-graph-database-platform-practice/↩ https://zhuanlan.zhihu.com/p/90635957↩ https://nebula-graph.com.cn/posts/graph-database-data-connections-insight/↩ https://nebula-graph.com.cn/posts/kuaishou-security-intelligence-platform-with-nebula-graph/↩ https://nebula-graph.com.cn/posts/nebula-graph-for-social-networking/↩ https://mp.weixin.qq.com/s/K2QinpR5Rplw1teHpHtf4w↩ https://nebula-graph.com.cn/posts/detect-corona-virus-spreading-with-graph-database/↩ https://nebula-graph.com.cn/posts/meituan-graph-database-platform-practice/↩ https://arxiv.org/abs/1709.03188↩","s":"RDF","u":"/zh-Hans/docs/introduction/graph/","h":"#rdf-1","p":989},{"i":1008,"t":"Nebula Graph 由三种服务构成：Graph 服务、Meta 服务和 Storage 服务，是一种存储与计算分离的架构。 每个服务都有可执行的二进制文件和对应进程，用户可以使用这些二进制文件在一个或多个计算机上部署 Nebula Graph 集群。 下图展示了 Nebula Graph 集群的经典架构。","s":"Nebula Graph 架构总览","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/architecture-overview/","h":"","p":1007},{"i":1010,"t":"在 Nebula Graph 架构中，Meta 服务是由 nebula-metad 进程提供的，负责数据管理，例如 Schema 操作、集群管理和用户权限管理等。 Meta 服务的详细说明，请参见 Meta 服务。","s":"Meta 服务","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/architecture-overview/","h":"#meta-服务","p":1007},{"i":1012,"t":"Nebula Graph 采用计算存储分离架构。Graph 服务负责处理计算请求，Storage 服务负责存储数据。它们由不同的进程提供，Graph 服务是由 nebula-graphd 进程提供，Storage 服务是由 nebula-storaged 进程提供。计算存储分离架构的优势如下： 易扩展 分布式架构保证了 Graph 服务和 Storage 服务的灵活性，方便扩容和缩容。 高可用 如果提供 Graph 服务的服务器有一部分出现故障，其余服务器可以继续为客户端提供服务，而且 Storage 服务存储的数据不会丢失。服务恢复速度较快，甚至能做到用户无感知。 节约成本 计算存储分离架构能够提高资源利用率，而且可根据业务需求灵活控制成本。 更多可能性 基于分离架构的特性，Graph 服务将可以在更多类型的存储引擎上单独运行，Storage 服务也可以为多种目的计算引擎提供服务。 Graph 服务和 Storage 服务的详细说明，请参见 Graph 服务和 Storage 服务。","s":"Graph 服务和 Storage 服务","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/architecture-overview/","h":"#graph-服务和-storage-服务","p":1007},{"i":1014,"t":"Graph 服务主要负责处理查询请求，包括解析查询语句、校验语句、生成执行计划以及按照执行计划执行四个大步骤，本文将基于这些步骤介绍 Graph 服务。","s":"Graph 服务","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"","p":1013},{"i":1016,"t":"查询请求发送到 Graph 服务后，会由如下模块依次处理： Parser：词法语法解析模块。 Validator：语义校验模块。 Planner：执行计划与优化器模块。 Executor：执行引擎模块。","s":"Graph 服务架构","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"#graph-服务架构","p":1013},{"i":1018,"t":"Parser 模块收到请求后，通过 Flex（词法分析工具）和 Bison（语法分析工具）生成的词法语法解析器，将语句转换为抽象语法树（AST），在语法解析阶段会拦截不符合语法规则的语句。 例如GO FROM \"Tim\" OVER like WHERE properties(edge).likeness > 8.0 YIELD dst(edge)语句转换的 AST 如下。","s":"Parser","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"#parser","p":1013},{"i":1020,"t":"Validator 模块对生成的 AST 进行语义校验，主要包括： 校验元数据信息 校验语句中的元数据信息是否正确。 例如解析 OVER、WHERE和YIELD 语句时，会查找 Schema 校验 Edge type、Tag 的信息是否存在，或者插入数据时校验插入的数据类型和 Schema 中的是否一致。 校验上下文引用信息 校验引用的变量是否存在或者引用的属性是否属于变量。 例如语句$var = GO FROM \"Tim\" OVER like YIELD dst(edge) AS ID; GO FROM $var.ID OVER serve YIELD dst(edge)，Validator 模块首先会检查变量 var 是否定义，其次再检查属性 ID 是否属于变量 var。 校验类型推断 推断表达式的结果类型，并根据子句校验类型是否正确。 例如 WHERE 子句要求结果是 bool、null 或者 empty。 校验 * 代表的信息 查询语句中包含 * 时，校验子句时需要将 * 涉及的 Schema 都进行校验。 例如语句GO FROM \"Tim\" OVER * YIELD dst(edge), properties(edge).likeness, dst(edge)，校验OVER子句时需要校验所有的 Edge type，如果 Edge type 包含 like和serve，该语句会展开为GO FROM \"Tim\" OVER like,serve YIELD dst(edge), properties(edge).likeness, dst(edge)。 校验输入输出 校验管道符（|）前后的一致性。 例如语句GO FROM \"Tim\" OVER like YIELD dst(edge) AS ID | GO FROM $-.ID OVER serve YIELD dst(edge)，Validator 模块会校验 $-.ID 在管道符左侧是否已经定义。 校验完成后，Validator 模块还会生成一个默认可执行，但是未进行优化的执行计划，存储在目录 src/planner 内。","s":"Validator","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"#validator","p":1013},{"i":1022,"t":"如果配置文件 nebula-graphd.conf 中 enable_optimizer 设置为 false，Planner 模块不会优化 Validator 模块生成的执行计划，而是直接交给 Executor 模块执行。 如果配置文件 nebula-graphd.conf中enable_optimizer 设置为 true，Planner 模块会对 Validator 模块生成的执行计划进行优化。如下图所示。 优化前 如上图右侧未优化的执行计划，每个节点依赖另一个节点，例如根节点 Project 依赖 Filter、Filter 依赖 GetNeighbor，最终找到叶子节点 Start，才能开始执行（并非真正执行）。 在这个过程中，每个节点会有对应的输入变量和输出变量，这些变量存储在一个哈希表中。由于执行计划不是真正执行，所以哈希表中每个 key 的 value 值都为空（除了 Start 节点，起始数据会存储在该节点的输入变量中）。哈希表定义在仓库 nebula-graph 内的 src/context/ExecutionContext.cpp 中。 例如哈希表的名称为 ResultMap，在建立 Filter 这个节点时，定义该节点从 ResultMap[\"GN1\"] 中读取数据，然后将结果存储在 ResultMap[\"Filter2\"] 中，依次类推，将每个节点的输入输出都确定好。 优化过程 Planner 模块目前的优化方式是 RBO（rule-based optimization），即预定义优化规则，然后对 Validator 模块生成的默认执行计划进行优化。新的优化规则 CBO（cost-based optimization）正在开发中。优化代码存储在仓库 nebula-graph 的目录 src/optimizer/ 内。 RBO 是一个自底向上的探索过程，即对于每个规则而言，都会由执行计划的根节点（示例是Project）开始，一步步向下探索到最底层的节点，在过程中查看是否可以匹配规则。 如上图所示，探索到节点 Filter 时，发现依赖的节点是 GetNeighbor，匹配预先定义的规则，就会将 Filter 融入到 GetNeighbor 中，然后移除节点 Filter，继续匹配下一个规则。在执行阶段，当算子 GetNeighbor 调用 Storage 服务的接口获取一个点的邻边时，Storage 服务内部会直接将不符合条件的边过滤掉，这样可以极大地减少传输的数据量，该优化称为过滤下推。","s":"Planner","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"#planner","p":1013},{"i":1024,"t":"Executor 模块包含调度器（Scheduler）和执行器（Executor），通过调度器调度执行计划，让执行器根据执行计划生成对应的执行算子，从叶子节点开始执行，直到根节点结束。如下图所示。 每一个执行计划节点都一一对应一个执行算子，节点的输入输出在优化执行计划时已经确定，每个算子只需要拿到输入变量中的值进行计算，最后将计算结果放入对应的输出变量中即可，所以只需要从节点 Start 一步步执行，最后一个算子的输出变量会作为最终结果返回给客户端。","s":"Executor","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"#executor","p":1013},{"i":1026,"t":"Nebula Graph 的代码层次结构如下： |--src |--context //校验期和执行期上下文 |--daemons |--executor //执行算子 |--mock |--optimizer //优化规则 |--parser //词法语法分析 |--planner //执行计划结构 |--scheduler //调度器 |--service |--util //基础组件 |--validator //语句校验 |--visitor","s":"代码结构","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"#代码结构","p":1013},{"i":1028,"t":"用户也可以通过视频全方位了解 Nebula Graph 的查询引擎。 nMeetup·上海 ｜全面解析 Query Engine（33 分 30 秒）","s":"视频","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/graph-service/","h":"#视频","p":1013},{"i":1030,"t":"本文介绍 Meta 服务的架构和功能。","s":"Meta 服务","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"","p":1029},{"i":1032,"t":"Meta 服务是由 nebula-metad 进程提供的，用户可以根据场景配置 nebula-metad 进程数量： 测试环境中，用户可以在 Nebula Graph 集群中部署 1 个或 3 个 nebula-metad 进程。如果要部署 3 个，用户可以将它们部署在 1 台机器上，或者分别部署在不同的机器上。 生产环境中，建议在 Nebula Graph 集群中部署 3 个 nebula-metad 进程。请将这些进程部署在不同的机器上以保证高可用。 所有 nebula-metad 进程构成了基于 Raft 协议的集群，其中一个进程是 leader，其他进程都是 follower。 leader 是由多数派选举出来，只有 leader 能够对客户端或其他组件提供服务，其他 follower 作为候补，如果 leader 出现故障，会在所有 follower 中选举出新的 leader。 !!! Note leader 和 follower 的数据通过 Raft 协议保持一致，因此 leader 故障和选举新 leader 不会导致数据不一致。更多关于 Raft 的介绍见 [Storage 服务](/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service)。","s":"Meta 服务架构","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#meta-服务架构","p":1029},{"i":1035,"t":"Meta 服务中存储了用户的账号和权限信息，当客户端通过账号发送请求给 Meta 服务，Meta 服务会检查账号信息，以及该账号是否有对应的请求权限。 更多 Nebula Graph 的访问控制说明，请参见身份验证。","s":"管理用户账号","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#管理用户账号","p":1029},{"i":1037,"t":"Meta 服务负责存储和管理分片的位置信息，并且保证分片的负载均衡。","s":"管理分片","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#管理分片","p":1029},{"i":1039,"t":"Nebula Graph 支持多个图空间，不同图空间内的数据是安全隔离的。Meta 服务存储所有图空间的元数据（非完整数据），并跟踪数据的变更，例如增加或删除图空间。","s":"管理图空间","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#管理图空间","p":1029},{"i":1041,"t":"Nebula Graph 是强类型图数据库，它的 Schema 包括 Tag、Edge type、Tag 属性和 Edge type 属性。 Meta 服务中存储了 Schema 信息，同时还负责 Schema 的添加、修改和删除，并记录它们的版本。 更多 Nebula Graph 的 Schema 信息，请参见数据模型。","s":"管理 Schema 信息","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#管理-schema-信息","p":1029},{"i":1043,"t":"Meta 服务存储 TTL（Time To Live）定义信息，可以用于设置数据生命周期。数据过期后，会由 Storage 服务进行处理，具体过程参见 TTL。","s":"管理 TTL 信息","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#管理-ttl-信息","p":1029},{"i":1045,"t":"Meta 服务中的作业管理模块负责作业的创建、排队、查询和删除。","s":"管理作业","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/meta-service/","h":"#管理作业","p":1029},{"i":1047,"t":"Nebula Graph 的存储包含两个部分，一个是 Meta 相关的存储，称为 Meta 服务，在前文已有介绍。 另一个是具体数据相关的存储，称为 Storage 服务。其运行在 nebula-storaged 进程中。本文仅介绍 Storage 服务的架构设计。","s":"Storage 服务","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"","p":1046},{"i":1049,"t":"高性能（自研 KVStore） 易水平扩展（Shared-nothing 架构，不依赖 NAS 等硬件设备） 强一致性（Raft） 高可用性（Raft） 支持向第三方系统进行同步（例如全文索引）","s":"优势","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#优势","p":1046},{"i":1051,"t":"Storage 服务是由 nebula-storaged 进程提供的，用户可以根据场景配置 nebula-storaged 进程数量，例如测试环境 1 个，生产环境 3 个。 所有 nebula-storaged 进程构成了基于 Raft 协议的集群，整个服务架构可以分为三层，从上到下依次为： Storage interface 层 Storage 服务的最上层，定义了一系列和图相关的 API。API 请求会在这一层被翻译成一组针对分片的 KV 操作，例如： getNeighbors：查询一批点的出边或者入边，返回边以及对应的属性，并且支持条件过滤。 insert vertex/edge：插入一条点或者边及其属性。 getProps：获取一个点或者一条边的属性。 正是这一层的存在，使得 Storage 服务变成了真正的图存储，否则 Storage 服务只是一个 KV 存储服务。 Consensus 层 Storage 服务的中间层，实现了 Multi Group Raft，保证强一致性和高可用性。 Store Engine 层 Storage 服务的最底层，是一个单机版本地存储引擎，提供对本地数据的get、put、scan等操作。相关接口存储在KVStore.h和KVEngine.h文件，用户可以根据业务需求定制开发相关的本地存储插件。 下文将基于架构介绍 Storage 服务的部分特性。","s":"Storage 服务架构","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#storage-服务架构","p":1046},{"i":1054,"t":"Nebula Graph 使用自行开发的 KVStore，而不是其他开源 KVStore，原因如下： 需要高性能 KVStore。 需要以库的形式提供，实现高效计算下推。对于强 Schema 的 Nebula Graph 来说，计算下推时如何提供 Schema 信息，是高效的关键。 需要数据强一致性。 基于上述原因，Nebula Graph 使用 RocksDB 作为本地存储引擎，实现了自己的 KVStore，有如下优势： 对于多硬盘机器，Nebula Graph 只需配置多个不同的数据目录即可充分利用多硬盘的并发能力。 由 Meta 服务统一管理所有 Storage 服务，可以根据所有分片的分布情况和状态，手动进行负载均衡。 !!! note 不支持自动负载均衡是为了防止自动数据搬迁影响线上业务。 定制预写日志（WAL），每个分片都有自己的 WAL。 支持多个图空间，不同图空间相互隔离，每个图空间可以设置自己的分片数和副本数。","s":"KVStore","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#kvstore","p":1046},{"i":1056,"t":"图存储的主要数据是点和边，Nebula Graph 将点和边的信息存储为 key，同时将点和边的属性信息存储在 value 中，以便更高效地使用属性过滤。 点数据存储格式 相比 Nebula Graph 2.x 版本，3.x 版本的每个点多了一个不含 TagID 字段并且无 value 的 key，用于支持无 Tag 的点。 字段 说明 Type key 类型。长度为 1 字节。 PartID 数据分片编号。长度为 3 字节。此字段主要用于 Storage 负载均衡（balance）时方便根据前缀扫描整个分片的数据。 VertexID 点 ID。当点 ID 类型为 int 时，长度为 8 字节；当点 ID 类型为 string 时，长度为创建图空间时指定的fixed_string长度。 TagID 点关联的 Tag ID。长度为 4 字节。 SerializedValue 序列化的 value，用于保存点的属性信息。 边数据存储格式 字段 说明 Type key 类型。长度为 1 字节。 PartID 数据分片编号。长度为 3 字节。此字段主要用于 Storage 负载均衡（balance）时方便根据前缀扫描整个分片的数据。 VertexID 点 ID。前一个VertexID在出边里表示起始点 ID，在入边里表示目的点 ID；后一个VertexID出边里表示目的点 ID，在入边里表示起始点 ID。 Edge type 边的类型。大于 0 表示出边，小于 0 表示入边。长度为 4 字节。 Rank 用来处理两点之间有多个同类型边的情况。用户可以根据自己的需求进行设置，例如存放交易时间、交易流水号等。长度为 8 字节， PlaceHolder 预留字段。长度为 1 字节。 SerializedValue 序列化的 value，用于保存边的属性信息。","s":"数据存储格式","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#数据存储格式","p":1046},{"i":1058,"t":"Nebula Graph 使用强类型 Schema。 对于点或边的属性信息，Nebula Graph 会将属性信息编码后按顺序存储。由于属性的长度是固定的，查询时可以根据偏移量快速查询。在解码之前，需要先从 Meta 服务中查询具体的 Schema 信息（并缓存）。同时为了支持在线变更 Schema，在编码属性时，会加入对应的 Schema 版本信息。","s":"属性说明","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#属性说明","p":1046},{"i":1060,"t":"由于超大规模关系网络的节点数量高达百亿到千亿，而边的数量更会高达万亿，即使仅存储点和边两者也远大于一般服务器的容量。因此需要有方法将图元素切割，并存储在不同逻辑分片（Partition）上。Nebula Graph 采用边分割的方式。","s":"数据分片","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#数据分片","p":1046},{"i":1062,"t":"Nebula Graph 中逻辑上的一条边对应着硬盘上的两个键值对（key-value pair），在边的数量和属性较多时，存储放大现象较明显。边的存储方式如下图所示。 上图以最简单的两个点和一条边为例，起点 SrcVertex 通过边 EdgeA 连接目的点 DstVertex，形成路径(SrcVertex)-[EdgeA]->(DstVertex)。这两个点和一条边会以 6 个键值对的形式保存在存储层的两个不同分片，即 Partition x 和 Partition y 中，详细说明如下： 点 SrcVertex 的键值保存在 Partition x 中。 边 EdgeA 的第一份键值，这里用 EdgeA_Out 表示，与 SrcVertex 一同保存在 Partition x 中。key 的字段有 Type、PartID（x）、VID（Src，即点 SrcVertex 的 ID）、EdgeType（符号为正，代表边方向为出）、Rank（0）、VID（Dst，即点 DstVertex 的 ID）和 PlaceHolder。SerializedValue 即 Value，是序列化的边属性。 点 DstVertex 的键值保存在 Partition y 中。 边 EdgeA 的第二份键值，这里用 EdgeA_In 表示，与 DstVertex 一同保存在 Partition y 中。key 的字段有 Type、PartID（y）、VID（Dst，即点 DstVertex 的 ID）、EdgeType（符号为负，代表边方向为入）、Rank（0）、VID（Src，即点 SrcVertex 的 ID）和 PlaceHolder。SerializedValue 即 Value，是序列化的边属性，与 EdgeA_Out 中该部分的完全相同。 EdgeA_Out 和 EdgeA_In 以方向相反的两条边的形式存在于存储层，二者组合成了逻辑上的一条边 EdgeA。EdgeA_Out 用于从起点开始的遍历请求，例如(a)-[]->()；EdgeA_In 用于指向目的点的遍历请求，或者说从目的点开始，沿着边的方向逆序进行的遍历请求，例如例如()-[]->(a)。 如 EdgeA_Out 和 EdgeA_In 一样，Nebula Graph 冗余了存储每条边的信息，导致存储边所需的实际空间翻倍。因为边对应的 key 占用的硬盘空间较小，但 value 占用的空间与属性值的长度和数量成正比，所以，当边的属性值较大或数量较多时候，硬盘空间占用量会比较大。 如果对边进行操作，为了保证两个键值对的最终一致性，可以开启 TOSS 功能，开启后，会先在正向边所在的分片进行操作，然后在反向边所在分片进行操作，最后返回结果。","s":"切边与存储放大","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#切边与存储放大","p":1046},{"i":1064,"t":"分片策略采用静态 Hash 的方式，即对点 VID 进行取模操作，同一个点的所有 Tag、出边和入边信息都会存储到同一个分片，这种方式极大地提升了查询效率。 !!! Note 创建图空间时需指定分片数量，分片数量设置后无法修改，建议设置时提前满足业务将来的扩容需求。 多机集群部署时，分片分布在集群内的不同机器上。分片数量在 CREATE SPACE 语句中指定，此后不可更改。 如果需要将某些点放置在相同的分片（例如在一台机器上），可以参考公式或代码。 下文用简单代码说明 VID 和分片的关系。 // 如果 ID 长度为 8，为了兼容 1.0，将数据类型视为 int64。 uint64_t vid = 0; if (id.size() == 8) { memcpy(static_cast<void*>(&vid), id.data(), 8); } else { MurmurHash2 hash; vid = hash(id.data()); } PartitionID pId = vid % numParts + 1; 简单来说，上述代码是将一个固定的字符串进行哈希计算，转换成数据类型为 int64 的数字（int64 数字的哈希计算结果是数字本身），将数字取模，然后加 1，即： pId = vid % numParts + 1; 示例的部分参数说明如下。 参数 说明 % 取模运算。 numParts VID所在图空间的分片数，即 CREATE SPACE 语句中的partition_num值。 pId VID所在分片的 ID。 例如有 100 个分片，VID为 1、101 和 1001 的三个点将会存储在相同的分片。分片 ID 和机器地址之间的映射是随机的，所以不能假定任何两个分片位于同一台机器上。","s":"分片算法","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#分片算法","p":1046},{"i":1067,"t":"分布式系统中，同一份数据通常会有多个副本，这样即使少数副本发生故障，系统仍可正常运行。这就需要一定的技术手段来保证多个副本之间的一致性。 基本原理：Raft 就是一种用于保证多副本一致性的协议。Raft 采用多个副本之间竞选的方式，赢得”超过半数”副本投票的（候选）副本成为 Leader，由 Leader 代表所有副本对外提供服务；其他 Follower 作为备份。当该 Leader 出现异常后（通信故障、运维命令等），其余 Follower 进行新一轮选举，投票出一个新的 Leader。Leader 和 Follower 之间通过心跳的方式相互探测是否存活，并以 Raft-wal 的方式写入硬盘，超过多个心跳仍无响应的副本会被认为发生故障。 !!! Note 因为 Raft-wal 需要定期写硬盘，如果硬盘写能力瓶颈会导致 Raft 心跳失败，导致重新发起选举。硬盘 IO 严重堵塞情况下，会导致长期无法选举出 Leader。 读写流程：对于客户端的每个写入请求，Leader 会将该写入以 Raft-wal 的方式，将该条同步给其他 Follower，并只有在“超过半数”副本都成功收到 Raft-wal 后，才会返回客户端该写入成功。对于客户端的每个读取请求，都直接访问 Leader，而 Follower 并不参与读请求服务。 故障流程：场景 1：考虑一个配置为单副本（图空间）的集群；如果系统只有一个副本时，其自身就是 Leader；如果其发生故障，系统将完全不可用。场景 2：考虑一个配置为 3 副本（图空间）的集群；如果系统有 3 个副本，其中一个副本是 Leader，其他 2 个副本是 Follower；即使原 Leader 发生故障，剩下两个副本仍可投票出一个新的 Leader（以及一个 Follower），此时系统仍可使用；但是当这 2 个副本中任一者再次发生故障后，由于投票人数不足，系统将完全不可用。 !!! Note Raft 多副本的方式与 HDFS 多副本的方式是不同的，Raft 基于“多数派”投票，因此副本数量不能是偶数。","s":"关于 Raft 的简单介绍","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#关于-raft-的简单介绍","p":1046},{"i":1069,"t":"由于 Storage 服务需要支持集群分布式架构，所以基于 Raft 协议实现了 Multi Group Raft，即每个分片的所有副本共同组成一个 Raft group，其中一个副本是 leader，其他副本是 follower，从而实现强一致性和高可用性。Raft 的部分实现如下。 由于 Raft 日志不允许空洞，Nebula Graph 使用 Multi Group Raft 缓解此问题，分片数量较多时，可以有效提高 Nebula Graph 的性能。但是分片数量太多会增加开销，例如 Raft group 内部存储的状态信息、WAL 文件，或者负载过低时的批量操作。 实现 Multi Group Raft 有 2 个关键点： 共享 Transport 层 每一个 Raft group 内部都需要向对应的 peer 发送消息，如果不能共享 Transport 层，会导致连接的开销巨大。 共享线程池 如果不共享一组线程池，会造成系统的线程数过多，导致大量的上下文切换开销。","s":"Multi Group Raft","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#multi-group-raft","p":1046},{"i":1071,"t":"Nebula Graph 中，每个分片都是串行写日志，为了提高吞吐，写日志时需要做批量操作，但是由于 Nebula Graph 利用 WAL 实现一些特殊功能，需要对批量操作进行分组，这是 Nebula Graph 的特色。 例如无锁 CAS 操作需要之前的 WAL 全部提交后才能执行，如果一个批量写入的 WAL 里包含了 CAS 类型的 WAL，就需要拆分成粒度更小的几个组，还要保证这几组 WAL 串行提交。","s":"批量（Batch）操作","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#批量batch操作","p":1046},{"i":1073,"t":"leader 切换对于负载均衡至关重要，当把某个分片从一台机器迁移到另一台机器时，首先会检查分片是不是 leader，如果是的话，需要先切换 leader，数据迁移完毕之后，通常还要重新均衡 leader 分布。 对于 leader 来说，提交 leader 切换命令时，就会放弃自己的 leader 身份，当 follower 收到 leader 切换命令时，就会发起选举。","s":"leader 切换（Transfer Leadership）","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#leader-切换transfer-leadership","p":1046},{"i":1075,"t":"为了避免脑裂，当一个 Raft group 的成员发生变化时，需要有一个中间状态，该状态下新旧 group 的多数派需要有重叠的部分，这样就防止了新的 group 或旧的 group 单方面做出决定。为了更加简化，Diego Ongaro 在自己的博士论文中提出每次只增减一个 peer 的方式，以保证新旧 group 的多数派总是有重叠。Nebula Graph 也采用了这个方式，只不过增加成员和移除成员的实现有所区别。具体实现方式请参见 Raft Part class 里 addPeer/removePeer 的实现。","s":"成员变更","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#成员变更","p":1046},{"i":1077,"t":"由于 RocksDB 本身的缓存管理存在限制，无法按需缓存点或边，所以 Nebula Graph 自行实现了 Storage 缓存管理，可以更自由地设置缓存大小、内容等。详情参见 storage cache 配置。","s":"缓存","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#缓存","p":1046},{"i":1079,"t":"Storage 服务基于 Raft 协议实现的分布式架构，与 HDFS 的分布式架构有一些区别。例如： Storage 服务本身通过 Raft 协议保证一致性，副本数量通常为奇数，方便进行选举 leader，而 HDFS 存储具体数据的 DataNode 需要通过 NameNode 保证一致性，对副本数量没有要求。 Storage 服务只有 leader 副本提供读写服务，而 HDFS 的所有副本都可以提供读写服务。 Storage 服务无法修改副本数量，只能在创建图空间时指定副本数量，而 HDFS 可以调整副本数量。 Storage 服务是直接访问文件系统，而 HDFS 的上层（例如 HBase）需要先访问 HDFS，再访问到文件系统，远程过程调用（RPC）次数更多。 总而言之，Storage 服务更加轻量级，精简了一些功能，架构没有 HDFS 复杂，可以有效提高小块存储的读写性能。","s":"与 HDFS 的区别","u":"/zh-Hans/docs/introduction/nebula-graph-architecture/storage-service/","h":"#与-hdfs-的区别","p":1046},{"i":1081,"t":"图论中一个非常重要的概念是路径，路径是指一个有限或无限的边序列，这些边连接着一系列点。 路径的类型分为三种：walk、trail、path。关于路径的详细说明，请参见维基百科。 本文以下图为例进行简单介绍。","s":"路径","u":"/zh-Hans/docs/introduction/path/","h":"","p":1080},{"i":1083,"t":"walk类型的路径由有限或无限的边序列构成。遍历时点和边可以重复。 查看示例图，由于 C、D、E 构成了一个环，因此该图包含无限个路径，例如A->B->C->D->E、A->B->C->D->E->C、A->B->C->D->E->C->D。 !!! note `GO`语句采用的是`walk`类型路径。","s":"walk","u":"/zh-Hans/docs/introduction/path/","h":"#walk","p":1080},{"i":1085,"t":"trail类型的路径由有限的边序列构成。遍历时只有点可以重复，边不可以重复。柯尼斯堡七桥问题的路径类型就是trail。 查看示例图，由于边不可以重复，所以该图包含有限个路径，最长路径由 5 条边组成：A->B->C->D->E->C。 !!! note `MATCH`、`FIND PATH`和`GET SUBGRAPH`语句采用的是`trail`类型路径。 在 trail 类型中，还有cycle和circuit两种特殊的路径类型，以下图为例对这两种特殊的路径类型进行介绍。 cycle cycle 是封闭的 trail 类型的路径，遍历时边不可以重复，起点和终点重复，并且没有其他点重复。在此示例图中，最长路径由三条边组成：A->B->C->A或C->D->E->C. circuit circuit 也是封闭的 trail 类型的路径，遍历时边不可以重复，除起点和终点重复外，可能存在其他点重复。在此示例图中，最长路径为：A->B->C->D->E->C->A。","s":"trail","u":"/zh-Hans/docs/introduction/path/","h":"#trail","p":1080},{"i":1087,"t":"path类型的路径由有限的边序列构成。遍历时点和边都不可以重复。 查看示例图，由于点和边都不可以重复，所以该图包含有限个路径，最长路径由 4 条边组成：A->B->C->D->E。","s":"path","u":"/zh-Hans/docs/introduction/path/","h":"#path","p":1080},{"i":1089,"t":"用户也可以观看视频了解路径的相关概念。 Path（03 分 09 秒）","s":"视频","u":"/zh-Hans/docs/introduction/path/","h":"#视频","p":1080},{"i":1091,"t":"本节主要介绍两个和分布式图数据库关系密切的领域，数据库方面和图技术方面。","s":"相关技术","u":"/zh-Hans/docs/introduction/related-tech/","h":"","p":1090},{"i":1094,"t":"关系型数据库，是指采用了关系模型来组织数据的数据库。关系模型为二维表格模型，一个关系型数据库就是由二维表及其之间的联系所组成的一个数据组织。说到关系型数据库，大多数人都会想到 MySQL。MySQL 是目前最流行的数据库管理系统之一，支持使用最常见的结构化查询语言（SQL）进行数据库操作，并以表格、行、列的形式存储数据。这种存储数据的方法源自埃德加·科德（Edgar Frank Codd）于 1970 年提出的关系型数据模型。 在关系型数据库中，可以为待存储的每种类型的数据创建一个表。例如，球员表用来存储所有的球员信息，球队表用来存储球队信息等。SQL 表中的每行数据都必须包含一个主键（primary key）。主键是该行数据的唯一标识符。一般地，主键作为字段 ID 都是随行数自增的。关系型数据库自问世以来一直为计算机行业提供着非常好的服务，并将未来很长的时间内继续服务下去。 如果你用过 Excel、WPS 或其他类似的应用，你就会大概了解到关系数据库是如何工作的。首先设置好列，然后在对应的列下添加行数据。你可以对某一列数据进行求平均值或其他聚合操作，这与在关系型数据库 MySQL 中求平均值的操作类似。而 EXcel 中的数据透视表则相当于在关系型数据库 MySQL 中使用聚合函数和 CASE 语句对数据进行查询。一个 EXcel 文件可以有多张表，一张表就相当于 MySQL 的一张表。一个 EXcel 文件则类似于一个 MySQL 数据库。 关系型数据库中的关系​ 与图数据库不同，关系型数据库（或 SQL 型的数据库）中的边也是作为实体存储在专门的边表中的。先创建两个表，球员（player）和球队（team），然后再创建表 player_team 作为边表。边表通常由相关的表 join 而成。例如，此处的边表 player_team 就由球员表和球队表 join 而成。 这种存储边的方式在关联小型数据集时问题并不大，但是当关系型数据库中的关系太多时，问题就出现了。事实上，关系型数据库是非常“反关系的”。具体来说，当你只想查询一个球员的队友时，你必须对表中的所有数据进行 join 操作，然后再过滤掉你不需要的所有数据，当你的数据集达到一定规模时，这将给关系型数据库带来巨大压力。如果你想关联多张不同的表，可能在 join 爆炸（join bombs）前系统就已经无法响应了。 关系型数据库起源​ 上文提到，关系型数据模型最早是由 IBM 的工程师埃德加·科德（Edgar Frank Codd）于 1970 年提出的。科德写了几篇数据库管理系统方面的论文，论述了关系型数据模型的潜力。关系型数据模型不依赖于数据链接列表（网状数据或层级数据），而是更多依赖于数据集。他使用元组演算（tuple calculus）的数学方法论证了这些数据集能够完成与导航数据库管理系统相同的任务。唯一的要求是，关系型数据模型需要一种合适的查询语言，以保证数据库的一致性要求。这就为后来声明型的结构化查询语言（SQL）提供了灵感来源。IBM 的 R 系统是关系型数据模型的最早使用者之一。然而，由前 IBM 员工拉里·埃里森创办的名叫软件开发实验室的小公司在市场上击败了 IBM。该公司的产品就是后来为我们熟知的 Oracle。 由于“关系数据库”在当时是一个比较时髦的词汇，因此许多数据库供应商都喜欢在其产品名称中使用这个词汇，尽管他们的产品实际上并不是关系型的。为了防止这种情况并减少关系型数据模型的错误使用，科德提出了著名科德 12 定律（Codd's 12 rules）。所有关系型数据系统都必须遵循科德 12 定律。","s":"关系型数据库","u":"/zh-Hans/docs/introduction/related-tech/","h":"#关系型数据库","p":1090},{"i":1096,"t":"图数据库并不是可以克服关系型数据库缺点的唯一替代方案。现在市面上还有很多非关系型数据库的产品，这些产品都可以叫做 NoSQL。NoSQL 一词最早于上世纪 90 年代末提出，可以解释为“非 SQL” 或“不仅是 SQL”，具体解释要根据语境判断。为便于理解，这里 NoSQL 可以解释成 “非关系型数据库”。不同于关系型数据库，NoSQL 数据库提供的数据存储、检索机制并不是基于表关系建模的。 NoSQL 数据库可以分为四类： 键值存储（key-value stores） 列式存储（column-family stores） 文件存储（document stores） 图数据库（graph databases） 下面将分别介绍这四类数据库。 键值存储​ 键值存储，顾名思义，就是使用键值对存储数据的数据库。不同于关系型数据库，键值存储是没有表和列的。如果一定要做类比，键值数据库本身就像一张有很多列（也就是键）的大表。在键值存储数据库中，数据（即键值对中的值）都是通过键来存储和查询的，通常用哈希列表来实现。这比传统的 SQL 数据库要简单得多，而且对于某些 web 应用来说，这就足够了。 键值模型对于 IT 系统来说优势在于简单、易部署。多数情况下，这种存储方式对非关联的数据很适用。如是只是存储数据而无需查询的话，使用这种存储方法就没有问题。但是如果 DBA 只对部分值进行查询或更新的时候，键值模型就显得效率低下了。常见的键值存储数据库有：Redis、Voldemort、Oracle BDB。 列式存储​ NoSQL 数据库的列式存储与 NoSQL 数据库的键值存储有许多相似之处，因为列式存储仍然在使用键进行存储和检索。区别在于列式存储数据库中，列是最小的存储单元，每一列均由键、值以及用于版本控制和冲突解决的时间戳组成。这在分布式扩展时特别有用，因为在数据库更新时，可以使用时间戳定位过期数据。由于列式存储良好的扩展性，因此适用于非常大的数据集。常见的列式存储数据库有：HBase、Cassandra、HadoopDB 等。 文档存储​ 准确来说，NoSQL 数据库文档存储实际上也是基于键值的数据库，只不过对功能做了增强。数据仍然以键值的形式存储，但是文档存储中的值是结构化的文档，而不仅仅是一个字符串或单个值。也就是说，由于信息结构的增加，文档存储能够执行更优化的查询，并且使数据检索更加容易。因此，文档存储特别适合存储、索引并管理面向文档的数据或者类似的半结构化数据。 从技术上讲，作为一个半结构化的信息单元，文档存储中的文档可以是任何形式可用的文档，包括 XML、JOSN、YAML 等，这取决于数据库供应商的设计。 比如，JSON 就是一种常见的选择。虽然 JSON 不是结构化数据的最佳选择，但是 JSON 型的数据在前端和后端应用中都可以使用。常见的文档存储数据库有：MongoDB、CouchDB、Terrastore 等。 图存储​ 最后一类 NoSQL 数据库是图数据库。本书重点讨论的 Nebula Graph 也是一种图数据库。虽然同为 NoSQL 型数据库，但是图数据库与上述 NoSQL 数据库有本质上的差异。图数据库以点、边、属性的形式存储数据。其优点在于灵活性高，支持复杂的图形算法，可用于构建复杂的关系图谱。我们将在随后的章节中详细讨论图数据库。不过在本章中，你只要知道图数据库是一种 NoSQL 类型的数据库就可以了。常见的图数据库有：Nebula Graph、Neo4j、OrientDB 等。","s":"NoSQL 数据库","u":"/zh-Hans/docs/introduction/related-tech/","h":"#nosql-数据库","p":1090},{"i":1098,"t":"来看一张 2020 年的图技术全景lan 和图有关联的技术有很多，可以大致分为这么几类： 基础设施：包括图数据库、图计算(处理)引擎、图深度学习、云服务等。 应用：包括可视化、知识图谱、反诈骗、网络安全、社交网络等。 开发工具：包括图查询语言、建模工具、开发框架和库。 电子书籍info和会议等。","s":"图技术方面","u":"/zh-Hans/docs/introduction/related-tech/","h":"#图技术方面","p":1090},{"i":1100,"t":"在上一节中，我们介绍了图语言的历史。在这一节中，我们对图语言的功能做一个分类： 近邻查询：查询给定点或者边的邻边、邻点，或者是 K 跳的近邻。 图模式匹配(Pattern matching)：找到一个/所有的子图，满足给定的图模式；这个问题非常接近于\"子图同构映射(subgraph isomorphism)\"——虽然两个看上去不同的图，但其实是一模一样的subiso。 可达性（连通性）问题：最常见的可达性问题就是最短路径问题。泛化一些，这类问题通常用正则路径(Regular Path Query)的方式来描述——一系列联通的点组构成了一条路径，而该路径需要满足某种正则表达。 分析型问题：通常与一些汇聚型算子相关（平均值、count、最大值、点的出入度），或者度量所有两两点之间的距离、某节点与其他节点之间的互动程度（介数中心性）等。","s":"图语言","u":"/zh-Hans/docs/introduction/related-tech/","h":"#图语言","p":1090},{"i":1102,"t":"一个图系统通常会涉及到复杂的数据流水线biggraph，从数据源(左边)到处理输出(右边)，会经过多个数据加工处理环节和系统；大的模块可以分为 ETL模块，图数据库系统(Graph OLTP)，图处理系统(Graph OLAP)，基于图引擎的应用系统（BI、知识图谱等）。 虽然这两类系统都是与图数据和图技术相关的系统，也处理类似的目标，但是他们有着不同的起源和特长（及弱点）： （在线）图数据库目标是图的持久化存储管理、高效的子图操作。硬盘（及网络）是目标运行设备，物理/逻辑数据映射，数据完整性和（故障）一致性是主要目标。每一个请求通常只会涉及到全图的一小部分，通常可以在一台服务器上完成；单个请求时延通常在毫秒到秒级别，请求并发量通常在几千到几十万。早期的 Neo4j 是图数据库领域的起源之一。 （离线）图处理系统目标是全图的大批量、并行、迭代、处理与分析，内存（及网络）是目标运行设备。每一个请求会涉及到所有的图节点，需要所有的服务器参与完成；单个请求的时延通常在分钟到小时（天），请求并发量通常为个位数。Google 的 PregelPregel 是图处理系统的典型起源代表，它的点中心编程抽象与BSP的运行模式构成的编程范式，相比之前 Hadoop Map-Reduce 是更为图友好的 API 抽象。 iga","s":"图数据库(Graph Database)与图处理(Graph processing)系统","u":"/zh-Hans/docs/introduction/related-tech/","h":"#图数据库graph-database与图处理graph-processing系统","p":1090},{"i":1104,"t":"对于一个大规模的图数据来说，是很难存放在单个服务器的内存中的，即使仅仅存放图结构本身也不够。而且通过增加单服务器的能力，其成本价格通常成指数级别上升。 此外，随着数据量的增加，例如到达千亿级别的时候，已经超过了市面上所有商用服务器的容量能力。 与此对应的，另外一个经常使用的方案，是对数据进行分片，并将每个分片放置在不同的服务器上（并进行冗余备份），以此来增加可靠性和性能。对于一些 NoSQL 型的系统，例如 key-value 或者文档型的系统来说，这个分片方式是比较直观和自然的；通常可以根据 key 或者 docID，来将每个记录或者数据单元(key-value, doc)放在不同的服务器上。 但是图这种数据结构的分片通常不那么直观，这是因为通常图是“全联通”的，每个点通常只要6跳就可以联通到其他任何节点； 而理论上早已证明图的划分问题是 NP 的。 与此同时，当把整个图数据分散到多个服务器时，跨服务器的网络访问时延10倍于同一个服务器内部的硬件(内存)访问时间；因此对于一些深度优先遍历的场景，会发生大量的跨网络访问，导致整体时延极高。 gpml 另一方面，通常图有着明显的幂律分布；少量节点的邻边稠密程度远大于平均的节点，虽然处理这些节点通常可以在同一台服务器内，减少了跨网络访问，但这也意味着这些服务器压力会远大于平均。 因此，常见的图分片(Sharding)方式有几类： 偏应用层面的分片：应用层感知并控制每个点和边应该落在哪个分片上，一般来说可以根据点和边的类型（比如业务意义来人为）判断。将一组相同类型的点放在一个分片，另一组相同类型的点放在另一个分片。当然，为了高可靠，分片本身还可以做多副本。在应用使用时，从各个分片取回所要的点和边，然后在偏应用侧（或者某个代理服务器端），将取回的数据拼装成最终的结果。其典型代表是 Neo4j 4.x 的 Fabric。 使用分布式的缓存层：在硬盘之上增加内存缓存层，并对重要的部分分片和数据（例如图结构）进行缓存，并预热这部分缓存。 增加（只读）副本或视图 (View)：为部分图分片增加只读的副本或者建立一个视图，将较重的读请求负载通过这些分片服务器承担。 进行细颗粒度的图划分：例如将点和边组成多个小分片（Partition），而不是一台服务器一个大分片（Sharding)，再将关联性较强的 Partition 尽量放置在同一个服务器上arr。 具体工程实践时，也会混合使用上述几种方式。通常，离线的图处理系统会通过一个ETL过程，将图进行一定程度的预处理以提高局部性；而在线图数据库系统通常会选择周期性的数据再平衡过程来提高数据局部性。","s":"图的分片方式","u":"/zh-Hans/docs/introduction/related-tech/","h":"#图的分片方式","p":1090},{"i":1106,"t":"在文献Ubiquity中，对于无处不在的大图和挑战做了详尽的调研，下面是其列出的十大图技术挑战： 可扩展性(软件可以处理更大的图规模): 包括大图的加载、更新、图计算和图遍历，触发器，超级节点； 可视化：可定制布局，大图的渲染，多层次展示，动态（更新）的展示 查询语言和编程 API：包括语言表达能力、标准兼容性、与现有系统的兼容性；子查询的设计和跨多图之间的关联查询 更快的图（及机器学习）算法 易用性（配置和使用） 性能指标与测试 更通用的图技术软件（例如，处理离线、在线、流式的计算） 图清洗（ETL） Debug 调试与测试","s":"一些技术上的挑战","u":"/zh-Hans/docs/introduction/related-tech/","h":"#一些技术上的挑战","p":1090},{"i":1108,"t":"对于图数据库通常会有一个误解，只要涉及到图结构的数据存取就需要存放在图数据库中，这是一种很大的浪费。 这就像也许你只需要一个 SQLite，却用了一个 Oracle。 当数据量并不大时，通常单机内存可以放下，例如数据量几千万的点边关系，使用一些单机的开源工具也可以取得很好的效果。 !!! Note 下面是一些推荐的单机图库，也可以集成在你的应用程序里面。 JGraphTJGraphT: 一个知名的开源 Java 图论库(library)，其实现了相当多的高效图算法。 JUNGJUNG是BSD许可下用Java编写的开源图建模和可视化框架。该框架内置了许多布局算法，以及诸如图聚类和节点中心性度量之类的分析算法。 igraphigraph: 一个轻量且功能强大的 Library, 支持R、python、C NetworkXNetworkX: 数据科学家做图论分析第一选择， python。 CytoscapeCytoscape: 功能强大的可视化开源图分析工具。 GephiGephi: 功能强大的可视化开源图分析工具。 arrows.appArrow： 非常简单的脑图工具，用于可视化生成 Cypher 语句.","s":"一些开源的单机图工具","u":"/zh-Hans/docs/introduction/related-tech/","h":"#一些开源的单机图工具","p":1090},{"i":1110,"t":"LDBC​ 关联数据基准委员会（LDBCLDBC，Linked Data Benchmark Council）是由Oracle、Intel等软硬件巨头和主流图数据库厂商Neo4j和TigerGraph等组成的非赢利机构，是图的基准指南制定者与测试结果发布机构，在行业内有着很高的影响力。 社交网络基准测试（SNB，Social Network Benchmark）是由关联数据基准委员会（LDBC）开发的面向图数据库的基准测试（Benchmark）之一，分为交互式查询（Interactive）和商业智能（BI）两个场景。其作用类似于 TPC-C, TPC-H 等测试在 SQL 型数据库中的功能，可以帮助用户比较多种图数据库产品的功能、性能、容量。 SNB 数据集模拟一个社交网络的人、发帖之间的关系，考虑了社交网络的分布属性、人的活跃度等等社交信息。 其标准数据量从 0.1 GB (scale factor 0.1) 到 1000 GB (sf1000)，也可以生成 10 TB，100 TB等更大的数据集；其点、边数量如下表。","s":"一些行业数据集和 Benchmark","u":"/zh-Hans/docs/introduction/related-tech/","h":"#一些行业数据集和-benchmark","p":1090},{"i":1114,"t":"根据 Gartner 的预计，云服务一直保持较快的增速和渗透率cl。大量的商业软件，正在从 10 年前完全私有本地逐步转向基于云服务的商业模式。 云服务的一大优点是其提供了近乎无限的弹性能力；这也要求各种基于云基础设施的软件必须有更好的快速弹性扩缩容能力。","s":"上云的趋势在加速，对于弹性能力提出更高要求","u":"/zh-Hans/docs/introduction/related-tech/","h":"#上云的趋势在加速对于弹性能力提出更高要求","p":1090},{"i":1116,"t":"硬件决定了软件的架构——从发现摩尔定律的 50 年代到进入多核的 00 年代，硬件发展趋势和速度一直深刻的决定了软件的架构。数据库类系统大多围绕“硬盘+内存”设计，高性能计算型系统大多围绕“内存 + CPU”设计，分布式系统面对千兆、万兆和 RDMA 网卡的设计也完全不同。 图基于拓扑的遍历有着极其明显的随机访问特点，因此大多数早期图数据库系统都采用了“大内存 + HDD” 的架构————通过设计常驻在内存中的一些数据结构（例如B+树、Hash表等），在内存中实现随机访问目的，以优化图的拓扑遍历，再将这些随机访问转换成 HDD 所适合的顺序读写。整套软件的架构（包括存储和计算层）都必须基于和围绕这样的 IO 流程来展开。随着 SSD 价格的快速下降ssdhdd，SSD 正在替代 HDD 成为持久化设备的主流。SSD 随机访问友好、IO 队列深、按块存取的特点与 HDD 高度顺序、随机时延极高、磁道易损坏的访问特点有着明显的不同。全部的软件架构也需要重新设计，这成为沉重的历史技术负担。 https://graphaware.com/graphaware/2020/02/17/graph-technology-landscape-2020.html↩ 学习目的(非商业用途)可以联系[作者]((mailto:min.wu@vesoft.com)获取电子版。↩ https://en.wikipedia.org/wiki/Graph_isomorphism↩ The Future is Big Graphs! A Community View on Graph Processing Systems. https://arxiv.org/abs/2012.06171↩ G. Malewicz, M. H. Austern, A. J. Bik, J. C. Dehnert, I. Horn, N. Leiser, and G. Czajkowski. Pregel: a system for large-scale graph processing. In Proceedings of the International Conference on Management of data (SIGMOD), pages 135–146, New York, NY, USA, 2010. ACM↩ https://neo4j.com/graphacademy/training-iga-40/02-iga-40-overview-of-graph-algorithms/↩ https://livebook.manning.com/book/graph-powered-machine-learning/welcome/v-8/↩ https://www.arangodb.com/learn/graphs/using-smartgraphs-arangodb/↩ https://arxiv.org/abs/1709.03188↩ https://jgrapht.org/↩ https://github.com/jrtom/jung↩ https://igraph.org/↩ https://networkx.org/↩ https://cytoscape.org/↩ https://gephi.org/↩ https://arrows.app/↩ https://github.com/ldbc/ldbc_snb_docs↩ https://cloudcomputing-news.net/news/2019/apr/15/public-cloud-soaring-to-331b-by-2022-according-to-gartner/↩ https://blocksandfiles.com/2021/01/25/wikibon-ssds-vs-hard-drives-wrights-law/↩","s":"硬件趋势，SSD 将成为主流的持久化设备","u":"/zh-Hans/docs/introduction/related-tech/","h":"#硬件趋势ssd-将成为主流的持久化设备","p":1090},{"i":1118,"t":"在 Nebula Graph 中，一个点由点的 ID 唯一标识，即 VID 或 Vertex ID。","s":"点 VID","u":"/zh-Hans/docs/introduction/vid/","h":"","p":1117},{"i":1120,"t":"VID 数据类型只可以为定长字符串FIXED_STRING(<N>)或INT64；一个图空间只能选用其中一种 VID 类型。 VID 在一个图空间中必须唯一，其作用类似于关系型数据库中的主键（索引+唯一约束）。但不同图空间中的 VID 是完全独立无关的。 点 VID 的生成方式必须由用户自行指定，系统不提供自增 ID 或者 UUID。 VID 相同的点，会被认为是同一个点。例如： VID 相当于一个实体的唯一标号，例如一个人的身份证号。Tag 相当于实体所拥有的类型，例如\"滴滴司机\"和\"老板\"。不同的 Tag 又相应定义了两组不同的属性，例如\"驾照号、驾龄、接单量、接单小号\"和\"工号、薪水、债务额度、商务电话\"。 同时操作相同 VID 并且相同 Tag 的两条INSERT语句（均无IF NOT EXISTS参数），晚写入的INSERT会覆盖先写入的。 同时操作包含相同 VID 但是两个不同TAG A和TAG B的两条INSERT语句，对TAG A的操作不会影响TAG B。 VID 通常会被（LSM-tree 方式）索引并缓存在内存中，因此直接访问 VID 的性能最高。","s":"VID 的特点","u":"/zh-Hans/docs/introduction/vid/","h":"#vid-的特点","p":1117},{"i":1122,"t":"Nebula Graph 1.x 只支持 VID 类型为INT64，从 2.x 开始支持INT64和FIXED_STRING(<N>)。在CREATE SPACE中通过参数vid_type可以指定 VID 类型。 可以使用id()函数，指定或引用该点的 VID； 可以使用LOOKUP或者MATCH语句，来通过属性索引查找对应的 VID; 性能上，直接通过 VID 找到点的语句性能最高，例如DELETE xxx WHERE id(xxx) == \"player100\"，或者GO FROM \"player100\"等语句。通过属性先查找 VID，再进行图操作的性能会变差，例如LOOKUP | GO FROM $-.ids等语句，相比前者多了一次内存或硬盘的随机读（LOOKUP）以及一次序列化（|）。","s":"VID 使用建议","u":"/zh-Hans/docs/introduction/vid/","h":"#vid-使用建议","p":1117},{"i":1124,"t":"VID 的生成工作完全交给应用端，有一些通用的建议： （最优）通过有唯一性的主键或者属性来直接作为 VID；属性访问依赖于 VID; 通过有唯一性的属性组合来生成 VID，属性访问依赖于属性索引。 通过 snowflake 等算法生成 VID，属性访问依赖于属性索引； 如果个别记录的主键特别长，但绝大多数记录的主键都很短的情况，不要将FIXED_STRING(<N>)的N设置成超大，这会浪费大量内存和硬盘，也会降低性能。此时可通过 BASE64，MD5，hash 编码加拼接的方式来生成。 如果用 hash 方式生成 int64 VID：在有 10 亿个点的情况下，发生 hash 冲突的概率大约是 1/10。边的数量与碰撞的概率无关。","s":"VID 生成建议","u":"/zh-Hans/docs/introduction/vid/","h":"#vid-生成建议","p":1117},{"i":1126,"t":"VID 的数据类型必须在创建图空间时定义，且一旦定义无法修改。 VID 必须在插入点时设置，且一旦设置无法修改。","s":"定义和修改 VID 与其数据类型","u":"/zh-Hans/docs/introduction/vid/","h":"#定义和修改-vid-与其数据类型","p":1117},{"i":1128,"t":"绝大多数情况下，Nebula Graph 的查询语句（MATCH、GO、LOOKUP）的执行计划，必须要通过一定方式找到查询起始点的 VID（start vid）。 定位 start vid 只有两种方式： 例如 GO FROM \"player100\" OVER 是在语句中显式的指明 start vid 是 \"player100\"； 例如 LOOKUP ON player WHERE player.name == \"Tony Parker\" 或者 MATCH (v:player {name:\"Tony Parker\"}) ，是通过属性 player.name 的索引来定位到 start vid； !!! caution `match (n) return n;` 会返回错误`Scan vertices or edges need to specify a limit number, or limit number can not push down.`，这是一个全局扫描，需要用`LIMIT`子句限制返回数量才能执行。","s":"\"查询起始点\"(start vid) 与全局扫描","u":"/zh-Hans/docs/introduction/vid/","h":"#查询起始点start-vid-与全局扫描","p":1117},{"i":1130,"t":"Nebula Graph 是一款开源的、分布式的、易扩展的原生图数据库，能够承载包含数千亿个点和数万亿条边的超大规模数据集，并且提供毫秒级查询。","s":"什么是 Nebula Graph","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"","p":1129},{"i":1132,"t":"图数据库是专门存储庞大的图形网络并从中检索信息的数据库。它可以将图中的数据高效存储为点（Vertex）和边（Edge），还可以将属性（Property）附加到点和边上。 图数据库适合存储大多数从现实抽象出的数据类型。世界上几乎所有领域的事物都有内在联系，像关系型数据库这样的建模系统会提取实体之间的关系，并将关系单独存储到表和列中，而实体的类型和属性存储在其他列甚至其他表中，这使得数据管理费时费力。 Nebula Graph 作为一个典型的图数据库，可以将丰富的关系通过边及其类型和属性自然地呈现。","s":"什么是图数据库","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#什么是图数据库","p":1129},{"i":1135,"t":"Nebula Graph 是在 Apache 2.0 条款下开发的。越来越多的人，如数据库开发人员、数据科学家、安全专家、算法工程师，都参与到 Nebula Graph 的设计和开发中来，欢迎访问 Nebula Graph GitHub 主页参与开源项目。","s":"开源","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#开源","p":1129},{"i":1137,"t":"基于图数据库的特性使用 C++ 编写的 Nebula Graph，可以提供毫秒级查询。众多数据库中，Nebula Graph 在图数据服务领域展现了卓越的性能，数据规模越大，Nebula Graph 优势就越大。详情请参见 Nebula Graph benchmarking 页面。","s":"高性能","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#高性能","p":1129},{"i":1139,"t":"Nebula Graph 采用 shared-nothing 架构，支持在不停止数据库服务的情况下扩缩容。","s":"易扩展","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#易扩展","p":1129},{"i":1141,"t":"Nebula Graph 提供 Java、Python、C++ 和 Go 等流行编程语言的客户端，更多客户端仍在开发中。详情请参见 Nebula Graph clients。","s":"易开发","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#易开发","p":1129},{"i":1143,"t":"Nebula Graph 支持严格的角色访问控制和 LDAP（Lightweight Directory Access Protocol）等外部认证服务，能够有效提高数据安全性。详情请参见验证和授权。","s":"高可靠访问控制","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#高可靠访问控制","p":1129},{"i":1145,"t":"Nebula Graph 开放了越来越多的原生工具，例如 Nebula Studio、Nebula Console、Nebula Exchange 等，更多工具可以查看生态工具概览。 此外，Nebula Graph 还具备与 Spark、Flink、HBase 等产品整合的能力，在这个充满挑战与机遇的时代，大大增强了自身的竞争力。","s":"生态多样化","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#生态多样化","p":1129},{"i":1147,"t":"Nebula Graph 查询语言，简称为 nGQL，是一种声明性的、部分兼容 openCypher 的文本查询语言，易于理解和使用。详细语法请参见 nGQL 指南。","s":"兼容 openCypher 查询语言","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#兼容-opencypher-查询语言","p":1129},{"i":1149,"t":"闪存型设备有着极高的性能，并且价格快速下降， Nebula Graph 是一个面向 SSD 设计的产品，相比于基于 HDD + 大内存的产品，更适合面向未来的硬件趋势，也更容易做到读写平衡。","s":"面向未来硬件，读写平衡","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#面向未来硬件读写平衡","p":1129},{"i":1151,"t":"用户可以轻松地在 Nebula Graph 中建立数据模型，不必将数据强制转换为关系表。而且可以自由增加、更新和删除属性。详情请参见数据模型。","s":"灵活数据建模","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#灵活数据建模","p":1129},{"i":1153,"t":"腾讯、美团、京东、快手、360 等科技巨头都在使用 Nebula Graph。详情请参见 Nebula Graph 官网。","s":"广受欢迎","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#广受欢迎","p":1129},{"i":1155,"t":"Nebula Graph 可用于各种基于图的业务场景。为节约转换各类数据到关系型数据库的时间，以及避免复杂查询，建议使用 Nebula Graph。","s":"适用场景","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#适用场景","p":1129},{"i":1157,"t":"金融机构必须仔细研究大量的交易信息，才能检测出潜在的金融欺诈行为，并了解某个欺诈行为和设备的内在关联。这种场景可以通过图来建模，然后借助 Nebula Graph，可以很容易地检测出诈骗团伙或其他复杂诈骗行为。","s":"欺诈检测","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#欺诈检测","p":1129},{"i":1159,"t":"Nebula Graph 能够及时处理访问者产生的实时信息，并且精准推送文章、视频、产品和服务。","s":"实时推荐","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#实时推荐","p":1129},{"i":1161,"t":"自然语言可以转化为知识图谱，存储在 Nebula Graph 中。用自然语言组织的问题可以通过智能问答系统中的语义解析器进行解析并重新组织，然后从知识图谱中检索出问题的可能答案，提供给提问人。","s":"知识图谱","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#知识图谱","p":1129},{"i":1163,"t":"人际关系信息是典型的图数据，Nebula Graph 可以轻松处理数十亿人和数万亿人际关系的社交网络信息，并在海量并发的情况下，提供快速的好友推荐和工作岗位查询。","s":"社交网络","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#社交网络","p":1129},{"i":1165,"t":"用户也可以通过视频了解什么是图数据。 图数据库 Nebula Graph 介绍视频（01 分 39 秒）","s":"视频","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#视频","p":1129},{"i":1167,"t":"查看演讲快速了解图数据库概况。","s":"主题演讲","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#主题演讲","p":1129},{"i":1169,"t":"官方网站 文档首页 博客首页 论坛 GitHub","s":"相关链接","u":"/zh-Hans/docs/introduction/what-is-nebula-graph/","h":"#相关链接","p":1129},{"i":1172,"t":"图技术基础 TODO: Polish style 图技术进阶 NebulaGraph 必知必会","s":"课程列表","u":"/zh-Hans/training/","h":"#课程列表","p":1170},{"i":1175,"t":"在图结构课程中，我们介绍了图有点和边两个基本元素。任意点和边都可以有自己的特征，我们把这些特征称为“属性”。通过点和边，我们可以将现实中的业务对象之间的关系构建在图中，而点和边的属性为我们构建的关系增强了语义的清晰度和上下文。 对于点和边带有属性的图，我们称之为属性图。NebulaGraph 的属性图是有向图，由点，边，标签，关系类型和属性组成。 接下来我们具体介绍属性图中的属性、标签、关系类型。","s":"属性图定义","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-property/","h":"#属性图定义","p":1173},{"i":1177,"t":"图中的属性由键（key）和值（value）构成。在数据模型层面，我们把键称为 \"属性名\"。例如，一个点的属性（颜色：蓝色）。其中颜色为属性名，蓝色为属性值。 NebulaGraph 属性名必须是数值、布尔、字符串、日期和时间的数据类型中的一种，且不能是复合数据类型。点和边都可以有属性。 点上的属性为点属性。例如，下图中绿色的点有两个属性，属性名分别为：age和name（凸显下图片中的属性），对应的值为40和Kobe Bryant。 边上的属性为边属性。例如，绿色的点（科比布莱恩特）指向蓝色的点（湖人队）的边也有两个属性，属性名分别为：end_year（科比何时结束为湖人队效力的时间）和start_year（科比何时为湖人队效力），对应的值为2016和1996。","s":"属性","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-property/","h":"#属性","p":1173},{"i":1179,"t":"在 NebulaGraph 图数据库中，点的一组属性的集合称之为标签（Tag）。例如，绿色点的两个属性age和name，它们被包含在集合player中。这里的player即为标签 Tag 的名称。 一个 Tag 可以有多个属性，player除了有age外，还可以有name，或者其他属性，例如height。 一个点可以有 0 至多个 Tag。","s":"标签","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-property/","h":"#标签","p":1173},{"i":1181,"t":"在 NebulaGraph 图数据库中，边一组属性的集合称之为边类型（Edge Type）。例如，黄色的边有两个属性end_year和start_year，这两个属性被包含在集合serve中。serve即为关系类型 Edge Type 的名称。 一条边只能有一个 Edge Type。","s":"关系类型","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-property/","h":"#关系类型","p":1173},{"i":1183,"t":"为了更形象得表示标签（Tag）、关系类型（Edge Type）和属性的关系，我们可以将 Tag 或 Edge Type 名称理解成表格的名称，属性名为表格中的表头，属性值为表格中的数据。 表名称（Tag）：player name age Kobe Bryant 40 Tim Duncan 42 表名称（Edge Type）：serve start_year end_year 1996 2016 2006 2015","s":"属性、标签、关系类型之间的关系","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-property/","h":"#属性标签关系类型之间的关系","p":1173},{"i":1185,"t":"1、NebulaGraph 的点可以带有多少个 Tag? 0 1 2 多个 2、可以为点添加以下哪些元素以表达业务对象之间的关系？ 点 属性 Tag Edge Type 3、以下说法正确的是？ NebulaGraph 的属性图是有向图，由点，边，标签，关系类型和属性组成。 在 NebulaGraph 图数据库中，点的一组属性的集合称之为标签（Tag）。 NebulaGraph 属性名必须是数值、布尔、字符串、日期和时间的数据类型中的一种，且不能是复合数据类型。 在 NebulaGraph 图数据库中，边一组属性的集合称之为边类型（Edge Type）。 提交答案 答错了","s":"课堂小测试","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-property/","h":"#课堂小测试","p":1173},{"i":1187,"t":"上节课介绍了图论中图的概念，本节课将介绍图的结构，也称为图拓扑。","s":"图结构","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"","p":1186},{"i":1189,"t":"图由两个基本元素构成：点和边。 点代表网络关系中的实体；边代表实体和实体之间的关系。","s":"基本元素","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#基本元素","p":1186},{"i":1191,"t":"点在图数据库中也被称之为节点，可用来存储数据实体、物品、事件、地点等。 例如在转账交易中，点可以存储账户；在社媒网评中，点可以存储用户名；在历史事件中，点可以存储历史发生的事件。 下面的图片中的两点分别代表了篮球队中的球员和球队，科比·布莱恩特（Kobe Bryant）和湖人队（Lakers）。 我们可以将点存储为任意实体，但是如何体现点和点之间的联系？接下来我们看下什么是图中的边。","s":"点","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#点","p":1186},{"i":1193,"t":"我们可以在点和点之间插入边，让点和点之间形成关系。这种关系也就被称为边。 图数据库中的关系可以用动词表示，例如，账户A转账至账户B，A和B相互关注并且A和B都关注C。 还可以用表示为附属关系。例如，张三拥有一辆汽车；乾隆是雍正的儿子等等。 点和点之间插入一条边，在上方的关系图中，在点科比·布莱恩特和点湖人队之间插入一条serve边，插入边后，即代表科比曾效力于湖人队。 点和点之间可以插入多条边，在柯尼斯堡七桥问题中，2 点之间有的是 1 条边，有的是 2 条边。 下面例子中左边图是有方向的，C指向B，B指向A，这样的图称为有向图；右边图中每条边都没有方向，则称为无向图，A和B只是连接并没有明确的方向。无向图中，两点之间的关系是双向的或者对等的。","s":"边","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#边","p":1186},{"i":1195,"t":"图除了点和边基本元素外，常见的还有以下元素：","s":"其他元素","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#其他元素","p":1186},{"i":1197,"t":"悬挂边（Dangling Edge）是指一条边的起点或终点不存在于数据库中的边。关于悬挂边的详细描述，参见悬挂边。","s":"悬挂边","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#悬挂边","p":1186},{"i":1199,"t":"子图指节点集和边集分别是某一图的节点集的子集和边集的子集的图。","s":"子图","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#子图","p":1186},{"i":1201,"t":"点和边都可以附加属性。属性由键（key）和值（value）构成。例如，颜色：蓝色。在数据模型层面，我们把键称为\"属性名称\"。关于属性的更多介绍，参见课程属性图。","s":"属性","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#属性","p":1186},{"i":1203,"t":"在有向图中，有限或无限条边构成了一条路径。有向图中遍历图的路径类型分为三种：walk、trail、path。关于路径的详细描述，参见课程路径。 walk walk 类型的路径由有限或无限的边序列构成。遍历时点和边可以重复。 trail trail 类型的路径由有限的边序列构成。遍历时只有点可以重复，边不可以重复。 path path 类型的路径由有限的边序列构成。遍历时点和边都不可以重复。","s":"路径","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#路径","p":1186},{"i":1205,"t":"1、点被用来存储什么？ 实体之间的关系 圆圈 实体 网络图 2、以下关于边的说法，正确的是？ 边是双向的。 边表示点与点之间的关系。 点与点之间只能有一条边。 图中每条边都有箭头，则为无向图。 3、以下关于路径的说法，错误的是？ 路径是一个有限或无限条边的序列。 遍历时点和边可以重复的是 walk 类型路径。 遍历时点和边都不可以重复的是 trail 类型路径。 路径由有限的边序列构成的是 path 类型的路径。 提交答案 答错了","s":"课堂小测试","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph-structure/","h":"#课堂小测试","p":1186},{"i":1208,"t":"本课程介绍的图，指的不是传统意义上的图片，而是图论中的“图”。 图论始于 18 世纪初期的柯尼斯堡七桥问题。 柯尼斯堡当时是普鲁士的城市，普雷格尔河穿过柯尼斯堡，不仅把柯尼斯堡分成了两部分，而且还在河中间形成了两个小岛。这就将整个城市分割成了四个区域，各区域由七座桥连接。在所有的桥都只能走一遍的前提下，如何能把这个地方所有的桥都走一遍呢？ 大家可以思考一下这个问题的答案。","s":"柯尼斯堡七桥问题","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph/","h":"#柯尼斯堡七桥问题","p":1206},{"i":1210,"t":"数学家欧拉于 1735 年提出，并没有方法能圆满解决这个问题，并在第二年发表论文，证明符合条件的走法并不存在。这篇论文在圣彼得堡科学院发表，成为图论史上第一篇重要文献。 在论文中，欧拉把实际的抽象问题简化为平面上的点与边组合，将城市的四个区域抽象成点，将连接城市的七座桥抽象成连接点的边。 这样若从某点出发后最后再回到这点，则这一点的线数必须是偶数，这样的点称为偶顶点。相对的，连有奇数条线的点称为奇顶点。欧拉论述了，由于柯尼斯堡七桥问题中存在4个奇顶点，它无法实现符合题意的遍历。 欧拉发表的相关论文被认为是图论领域的第一篇文章，因此普遍认为欧拉是图论的创始人。 图论中的相关概念，我们将在后面的学习中提到。简单来说，图论就是研究图的学问。图是基本研究对象，用于表示实体与实体之间的关系。","s":"图论","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph/","h":"#图论","p":1206},{"i":1212,"t":"图论中的图在英文中被称为 Graph ，在中文中，强调为“拓扑图”、“网络图”等。这一名词最早由西尔维斯特在 1878 年提出。他是著名的英国数学家、牛津大学几何教授，用图来表示数学和化学分子结构之间的关系。 图由一些小圆点和连接这些圆点的直线或曲线组成。小圆点称为顶点或节点，直线或曲线称为边。 例如下面红色的圆圈表示一个点，蓝色的连接4、5的直线称为边。 从数学角度来说，图论是研究建模对象之间关系结构的学科。 在网络理论中，图可以用来做可视化的社会网络分析，研究社会实体之间的关系结构。 在运筹学中，以下 PERT 图可以提供一个基于图论的商业管理技术，针对不确定性较高的工作项目，用网络图规划整个项目，以排定期望的项目时程表。 在基础医学领域，图也被用来研究分子网络、疾病预测等等。 由此可见，图可用于在物理、生物、社会和信息系统中建模许多类型的关系和过程，许多实际问题可以用图来表示。因此，图论成为运筹学、控制论、信息论、网络理论、社会科学、语言学、计算机科学等众多学科强有力的数学工具。","s":"图的定义","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph/","h":"#图的定义","p":1206},{"i":1214,"t":"1、以下关于图的说法，错误的是？ 图用于表示实体与实体之间的关系。 使用图抽象柯尼斯堡七桥问题，答案是有解。 图可以用在基础医学、网络科学等各领域。 图论中的图可以被称为“拓扑图”、“网络图”。 2、图论的创始人是？ 丹尼尔·伯努利 詹姆斯·约瑟夫·西尔维斯特 莱昂哈德·欧拉 约翰·伯努利 3、以下关于图的说法，正确的是？ 图可以用来做可视化的社会网络分析，研究社会实体之间的关系结构。 图中的小圆点称为中心点，直线或曲线称为悬挂边。 图无法应用在语言学。 欧拉于 1735 年发表论文证明柯尼斯堡七桥问题无解。 提交答案 答错了","s":"课程小测试","u":"/zh-Hans/training/graph-basics/basic-knowledge/basic-knowledge-graph/","h":"#课程小测试","p":1206},{"i":1216,"t":"基础知识（一）系列课程将帮助您了解图数据库中图的概念、图结构、及图的属性相关内容。 📄️ 图 柯尼斯堡七桥问题 📄️ 图结构 上节课介绍了图论中图的概念，本节课将介绍图的结构，也称为图拓扑。 📄️ 属性图 属性图定义","s":"课程介绍","u":"/zh-Hans/training/graph-basics/basic-knowledge/overview/","h":"","p":1215},{"i":1218,"t":"柯尼斯堡七桥问题","s":"📄️ 图","u":"/zh-Hans/training/graph-basics/basic-knowledge/overview/","h":"","p":1215},{"i":1220,"t":"上节课介绍了图论中图的概念，本节课将介绍图的结构，也称为图拓扑。","s":"📄️ 图结构","u":"/zh-Hans/training/graph-basics/basic-knowledge/overview/","h":"","p":1215},{"i":1222,"t":"属性图定义","s":"📄️ 属性图","u":"/zh-Hans/training/graph-basics/basic-knowledge/overview/","h":"","p":1215},{"i":1224,"t":"您无需具备任何前提条件即可开始学习本课程。","s":"前提条件","u":"/zh-Hans/training/graph-basics/basic-knowledge/overview/","h":"#前提条件","p":1215},{"i":1226,"t":"完成本系列所有课程将耗时约 15 分钟。","s":"时长","u":"/zh-Hans/training/graph-basics/basic-knowledge/overview/","h":"#时长","p":1215},{"i":1228,"t":"在图结构课程中，我们介绍了图中边的概念，这里我们详细了解悬挂边的概念。","s":"悬挂边","u":"/zh-Hans/training/graph-basics/widen-knowledge/dangling-edge/","h":"","p":1227},{"i":1230,"t":"图论中悬挂边（Dangling Edge）是指一条边的起点或终点不存在于数据库中的边。 在具体系统行为上，就是在边上能查到起点或终点的 VID，但是如果直接去数据库中查找这个 VID 的时候，无法查到这个点以及 Tag、属性。","s":"定义","u":"/zh-Hans/training/graph-basics/widen-knowledge/dangling-edge/","h":"#定义","p":1227},{"i":1232,"t":"在 NebulaGraph 3.X.X 中，有两种情况可能会出现悬挂边。 第一种情况：在起点和终点插入之前，用INSERT EDGE语句插入一条边，这时候这条边就是悬挂边。 第二种情况：使用DELETE VERTEX语句删除点的时候，没有使用WITH EDGE选项。这时候默认不删除该点关联的出边和入边，因此导致这条边变成悬挂边。 备注 需要注意的是，Nebula Graph 2.X 中，使用DELETE VERTEX语句会默认删除点关联的出边和入边，将不会出现悬挂边。","s":"悬挂边的产生","u":"/zh-Hans/training/graph-basics/widen-knowledge/dangling-edge/","h":"#悬挂边的产生","p":1227},{"i":1234,"t":"信息 以下内容中涉及到的 NebulaGraph 的图查询语言 nGQL 部分，不是本课程的重点。如果您对 nGQL 不熟悉，可以先跳过相关内容，后续课程会有详细介绍。 Nebula Graph 3.X.X 的数据模型中，由于设计允许图中存在悬挂边。 没有 openCypher 中的 MERGE 语句，所以对于悬挂边的保证完全依赖应用层面。 这里我们用INSERT EDGE插入一条起点和终点都不存在的悬挂边。 CREATE EDGE IF NOT EXISTS e1 (name string, age int); INSERT EDGE e1 (name, age) VALUES \"11\"->\"13\":(\"n1\", 1); GO：使用 GO 语句查询到这条边，例如GO FROM \"11\" OVER e1 YIELD properties(edge)查询到这条边的属性值。 GO 的查询是从边的 Key 开始查找起点，如果仅返回边的属性，是可以查看到悬挂边的属性的，但是无法返回点的属性，因为去查询点的时候，点是不存在的，例如GO FROM \"11\" OVER e1 YIELD properties($$)。 LOOKUP：在创建索引之后，也可以使用 LOOKUP 语句查询这条边，例如LOOKUP on e1 YIELD edge as r。 Lookup 的查询也是从边的 Key 开始遍历的，-[e]→，不需要起始点a和终点b。 MATCH：但是如果使用 MATCH 语句，例如MATCH ()-[e:e1]→() RETURN e LIMIT 100将不能查到悬挂边。 这是因为使用 MATCH 查询一条边，例如(a)-[e]->(b)中的e时，e的起点a和终点b必须是存在的。","s":"悬挂边的查询","u":"/zh-Hans/training/graph-basics/widen-knowledge/dangling-edge/","h":"#悬挂边的查询","p":1227},{"i":1236,"t":"基础知识（二）系列课程将帮助您了解更多图的相关的概念，例如自环、悬挂边、路径类型等。 📄️ VID 和 Rank 通过这节课，大家会了解 NebulaGraph 中 VID 和 Rank 两个概念。此外，还会帮助大家巩固在属性图课程中介绍的标签（Tag）和关系类型（Edge Type）的概念。 📄️ 悬挂边 在图结构课程中，我们介绍了图中边的概念，这里我们详细了解悬挂边的概念。 📄️ 路径 定义和分类 📄️ 自环 之前的课程中，我们已经学习了 Tag、Edge Type、VID、Rank 等概念，但是有一个概念我们还没有讲到，那就是自环。","s":"课程介绍","u":"/zh-Hans/training/graph-basics/widen-knowledge/overview/","h":"","p":1235},{"i":1238,"t":"通过这节课，大家会了解 NebulaGraph 中 VID 和 Rank 两个概念。此外，还会帮助大家巩固在属性图课程中介绍的标签（Tag）和关系类型（Edge Type）的概念。","s":"📄️ VID 和 Rank","u":"/zh-Hans/training/graph-basics/widen-knowledge/overview/","h":"","p":1235},{"i":1240,"t":"在图结构课程中，我们介绍了图中边的概念，这里我们详细了解悬挂边的概念。","s":"📄️ 悬挂边","u":"/zh-Hans/training/graph-basics/widen-knowledge/overview/","h":"","p":1235},{"i":1242,"t":"定义和分类","s":"📄️ 路径","u":"/zh-Hans/training/graph-basics/widen-knowledge/overview/","h":"","p":1235},{"i":1244,"t":"之前的课程中，我们已经学习了 Tag、Edge Type、VID、Rank 等概念，但是有一个概念我们还没有讲到，那就是自环。","s":"📄️ 自环","u":"/zh-Hans/training/graph-basics/widen-knowledge/overview/","h":"","p":1235},{"i":1246,"t":"在学习本系列课程前，您需了解： 图的概念 图结构 属性图","s":"前提条件","u":"/zh-Hans/training/graph-basics/widen-knowledge/overview/","h":"","p":1235},{"i":1248,"t":"完成本系列所有课程将耗时约 15 分钟。","s":"时长","u":"/zh-Hans/training/graph-basics/widen-knowledge/overview/","h":"","p":1235},{"i":1251,"t":"今天的课程介绍图论中一个重要的概念——路径。路径是指一个有限或无限的边序列，这些边连接着一系列点。路径的类型可以分为三种：walk、trail和path，在不同的路径类型之下遍历出来的图也会不一样。 为了让大家更好的理解这几个概念的不同，我们用 Dutor 和 Simon 小伙伴给大家展示。假设 Dutor 住在 A 地，而 Simon 住在 C 地，现在 Dutor 想要去 Simon 家。","s":"定义和分类","u":"/zh-Hans/training/graph-basics/widen-knowledge/path-type/","h":"#定义和分类","p":1249},{"i":1253,"t":"如果他采用的是walk方式，从 A 点出发，他可以去到每一个地点，走每一条路，最后再到到达 Simon 家。他可以走 A→B→C 也可以走 A→B→D→E→C。甚至还可以在走到 D 点的时候，发现自己东西忘记带了回一趟家，走 A→B→D→A→B→C，经过了 A 到 B 的这条边两次。 通俗的来说，walk就像是在小区跑步的你，每一条路和地点你都可以到达并且重复地走。walk类型的路径由无限或者有限的边序列构成，遍历的时候点和边都可以重复。 在 NebulaGraph 中，原生 nGQL 的 GO 语句采用的是walk类型路径。关于 GO 语句的详细介绍，期待后续课程喔。","s":"walk","u":"/zh-Hans/training/graph-basics/widen-knowledge/path-type/","h":"#walk","p":1249},{"i":1255,"t":"如果 Dutor 采用的是trail方式，他的可选路径就会受到很大的限制，他不能再半路掉头回去，否则他就会停在自己的家里。 因为trail类型的路径遍历时只有点可以重复，边不可以重复。从 A 出来的边只有 A→B，并且之前已经走过这条路了。他可以走 A→B→C 或者是 A→B→D→E→C 当然也可以走 A→B→C→D→E→C。 简单的来说，trail就像是只能走一次的吊桥，一旦已经走过去了，吊桥也就塌陷了。 在trail类型中，存在两种特殊的路径类型，cycle和circuit。这两个类型都是起点和终点重复，也就是说 Dutor 最后会回到自己的家。 cycle只有起点和终点重复之外没有别的点重复，他可以走 A->B->C->F->A 或者是 A->B->C->D->A。 circuit除了起点和终点重复之外，可能还存在其他重复点，他可以走 A->B->C->D->E->C->F->A，在这里他经过了两次 C 点。 MATCH、FINDPATH 和 GET SUBGRAPH 语句采用的是trail类型路径。关于这些语句的详细介绍，期待后续课程喔。","s":"trail","u":"/zh-Hans/training/graph-basics/widen-knowledge/path-type/","h":"#trail","p":1249},{"i":1257,"t":"如果 Dutor 采用的是path 方式，他只有两种方式到达 Simon 的家，走 A→B→C 或者走 A→B→D→E→C。这是因为path 方式遍历时点和边都不可以重复。 简单来说，path 就像是一条只能前进的路，一旦往前移动，身后的桥和陆地都会消失。","s":"path","u":"/zh-Hans/training/graph-basics/widen-knowledge/path-type/","h":"#path","p":1249},{"i":1259,"t":"相信到这里大家已经大概清楚这三种不同路径的概念啦。为了方便更好的区分这三种不同的概念，可以以下表格内容： walk trail path 路径长度 有限/无限 有限 有限 点是否可重复 是 是 否 边是否可重复 是 否 否","s":"总结","u":"/zh-Hans/training/graph-basics/widen-knowledge/path-type/","h":"#总结","p":1249},{"i":1261,"t":"之前的课程中，我们已经学习了 Tag、Edge Type、VID、Rank 等概念，但是有一个概念我们还没有讲到，那就是自环。","s":"自环","u":"/zh-Hans/training/graph-basics/widen-knowledge/selfloop/","h":"","p":1260},{"i":1263,"t":"今天的课程介绍图论中的另一个概念——自环。如果一条边所关联的两个点重合，则称此边为自环。 在 NebulaGraph 中，你可以插入一条起点和终点都相同的边。NebulaGraph 对于自环的操作没有封装任何的语法糖，操作方式与普通的边没有差别。","s":"定义","u":"/zh-Hans/training/graph-basics/widen-knowledge/selfloop/","h":"#定义","p":1260},{"i":1265,"t":"那么自环可以用来做什么呢？ 信息 以下内容中涉及到的 NebulaGraph 的图查询语言 nGQL 部分不是本课程的重点。如果您对 nGQL 不熟悉，可以先跳过相关内容，后续课程会有详细介绍。 作用一: 在某些场景下，图需要同时带有时序信息，可以用自环描述整个图的结构随着时间变化的情况。 NebulaGraph 的边可以使用 Rank 字段存放时间信息 (int64)，但是点上的字段不适合存放时间信息，因为存放的属性会被新写入的覆盖。有关 Rank 课程介绍，参见VID 和 Rank。 例如，我们先查找一次 VID 为player100， 点上的 Tag 为player的属性。 可以看到返回的名字是 Foesa。 在插入两次点后，再查询一次。 从返回结果中可以发现查出的名字是最后一次插入的名字n3。这是因为一个点可以多次插入属性值，以最后一次为准，所以我们不能用点的属性存放时间。 我们为 VID 为player100的点创建自环边。这里需要注意的是，如果起点、终点、边类型相同时，是无法区分多个边的，因此我们需要用 Rank 来做区分。假设插入三条边的 Rank 值分别是 1、2、3。我们使用 VID 查询，返回结果中可以看到 3 条起点和终点都相同的边。 在可视化工具（NebulaGraph Explorer）中，我们清晰地看到了自环边的存在。 因此，当用户需要为点添加时间属性时，可以先创建包含所需属性的边类型，然后为点插入一条或多条指向自身的边，将时间信息放置在自环的 Rank 上。查询时只需要查询指向自己的边属性。对于我们上面插入的自环，可以用以下语句查询： GO FROM \"player100\" OVER temp YIELD properties(edge).tmp, rank(edge); 作用二：自环的第二个作用是处理临时属性或 List 类型的属性。 在 NebulaGraph 中，复合数据 List 类型不能存储为点或边的属性，但是我们可以使用自环来实现动态添加属性。 当然如果你需要返回结果为 List，也可以通过函数实现，例如运行以下语句： nebula> MATCH (v1:player)-[e:temp]->() RETURN collect(e.tmp); 备注 之前课程介绍过悬挂边，一些用户可能用悬挂边来存放带时间或者 List 类型的数据，但是这样很容易触发问题。我们建议用自环来替代悬挂边。","s":"作用","u":"/zh-Hans/training/graph-basics/widen-knowledge/selfloop/","h":"#作用","p":1260},{"i":1267,"t":"通过这节课，大家会了解 NebulaGraph 中 VID 和 Rank 两个概念。此外，还会帮助大家巩固在属性图课程中介绍的标签（Tag）和关系类型（Edge Type）的概念。","s":"VID 和 Rank","u":"/zh-Hans/training/graph-basics/widen-knowledge/tag-edgetype-rank-vid/","h":"","p":1266},{"i":1269,"t":"这里我们用 Joe 小伙伴为大家更形象的展示 VID 的概念。Joe 是一个篮球运动员，我们为他运动员的身份创建一张表，表名为player。 插入他的姓名、年龄、加入球队和退出球队的时间。 当然在这个表下，也可以插入同是运动员的foesa的数据。 为了让大家更好的理解 NebulaGraph 的不同，我们给出使用 SQL、Nebula Graph、Neo4j 三种不同方式创建及插入数据的语句。 使用 SQL 创建表时，你需要用PRIMARY KEY指定主键以确定id为点的唯一标识。 在使用 Neo4j 语句时，不需要创建player表中的 ID，系统会自动分配一个内部 ID 用来唯一标识记录。 在 Nebula Graph 中，我们定义了点的唯一标识 VID，也可以理解成主键。需要注意的是与 Neo4j 不同，VID 必须在用户插入点时手动创建，系统不会自动生成。黑板上给出的语句中，INSERT VERTEX中的VALUES 101，就选定了 ID 作为 VID，插入了 Joe 的信息。换句话来说 VID 就像是人的身份证号，用来唯一标识人的身份一样。 每个图空间仅支持一种 VID 数据类型，创建图空间时，可以预先设置 VID 的数据类型，可选值为FIXED_STRING(<N>)和INT64，设置后无法更改。 警告 在 NebulaGraph 一个图空间内，VID 数据类型设置之后无法修改，除非重建该图空间。 FIXED_STRING(<N>)表示数据类型为定长字符串，长度为N不足时会填充，超出长度会报错。INT64表示数据类型为 64 位整数。在这里我们建议你在创建FIXED_STRING(<N>)类型 VID 时，选择大于等于 VID 长度的最大值。 Joe 是个运动员，同时也是一名学生，他也在student表中。而 Foesa 已经毕业啦，所以并不在student表中。这里的player表和student表相当于 nGQL 中 Tag。对于 Joe 来说，不同的身份，意味着他有着不同的标签，而player表中的name、age、start_year、end_year，都是标签player的属性。 对于 VID 为101的 Joe 来说，重新插入创建另一个player，就会将之前player Tag 中的内容覆盖，以最新的插入为准。 相信到这里，大家已经明白 VID 和 Tag 之间的关系了，接下来我们介绍 Edge Type 和 Rank。","s":"VID","u":"/zh-Hans/training/graph-basics/widen-knowledge/tag-edgetype-rank-vid/","h":"#vid","p":1266},{"i":1271,"t":"Joe 小伙伴和 Foesa 是好朋友，他们经常通话，我们创建一个名字为call的边类型 Edge Type。 警告 需要注意的是，每个图空间内的边类型名称不能重复，名称设置后无法修改。 在call表中的time和continue_time就是边类型call的属性，它们有着不同的数据类型。 这里，我们插入他们的多次通话的数据。 我们可以看到，起始点为101，目的点为102，边类型都为call的三条边。在 NebulaGraph 中，为了让用户可以更好的区分边类型名称、起始点、目的点都相同的边，我们引入了 Rank 的概念，没有指定时，默认 Rank 值为 0。因此我们可以使用（边类型，起始点，目的点，Rank）唯一确定一条边。 这里相信大家已经明白 NebulaGraph 中这些独特的概念啦。","s":"Rank","u":"/zh-Hans/training/graph-basics/widen-knowledge/tag-edgetype-rank-vid/","h":"#rank","p":1266},{"i":1276,"t":"关于 NebulaGraph 系列课程将帮助您了解 NebulaGraph 的基本概念、架构、特性。 📄️ nebulagraph-concept 📄️ nebulagraph-architecture 📄️ nebulagraph-features","s":"课程介绍","u":"/zh-Hans/training/nebulagraph-intro/overview/","h":"","p":1275},{"i":1281,"t":"在学习本系列课程前，您需了解： 图的概念 图结构 属性图","s":"必备知识","u":"/zh-Hans/training/nebulagraph-intro/overview/","h":"","p":1275},{"i":1283,"t":"完成本系列所有课程将耗时约 15 分钟。","s":"时长","u":"/zh-Hans/training/nebulagraph-intro/overview/","h":"","p":1275},{"i":1285,"t":"在详细介绍 NebulaGraph 图数据库之前，我们先来看看如何在云上部署 NebulaGraph。本课程将介绍如何在云上部署 NebulaGraph，以及如何使用我们的云服务链接图数据库的增删改查操作。","s":"云上部署 NebulaGraph","u":"/zh-Hans/training/practice-cloud-deployment/","h":"","p":1284},{"i":1287,"t":"了解如何在云上部署 NebulaGraph 了解如何使用云服务 NebulaGraph Explorer","s":"课程目标","u":"/zh-Hans/training/practice-cloud-deployment/","h":"#课程目标","p":1284},{"i":1289,"t":"本文给大家简单演示如何开发一个基于 NebulaGraph 的智能问答机器人应用。细节说明可以在这个示例项目作者的博客中查看。","s":"基于 NebulaGraph 的智能问答机器人应用","u":"/zh-Hans/training/practice-nebulagraph-app/","h":"","p":1288},{"i":1291,"t":"像一般的 Web 应用之于数据库一样，一个典型的基于 NebulaGraph 的传统线上应用可以由三部分组成： 前端：作为人机交互界面，调用后端 API。 后端：处理基于 Web 的 API，生成 NebulaGraph 图数据库的查询语句，请求 NebulaGraph，处理结果返回 API 调用方。 图数据库：NebulaGraph。","s":"前言","u":"/zh-Hans/training/practice-nebulagraph-app/","h":"#前言","p":1288},{"i":1293,"t":"示例使用的数据集为basketballplayer 这个数据集。 用户可以下载示例数据集 basketballplayer 文件，然后使用 NebulaGraph Console，使用选项-f执行脚本。","s":"数据建模","u":"/zh-Hans/training/practice-nebulagraph-app/","h":"#数据建模","p":1288},{"i":1296,"t":"我们用 VueJS 做一个带有文字和语音输入输出的机器人界面，它能接受问题，透过后端处理问题，返回问题的答案。这其中用到了 Vue Bot UI 这个项目和 Chrome 浏览器的 Web Speech API。 下图为前端界面，我们可以看到提出的问题和回复的答案，以及右边浏览器调试 console 里返回数据的结构。","s":"前端","u":"/zh-Hans/training/practice-nebulagraph-app/","h":"#前端","p":1288},{"i":1298,"t":"我们用 Python Flask 作为 Web 框架，用 Nebula-Python 作为后端访问 NebulaGraph。 当一个前端的语句通过 RESTful API 发送到后端应用的时候，我们要实现的逻辑是： 对语句进行意图识别和语义处理，得到问句的意图（Intent，例如“查关联”）与问句涉及的实体（Entities，例如“Yao Ming” 与“火箭队”）。 根据不同意图，再构造图库查询（Intent Actor），调用 Nebula-Python 访问 NebulaGraph，通过 nGQL 查询结果。 将结果处理为人能够理解的答案语句并返回。 架构和流程如下： ┌────────────────┬──────────────────────────────────────┐ │ │ │ │ │ Speech │ │ ┌──────────▼──────────┐ │ │ │ Frontend │ Siwi, /ˈsɪwi/ │ │ │ Web_Speech_API │ A PoC of │ │ │ │ Dialog System │ │ │ Vue.JS │ With Graph Database │ │ │ │ Backed Knowledge Graph │ │ └──────────┬──────────┘ │ │ │ Sentence │ │ │ │ │ ┌────────────┼──────────────────────────────┐ │ │ │ │ │ │ │ │ │ Backend │ │ │ │ ┌──────────▼──────────┐ │ │ │ │ │ Web API, Flask │ ./app/ │ │ │ │ └──────────┬──────────┘ │ │ │ │ │ Sentence ./bot/ │ │ │ │ ┌──────────▼──────────┐ │ │ │ │ │ │ │ │ │ │ │ Intent matching, │ ./bot/classifier│ │ │ │ │ Symentic Processing │ │ │ │ │ │ │ │ │ │ │ └──────────┬──────────┘ │ │ │ │ │ Intent, Entities │ │ │ │ ┌──────────▼──────────┐ │ │ │ │ │ │ │ │ │ │ │ Intent Actor │ ./bot/actions │ │ │ │ │ │ │ │ │ └─┴──────────┬──────────┴───────────────────┘ │ │ │ Graph Query │ │ ┌──────────▼──────────┐ │ │ │ │ │ │ │ Graph Database │ Nebula Graph │ │ │ │ │ │ └─────────────────────┘ │ │ │ │ │ │ │ └───────────────────────────────────────────────────────┘","s":"后端","u":"/zh-Hans/training/practice-nebulagraph-app/","h":"#后端","p":1288},{"i":1300,"t":"我们不会讲解实际应用的代码，欢迎访问代码仓库进行了解、讨论。代码的目录如下。 . ├── README.md ├── src │ ├── siwi # Siwi-API Backend │ │ ├── app # Web Server, take HTTP requests and calls Bot API │ │ └── bot # Bot API │ │ ├── actions # Take Intent, Slots, Query Knowledge Graph here │ │ ├── bot # Entrypoint of the Bot API │ │ ├── classifier # Symentic Parsing, Intent Matching, Slot Filling │ │ └── test # Example Data Source as equivalent/mocked module │ └── siwi_frontend # Browser End │ ├── README.md │ ├── package.json │ └── src │ ├── App.vue # Listening to user and pass Questions to Siwi-API │ └── main.js └── wsgi.py","s":"代码","u":"/zh-Hans/training/practice-nebulagraph-app/","h":"#代码","p":1288}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/931",[0,0.065,1,2.827,2,2.216,3,3.673,4,3.673,5,2.337,6,2.544,7,3.28,8,3.28,9,3.673,10,3.28,11,3.673,12,0.839,13,2.337,14,4.475,15,0.777,16,4.188,17,1.926,18,3.309,19,3.673,20,3.673,21,2.673]],["t/933",[0,0.065,2,2.411,12,1.177,13,4.398,22,4.599,23,5.151,24,5.151,25,6.17,26,5.151,27,5.151]],["t/935",[0,0.064,1,2.412,2,2.044,22,7.017,28,2.28,29,2.577,30,2.577,31,3.27,32,2.28,33,3.969,34,2.798,35,1.6,36,3.969,37,5.256,38,2.798,39,3.134,40,2.17,41,3.134,42,6.612,43,3.134,44,2.798,45,3.134,46,2.798,47,2.798,48,3.134,49,3.134,50,3.134,51,3.134]],["t/937",[0,0.061,1,5.226,2,2.549,31,3.772,52,5.583]],["t/939",[0,0.064,2,2.708,31,4.177,53,5.857,54,5.857]],["t/941",[0,0.063,2,2.444,5,4.035,13,4.035,31,4.392,55,3.754]],["t/943",[0,0.058,2,2.302,56,7.447]],["t/945",[0,0.062,2,2.495,5,4.173,31,4.858]],["t/947",[0,0.061,31,3.466,57,6.238,58,6.238,59,6.238,60,4.539,61,5.57,62,6.238,63,6.238,64,6.238]],["t/949",[0,0.063,30,5.486,31,4.895]],["t/951",[0,0.065,2,0.993,12,0.734,13,2.044,14,2.642,16,2.473,18,1.64,25,4.392,28,2.337,30,2.642,31,1.785,32,2.337,33,2.642,35,4.047,52,6.264,55,3.539,65,2.337,66,3.212,67,3.579,68,3.26,69,3.212]],["t/953",[0,0.053,2,2.027,31,3.643,34,5.855,35,3.347,61,5.855,65,4.771,70,5.855,71,6.557,72,3.261]],["t/955",[0,0.061,52,6.125]],["t/957",[0,0.064,1,4.311,2,2.513,31,4.058,33,7.084,73,5.601]],["t/959",[0,0.062,2,2.801,5,5.576,31,4.177]],["t/961",[0,0.057,2,2.259,5,4.649,74,7.306]],["t/963",[0,0.064,2,1.898,12,1.77,13,3.906,32,4.466,75,6.138,76,3.906]],["t/965",[0,0.063,2,2.586,5,5.323,67,4.328,77,3.785,78,3.785,79,4.12]],["t/967",[0,0.059,2,2.549,5,5.247,80,6.062,81,6.789]],["t/969",[0,0.061,2,2.663]],["t/971",[0,0.058,12,1.702,15,1.576]],["t/972",[0,0.064,12,1.069,15,0.99,37,2.688,72,3.691,82,2.476,83,2.476,84,2.085,85,3.011,86,3.405,87,3.011,88,3.405,89,4.017,90,2.688,91,2.317,92,3.431,93,3.011,94,4.461,95,1.579,96,3.011,97,3.011,98,3.011,99,3.011,100,3.011,101,3.011,102,3.011,103,3.011,104,2.191,105,1.846,106,1.846,107,2.688,108,1.783]],["t/974",[0,0.063,12,1.373,15,1.271,40,3.429,72,2.462,89,2.837,90,2.892,92,2.289,108,1.918,109,3.239,110,2.493,111,4.071,112,3.239,113,2.892,114,2.664,115,2.892,116,4.942,117,2.892,118,2.147,119,2.892,120,3.239,121,2.357,122,4.951,123,4.951,124,4.951,125,3.239,126,4.951,127,3.239,128,4.951,129,4.951,130,3.239,131,3.239,132,2.493,133,2.892]],["t/976",[0,0.061,134,7.447]],["t/979",[135,6.246,136,7.595,137,7.595]],["t/981",[0,0.059,15,1.299,135,5.048,138,6.138,139,3.634,140,6.138,141,6.138,142,5.481,143,6.138,144,6.138,145,4.466,146,5.048]],["t/983",[0,0.06,67,4.614,77,4.035,147,6.341,148,6.341,149,6.341,150,6.341,151,6.341,152,5.215,153,5.215]],["t/986",[0,0.063,6,0.671,12,0.405,15,0.748,35,0.494,76,0.616,77,0.616,104,0.705,105,1.087,106,1.087,108,0.573,132,2.723,139,0.573,152,0.797,154,0.865,155,0.969,156,0.969,157,1.773,158,5.743,159,0.865,160,0.969,161,3.537,162,1.773,163,0.797,164,0.865,165,0.865,166,2.892,167,0.969,168,0.969,169,0.969,170,2.251,171,0.969,172,0.969,173,0.969,174,0.969,175,0.969,176,0.969,177,1.773,178,0.969,179,0.797,180,0.969,181,0.969,182,1.458,183,1.773,184,0.969,185,1.773,186,1.773,187,2.453,188,0.969,189,1.458,190,2.453,191,1.773,192,1.773,193,3.158,194,1.584,195,1.773,196,4.879,197,1.584,198,1.773,199,1.458,200,2.017,201,0.865,202,1.584,203,1.584,204,0.969,205,2.017,206,0.969,207,1.773,208,1.458,209,0.969,210,0.969,211,0.969,212,0.969,213,0.865,214,0.746,215,0.969,216,0.671,217,1.773,218,1.773,219,0.969,220,0.969,221,0.969,222,0.969,223,2.19,224,1.625,225,0.969,226,0.969,227,0.969,228,0.969,229,1.773,230,0.969,231,0.969,232,0.865,233,0.865,234,0.969,235,1.458,236,0.865,237,0.865,238,0.865,239,0.969,240,2.453,241,0.865,242,0.969,243,0.969,244,0.969,245,0.969,246,0.969,247,1.773,248,0.969,249,1.365,250,1.773,251,0.969,252,1.773,253,0.969,254,0.969,255,0.969,256,0.746,257,0.969,258,0.797,259,0.865,260,0.797,261,0.969,262,1.365,263,1.584,264,1.773,265,0.969,266,0.865,267,0.969,268,0.969,269,0.969]],["t/988",[0,0.062,10,1.58,12,0.404,15,0.747,31,0.983,35,0.493,67,0.703,77,0.615,80,0.863,106,0.592,135,0.795,139,1.793,145,0.703,158,2.445,163,0.795,164,0.863,165,0.863,166,1.172,170,1.558,179,1.455,182,1.455,189,0.795,193,0.863,194,2.186,197,2.186,199,1.455,200,2.904,201,1.58,202,0.863,213,0.863,214,0.744,233,0.863,238,0.863,256,1.362,258,0.795,270,0.966,271,1.58,272,1.58,273,1.769,274,0.863,275,0.966,276,0.966,277,0.863,278,0.966,279,1.362,280,0.966,281,0.966,282,1.58,283,1.126,284,0.966,285,1.226,286,1.769,287,1.769,288,0.795,289,0.966,290,0.744,291,0.966,292,0.966,293,0.64,294,0.966,295,4.357,296,3.028,297,0.966,298,0.966,299,1.58,300,0.966,301,0.966,302,0.966,303,0.966,304,0.863,305,2.448,306,1.769,307,0.966,308,0.966,309,0.966,310,0.966,311,0.863,312,1.58,313,0.966,314,0.966,315,0.966,316,1.58,317,0.966,318,3.028,319,2.448,320,2.186,321,3.028,322,0.966,323,0.966,324,2.186,325,1.769,326,0.966,327,0.966,328,2.448,329,0.966,330,0.966,331,0.966,332,0.795,333,1.455,334,1.769,335,0.966,336,0.966,337,0.966,338,0.966,339,0.966,340,0.966,341,0.966,342,0.966,343,0.966,344,0.966,345,0.795,346,1.769,347,0.863,348,0.966,349,0.966,350,0.966,351,0.863,352,0.966,353,0.863,354,0.966,355,0.966,356,0.966,357,0.966,358,0.966,359,2.097,360,2.704,361,0.966,362,0.966,363,0.966,364,0.795,365,0.966,366,0.966,367,0.744,368,0.795,369,0.863,370,0.966,371,0.966,372,0.966,373,0.966,374,0.966,375,0.966,376,0.966,377,0.966,378,0.966,379,0.744,380,0.863,381,0.966,382,0.966,383,0.795,384,0.966,385,0.966,386,0.966,387,0.966,388,0.966,389,0.795,390,0.966,391,0.966,392,0.966,393,0.966,394,0.795,395,0.863,396,0.795,397,0.966,398,0.966,399,0.966,400,0.795,401,0.64,402,0.744,403,0.863,404,0.966,405,0.863,406,0.966,407,0.966,408,0.966,409,0.966,410,0.966,411,0.966,412,0.966,413,0.966,414,0.966,415,0.966,416,0.966,417,0.966,418,0.966,419,0.966,420,0.966,421,0.966,422,0.966,423,0.966]],["t/990",[0,0.061,312,6.523,424,7.306]],["t/992",[0,0.064,12,1.244,15,1.517,84,3.77,425,4.189,426,5.442,427,4.476,428,4.86,429,4.86,430,4.86,431,4.86]],["t/994",[0,0.064,84,2.843,92,1.898,104,2.987,379,3.159,432,3.665,433,3.665,434,3.376,435,3.665,436,3.665,437,4.542,438,3.665,439,5.27,440,3.665,441,3.665,442,4.853,443,5.27,444,4.105,445,3.665,446,3.665,447,4.105,448,4.105,449,3.159,450,4.105]],["t/996",[0,0.062,29,1.445,145,1.279,158,1.217,170,1.118,196,2.317,205,1.445,262,1.353,283,1.118,285,1.217,288,1.445,290,2.317,368,1.445,389,2.476,394,1.445,401,1.164,451,1.569,452,1.757,453,2.688,454,1.569,455,3.527,456,2.688,457,2.688,458,1.569,459,3.527,460,3.527,461,2.688,462,1.569,463,4.178,464,3.527,465,2.688,466,3.527,467,1.569,468,1.569,469,2.688,470,2.874,471,4.699,472,4.699,473,2.688,474,2.688,475,2.688,476,2.688,477,1.569,478,2.688,479,4.178,480,3.527,481,2.688,482,2.688,483,2.688,484,2.688,485,4.178,486,2.688,487,1.353,488,4.699,489,1.445,490,1.569,491,2.688,492,2.688,493,2.191,494,2.317,495,1.569,496,1.569,497,1.569,498,1.569,499,1.569,500,2.688,501,2.688,502,1.569,503,1.569,504,1.569,505,1.445,506,1.569]],["t/998",[0,0.049,15,1.56,72,2.827,333,4.675,359,5.67,383,4.675,434,4.675,470,4.136,507,5.075,508,5.075,509,5.684,510,5.075,511,5.075,512,5.075,513,5.684,514,4.675]],["t/1000",[12,0.248,15,1.408,40,0.752,46,0.97,60,1.433,70,3.835,72,0.979,92,1.248,118,1.789,119,2.411,139,1.166,279,2.078,304,0.97,396,1.619,400,0.893,425,0.836,427,0.893,428,0.97,430,0.97,431,0.97,470,1.965,487,0.836,507,0.97,512,1.758,514,0.893,515,1.086,516,1.086,517,1.086,518,0.97,519,0.97,520,1.086,521,1.969,522,4.691,523,4.295,524,1.086,525,3.611,526,2.411,527,4.5,528,3.43,529,0.893,530,0.836,531,1.086,532,1.515,533,3.316,534,3.879,535,1.086,536,1.789,537,2.727,538,3.841,539,1.758,540,1.086,541,0.893,542,1.086,543,0.893,544,0.893,545,1.086,546,1.086,547,1.619,548,1.086,549,0.893,550,1.086,551,1.086,552,1.086,553,1.086,554,1.086,555,1.086,556,1.086,557,1.086,558,0.97,559,1.619,560,0.97,561,2.727,562,1.086,563,0.97,564,2.221,565,0.836,566,0.893,567,0.97,568,1.969,569,3.316,570,0.836,571,3.43,572,1.086,573,1.086,574,1.086,575,1.086,576,1.086,577,1.086,578,0.97,579,1.086,580,1.086,581,1.086,582,1.086,583,2.727,584,3.841,585,5.872,586,5.039,587,1.086,588,3.841,589,1.969,590,1.758,591,1.086,592,1.086,593,1.086,594,1.969,595,1.086,596,1.969,597,1.969,598,0.97,599,1.086,600,1.086,601,4.295,602,3.316,603,1.758,604,1.619,605,1.969,606,1.086,607,0.97,608,1.969,609,0.836,610,1.969,611,0.97,612,1.086,613,0.97,614,1.086,615,1.969,616,1.086,617,1.086,618,1.086,619,1.969,620,1.969,621,2.411,622,1.086,623,3.316,624,0.97,625,0.97,626,1.969,627,1.086,628,1.086,629,0.643,630,2.7,631,0.97,632,1.086,633,1.086,634,1.086,635,1.086,636,1.086,637,1.086]],["t/1002",[6,1.786,7,0.573,13,0.77,15,1.332,21,0.467,40,0.838,44,1.08,47,0.573,65,0.88,84,2.49,92,2.55,104,3.642,113,0.573,118,0.425,139,1.284,249,1.669,259,1.08,279,3.372,345,0.528,351,1.532,360,0.573,369,0.573,379,0.494,400,0.528,401,0.425,402,1.32,432,0.573,433,0.573,434,0.528,435,0.573,436,0.573,437,0.931,438,0.573,439,1.532,440,1.08,441,0.573,442,0.995,443,1.08,445,0.573,446,0.573,449,0.494,470,4.224,489,1.784,504,0.573,508,0.573,510,0.573,518,0.573,519,1.532,525,2.27,528,1.937,529,1.784,530,0.931,532,1.984,534,0.931,536,0.425,537,2.957,539,0.573,541,0.528,544,0.528,547,2.12,549,2.12,559,0.995,561,0.528,563,0.573,564,2.703,565,4.468,566,0.995,567,0.573,570,1.984,571,2.633,578,0.573,583,0.528,598,0.573,603,1.937,604,0.528,609,0.494,611,1.08,613,1.532,621,1.532,624,2.633,629,0.38,631,0.573,638,1.209,639,0.642,640,1.209,641,1.209,642,0.642,643,1.715,644,0.642,645,0.642,646,0.642,647,0.642,648,1.209,649,0.642,650,0.642,651,1.937,652,1.209,653,1.209,654,0.995,655,0.716,656,1.209,657,1.209,658,0.642,659,0.642,660,0.642,661,1.08,662,3.286,663,1.209,664,1.209,665,2.578,666,0.642,667,0.642,668,0.642,669,1.209,670,0.642,671,0.642,672,0.642,673,1.937,674,0.642,675,0.528,676,0.642,677,1.209,678,0.642,679,0.642,680,1.08,681,1.209,682,0.573,683,1.209,684,1.532,685,1.715,686,0.573,687,1.209,688,2.578,689,0.573,690,1.209,691,0.642,692,0.642,693,0.642,694,0.642,695,1.209,696,0.642,697,0.573,698,2.578,699,1.209,700,3.595,701,1.209,702,0.642,703,1.209,704,1.209,705,1.209,706,2.169,707,1.209,708,1.209,709,0.573,710,0.642,711,1.209,712,1.08,713,1.715,714,0.573,715,1.209,716,0.573,717,0.642,718,0.642,719,0.573,720,1.209,721,0.642,722,0.642,723,0.642,724,0.573,725,1.08,726,1.209,727,1.532,728,1.08,729,0.642,730,1.532,731,0.642,732,0.642,733,0.642,734,0.642,735,2.949,736,1.209,737,1.209,738,1.08,739,0.995,740,0.642,741,0.642,742,0.642,743,0.573,744,1.209,745,0.642,746,0.642,747,0.642,748,0.642,749,0.642,750,0.642,751,2.169,752,1.715,753,0.642,754,0.573,755,0.573,756,0.642,757,0.642,758,0.642,759,0.642,760,0.642,761,0.642,762,0.642,763,0.573,764,1.209,765,0.642,766,0.642,767,1.715,768,1.715,769,0.573,770,0.642,771,0.642,772,0.642,773,0.642,774,1.209,775,0.642,776,0.642,777,0.642,778,0.642,779,0.642,780,0.642,781,0.642,782,0.642,783,0.642,784,0.642,785,0.642,786,0.642,787,0.642,788,0.642,789,1.08,790,0.528,791,0.642,792,0.642,793,0.642,794,0.573,795,1.209,796,0.642,797,0.642,798,0.642,799,0.931,800,0.642,801,0.642,802,0.642,803,0.642,804,0.642,805,0.642]],["t/1004",[0,0.047,6,0.639,15,1.379,18,0.471,21,0.671,29,0.758,92,0.426,118,0.611,139,2.276,142,0.823,146,0.758,166,2.801,170,0.587,182,0.758,196,1.305,205,0.758,232,3.774,249,0.71,262,0.71,279,2.959,283,0.587,285,0.639,288,0.758,290,1.305,332,0.758,359,2.927,368,0.758,383,0.758,389,1.394,394,0.758,396,0.758,401,1.123,402,0.71,451,0.823,453,1.514,454,0.823,455,2.101,456,1.514,457,1.514,458,0.823,459,2.101,460,2.101,461,1.514,462,0.823,463,2.606,464,3.432,465,1.514,466,2.101,467,0.823,468,0.823,469,1.514,470,2.124,471,3.046,472,3.046,473,1.514,474,1.514,475,1.514,476,1.514,477,0.823,478,1.514,479,2.606,480,2.101,481,1.514,482,1.514,483,1.514,484,1.514,485,2.606,486,1.514,487,0.71,488,3.046,489,1.935,490,0.823,491,1.514,492,1.514,493,1.234,494,1.305,495,0.823,496,0.823,497,0.823,498,0.823,499,0.823,500,1.514,501,1.514,502,3.432,503,0.823,505,0.758,506,0.823,511,2.101,514,0.758,526,0.823,529,1.394,532,1.305,534,0.71,537,1.935,541,1.394,547,1.394,549,0.758,564,0.758,565,1.305,570,0.71,583,1.394,604,0.758,607,0.823,651,0.823,673,1.514,675,0.758,680,0.823,686,1.514,689,2.101,709,0.823,712,0.823,725,0.823,727,0.823,728,0.823,730,0.823,738,0.823,739,1.394,755,0.823,763,0.823,789,0.823,790,0.758,799,1.305,806,0.922,807,0.922,808,1.695,809,0.922,810,0.922,811,1.695,812,0.922,813,0.922,814,2.353,815,0.922,816,0.922,817,0.922,818,0.922,819,0.922,820,0.922,821,0.922,822,0.611,823,0.922,824,0.922,825,1.695,826,0.922,827,1.695,828,0.922,829,0.758,830,0.922,831,0.922,832,0.922,833,0.922,834,2.353,835,0.922,836,0.922,837,0.922,838,0.922,839,0.922,840,0.922,841,0.922,842,0.922,843,0.922,844,2.101,845,1.695,846,1.695,847,0.922,848,0.922,849,0.922,850,0.922,851,0.922,852,0.922,853,0.922,854,0.922,855,0.922,856,0.823,857,0.922,858,0.922,859,0.922,860,0.922,861,0.922,862,0.922,863,0.922,864,0.922,865,0.823,866,2.353,867,0.922,868,0.922,869,0.922,870,0.922,871,0.922,872,0.922,873,0.922,874,0.922,875,0.922,876,0.922,877,0.639,878,0.922,879,0.823,880,0.922,881,0.922,882,0.922,883,0.922,884,0.922,885,0.922]],["t/1006",[0,0.031,6,2.053,12,1.467,15,1.771,83,2.438,139,2.737,249,2.282,333,2.438,359,4.446,493,2.157,527,2.647,558,2.647,559,2.438,561,3.802,565,2.282,675,2.438,682,2.647,794,5.074,856,2.647,865,2.647,886,2.964,887,4.623,888,4.623,889,4.623,890,4.623,891,8.185,892,2.964,893,2.964,894,2.964,895,2.964,896,2.964,897,2.964,898,2.964,899,4.623,900,4.623,901,2.964,902,2.964,903,2.964,904,2.964,905,2.964,906,2.964,907,2.964,908,2.964,909,2.964,910,2.964,911,2.964,912,2.964,913,2.647]],["t/1008",[0,0.062,12,1.939,15,1.886,17,3.219,18,3.133]],["t/1010",[0,0.062,12,1.788,15,1.32,16,4.801,17,4.484,216,4.321]],["t/1012",[0,0.065,12,1.648,14,3.649,15,1.897,18,4.576]],["t/1014",[0,0.058,15,1.844]],["t/1016",[0,0.056,15,1.489,914,5.788,915,5.417,916,5.788,917,5.417]],["t/1018",[0,0.057,536,4.133,629,3.694,914,5.13,918,6.238,919,6.238,920,5.13,921,5.57,922,6.238,923,4.801,924,5.57,925,5.57]],["t/1020",[0,0.065,72,2.075,92,2.413,114,3.43,216,3.615,536,4.62,629,3.868,655,3.868,915,3.211,920,4.91,921,3.725,923,5.366,924,5.834,925,2.324,926,2.603,927,2.324,928,5.22,929,2.603,930,4.171,931,2.603,932,2.603,933,2.603,934,2.603,935,2.603,936,2.603]],["t/1022",[0,0.065,12,1.479,15,0.99,18,2.389,60,3.405,105,1.846,106,1.846,790,3.848,915,4.418,916,2.476,917,2.317,937,3.011,938,3.011,939,3.011,940,3.011,941,3.011,942,4.679,943,3.011,944,5.78,945,3.011,946,3.011,947,6.473,948,3.011,949,3.011,950,3.011,951,4.178,952,3.011,953,3.011,954,3.011]],["t/1024",[0,0.057,60,5.316,917,5.623,955,7.306]],["t/1026",[0,0.066,12,1.038,15,0.961,65,3.305,914,3.735,915,3.496,916,3.735,917,3.496,951,4.055,956,4.055,957,4.542,958,4.542,959,4.542,960,4.542,961,4.542,962,4.542]],["t/1028",[0,0.062,12,1.498,15,1.388,152,5.393,166,4.345,963,6.557,964,6.557]],["t/1030",[0,0.058,17,3.983]],["t/1032",[0,0.064,12,1.817,15,1.271,16,5.579,17,1.699,18,1.654,35,2.527,55,3.558,65,2.357,78,3.824,108,1.918,118,4.458,965,5.966,966,3.239,967,3.239,968,3.239]],["t/1035",[0,0.061,12,1.551,15,1.437,17,4.657]],["t/1037",[0,0.051,17,4.063]],["t/1039",[0,0.049,12,1.702,15,1.576,17,3.906]],["t/1041",[0,0.064,12,1.638,15,1.517,17,2.854,72,2.707,92,2.516,216,5.9,927,4.86,969,4.189]],["t/1043",[0,0.056,17,3.691,18,3.593,724,6.284,970,7.038,971,7.038]],["t/1045",[0,0.051,17,4.063]],["t/1047",[0,0.063,12,1.77,15,1.299,17,4.062,18,4.333]],["t/1049",[0,0.061,78,5.191,364,5.486,972,5.957,973,5.957,974,6.671]],["t/1051",[0,0.064,12,1.515,18,4.623,21,2.779,35,1.95,55,2.261,78,3.564,121,2.779,146,3.141,324,5.001,401,2.531,719,3.41,944,3.41,975,3.819,976,3.819,977,3.819,978,3.819,979,3.41,980,3.819]],["t/1054",[0,0.064,12,1.816,15,1.681,17,2.41,18,2.346,108,2.721,216,4.428,972,7.095,981,4.104,982,4.92]],["t/1056",[0,0.065,8,3.807,12,0.974,15,0.902,18,2.177,35,2.714,55,2.525,72,2.644,88,3.103,89,2.443,91,2.059,92,1.237,94,1.703,105,3.718,106,3.718,111,2.2,116,2.2,274,2.389,367,3.282,655,4.384,983,4.264,984,4.264,985,4.264,986,3.506,987,2.675,988,4.264,989,2.675,990,2.675,991,2.675]],["t/1058",[0,0.061,12,1.788,15,1.656,17,3.271,216,6.21]],["t/1060",[0,0.05,15,1.607,992,7.595]],["t/1062",[0,0.065,12,0.953,15,0.883,82,2.14,105,3.66,106,3.66,107,2.324,655,2.47,993,6.533,994,5.97,995,2.603,996,6.533,997,6.225,998,5.22,999,5.22,1000,5.97,1001,2.603,1002,2.603,1003,4.171,1004,5.97,1005,2.603,1006,2.603,1007,2.603,1008,2.603]],["t/1064",[0,0.065,35,2.859,36,3.734,83,3.734,86,4.075,88,2.108,89,1.66,95,4.262,108,1.715,494,2.23,655,3.316,986,4.605,1009,4.055,1010,2.897,1011,2.897,1012,2.897,1013,2.897,1014,2.897,1015,2.897,1016,2.897,1017,2.897,1018,5.6,1019,5.6,1020,2.897,1021,2.897,1022,2.897]],["t/1067",[0,0.064,35,1.697,55,2.989,68,4.045,78,5.388,108,2.989,118,5.316,965,6.281,982,5.247,1023,3.323,1024,2.968,1025,2.968]],["t/1069",[0,0.064,12,1.318,15,1.221,18,2.03,68,2.635,78,5.544,401,5.463,879,5.151,965,2.894,979,6.061,982,3.061,1026,3.977,1027,3.551]],["t/1071",[0,0.064,12,1.832,15,1.696,982,6.813,1028,7.168]],["t/1073",[0,0.063,118,3.941,965,6.971]],["t/1075",[0,0.063,12,1.226,15,1.136,78,4.52,401,5.839,590,4.792,1027,4.792,1029,5.366,1030,5.366,1031,5.366,1032,5.366]],["t/1077",[0,0.062,12,1.498,15,1.388,18,4.12,981,5.855,1033,6.557]],["t/1079",[0,0.064,18,4.397,78,4.035,299,4.055,965,4.613,1025,7.691,1034,4.542,1035,4.542,1036,4.542]],["t/1081",[0,0.058,1037,6.781]],["t/1083",[0,0.048,108,3.316,293,5.386,877,5.059,1038,4.076,1039,5.601,1040,5.482,1041,6.268,1042,5.601,1043,5.601,1044,5.601]],["t/1085",[0,0.056,67,3.385,108,2.754,293,4.902,877,5.124,1040,5.523,1041,5.383,1045,4.652,1046,4.652,1047,4.652,1048,4.652,1049,5.383,1050,4.652,1051,5.756,1052,4.652,1053,5.756]],["t/1087",[0,0.047,293,4.664,367,5.417,822,4.664,877,4.875,1040,4.479,1041,5.121]],["t/1089",[0,0.061,1054,7.306,1055,7.306]],["t/1091",[0,0.052]],["t/1094",[0,0.064,105,1.969,154,4.392,170,3.13,203,5.338,256,2.473,290,5.558,311,5.338,353,2.868,655,1.902,1056,3.212,1057,3.212,1058,4.919,1059,4.919,1060,2.868,1061,3.212,1062,6.699,1063,5.978,1064,3.212,1065,4.919,1066,3.212,1067,3.212,1068,3.212,1069,3.212,1070,2.868,1071,3.212,1072,3.212]],["t/1096",[0,0.065,12,1.139,15,1.054,21,4.395,79,2.263,105,2.003,106,2.003,170,3.844,235,7.068,359,2.263,697,2.917,1073,3.267,1074,3.267,1075,3.267,1076,3.267,1077,3.267,1078,3.267,1079,3.267,1080,3.267,1081,3.267,1082,6.04,1083,3.267,1084,3.267]],["t/1098",[0,0.063,159,6.171,1085,6.911,1086,6.911]],["t/1100",[0,0.058,166,4.345,822,4.345,1087,6.557,1088,6.557,1089,6.557,1090,6.557,1091,6.557,1092,6.557]],["t/1102",[0,0.061,158,3.996,224,3.823,271,5.152,272,5.152,1093,5.769,1094,5.769,1095,5.769,1096,5.769,1097,5.769,1098,5.769,1099,5.769,1100,5.769,1101,5.152]],["t/1104",[0,0.064,77,3.034,82,3.92,105,4.02,106,4.02,158,3.302,235,3.92,277,4.257,282,4.257,437,3.669,609,3.669,997,4.257,1102,4.767,1103,4.767,1104,4.767,1105,4.767,1106,4.767,1107,4.767,1108,4.767]],["t/1106",[0,0.065,224,4.202,437,4.881,505,5.215,1109,6.341]],["t/1108",[0,0.064,108,3.009,196,3.912,223,4.538,256,3.912,266,6.115,1110,5.082,1111,5.082,1112,5.082,1113,5.082,1114,5.082,1115,5.082,1116,4.538,1117,5.082,1118,5.082,1119,5.082]],["t/1110",[0,0.057,6,3.429,77,3.151,139,2.932,170,3.151,260,4.072,262,3.811,543,4.072,1040,3.151,1120,4.951,1121,4.951,1122,4.951,1123,4.951,1124,6.728,1125,4.421,1126,4.951,1127,6.728,1128,6.728,1129,4.951,1130,4.951,1131,4.951,1132,4.951,1133,4.951]],["t/1114",[0,0.06,77,4.563,145,5.217,1134,7.169]],["t/1116",[0,0.054,5,1.494,15,1.189,139,1.39,145,1.709,153,1.931,163,1.931,189,1.931,208,1.931,263,3.427,320,2.097,332,1.931,345,1.931,380,2.097,395,2.097,402,1.807,403,2.097,405,2.097,530,2.954,543,1.931,609,1.807,684,2.097,716,2.097,739,1.931,844,2.097,913,2.097,986,1.931,1024,3.427,1040,1.494,1101,3.427,1125,2.097,1135,2.348,1136,2.348,1137,2.348,1138,2.348,1139,5.019,1140,2.348,1141,4.346,1142,2.348,1143,2.348,1144,2.348,1145,2.348,1146,2.348,1147,2.348,1148,3.427,1149,2.348,1150,2.348,1151,2.348,1152,2.348,1153,3.838,1154,2.348,1155,2.348,1156,2.348,1157,2.348,1158,2.348,1159,2.348,1160,2.348,1161,2.348,1162,2.348,1163,2.348,1164,2.348,1165,2.348,1166,2.348,1167,2.348,1168,2.348,1169,2.348,1170,2.348,1171,2.348,1172,2.348,1173,2.348,1174,2.348,1175,2.348,1176,2.348,1177,2.348,1178,2.348,1179,2.348,1180,2.348,1181,2.348,1182,2.348,1183,2.348,1184,2.348,1185,2.348,1186,2.348,1187,2.348,1188,2.348,1189,2.348,1190,2.348,1191,2.348,1192,2.348,1193,2.348,1194,2.348]],["t/1118",[0,0.061,12,1.524,15,1.412,84,4.621,95,3.499,655,4.83]],["t/1120",[0,0.063,89,4.461,95,4.886,293,2.906,655,2.597,1195,4.386,1196,4.386,1197,4.386,1198,4.386,1199,4.386,1200,4.386,1201,4.386,1202,4.386,1203,4.386]],["t/1122",[0,0.059,12,1.161,15,1.075,86,3.698,91,3.912,95,4.538,629,3.009,655,3.009,829,4.18,1204,5.082,1205,5.082,1206,5.082,1207,5.082,1208,5.082,1209,5.082,1210,5.082,1211,4.18,1212,5.082,1213,5.082]],["t/1124",[0,0.063,77,3.415,86,3.905,95,4.748,1009,6.341,1214,5.366,1215,5.366,1216,5.366,1217,5.366]],["t/1126",[0,0.058,95,4.569]],["t/1128",[0,0.06,12,0.881,15,0.816,38,3.444,60,4.853,92,1.783,95,3.849,110,2.969,208,4.639,283,3.59,285,2.672,347,3.444,493,4.105,534,4.342,536,2.556,570,2.969,629,2.284,1211,4.639,1218,3.857,1219,3.857,1220,3.444,1221,5.641,1222,3.857,1223,5.641,1224,3.857,1225,3.857,1226,3.857,1227,3.857,1228,3.857,1229,3.857]],["t/1130",[0,0.05,12,1.735,15,1.607]],["t/1132",[0,0.057,12,1.669,15,1.546,1230,7.306]],["t/1135",[0,0.06,12,1.968,15,1.823,179,5.215,199,5.215,425,4.881]],["t/1137",[0,0.06,12,1.968,15,1.823,260,5.215,1040,4.035,1231,6.341]],["t/1139",[0,0.056,12,1.638,15,1.517,364,5.896,973,6.402]],["t/1141",[0,0.058,12,1.864,15,1.726,629,3.95,1232,6.671,1233,6.671]],["t/1143",[0,0.047,12,1.608,15,1.489,754,6.284,1234,7.038,1235,7.038,1236,7.038]],["t/1145",[0,0.06,12,1.968,15,1.673,1237,6.341,1238,6.341,1239,6.341,1240,6.341]],["t/1147",[0,0.059,12,1.579,15,1.462,76,5.304,132,5.32]],["t/1149",[0,0.063,12,1.551,15,1.437,1139,6.062,1141,6.062]],["t/1151",[0,0.058,12,1.702,15,1.576]],["t/1153",[0,0.056,12,1.925,15,1.783,442,5.788]],["t/1155",[0,0.048,12,1.969,15,1.823]],["t/1157",[0,0.05,12,1.735,15,1.607]],["t/1159",[0,0.05,12,1.735,15,1.607]],["t/1161",[0,0.058,12,1.702,15,1.576]],["t/1163",[0,0.05,12,1.735,15,1.607]],["t/1165",[0,0.061,12,1.579,15,1.462,379,5.32,1241,6.911]],["t/1167",[0,0.052]],["t/1169",[0,0.063,425,5.623]],["t/1172",[0,0.06,2,2.176,1242,7.038,1243,7.038,1244,7.038]],["t/1175",[0,0.061,2,2.302]],["t/1177",[0,0.056,2,2.176,1245,6.284,1246,7.038,1247,6.284,1248,7.038]],["t/1179",[0,0.062,2,1.993,88,4.691,89,4.973,1249,6.447,1250,6.447]],["t/1181",[0,0.058,2,2.062,72,4.057,92,4.074,1251,6.671]],["t/1183",[0,0.047,40,3.717,72,3.532,89,3.075,92,3.283,115,4.792,117,4.792,153,4.413,200,4.413,258,4.413,654,4.413,920,4.413,1247,4.792,1252,5.366,1253,5.366,1254,4.792,1255,5.366,1256,5.366,1257,5.366,1258,5.366,1259,5.366]],["t/1185",[0,0.063,2,2.576,35,2.629,55,3.05,68,4.579,72,3.437,88,3.748,89,4.469,92,3.195,1260,5.151]],["t/1187",[0,0.052]],["t/1189",[0,0.059]],["t/1191",[0,0.061,1254,6.523,1261,7.306]],["t/1193",[0,0.062,35,3.347,68,5.349,114,5.393,1262,6.557,1263,6.557]],["t/1195",[0,0.052]],["t/1197",[92,3.582,1264,6.918]],["t/1199",[0,0.052]],["t/1201",[1245,7.061]],["t/1203",[0,0.058,822,5.405,1037,5.957,1038,5.936,1049,5.936]],["t/1205",[0,0.066,35,2.778,55,3.223,68,3.606,822,3.606,1038,3.96,1049,3.96]],["t/1208",[0,0.064,429,6.402]],["t/1210",[0,0.063,367,5.417,1265,6.284]],["t/1212",[0,0.065,15,1.32,427,5.13,1266,6.238,1267,6.238]],["t/1214",[0,0.066,35,2.945,55,3.416,68,3.823,1265,5.152]],["t/1216",[0,0.066]],["t/1218",[0,0.052]],["t/1220",[0,0.052]],["t/1222",[0,0.052]],["t/1224",[0,0.052]],["t/1226",[0,0.058,28,5.526]],["t/1228",[0,0.052]],["t/1230",[0,0.056,89,4.033,92,3.254,95,4.419,1264,6.284]],["t/1232",[0,0.056,2,1.898,12,1.403,15,1.299,84,4.252,91,4.725,92,3.581,121,4.466,829,6.37,1268,5.481,1269,6.138]],["t/1234",[0,0.059,2,0.946,12,0.699,15,0.647,35,1.561,36,2.515,40,3.281,76,3.015,92,3.018,104,2.226,105,2.904,106,1.875,111,2.515,116,2.515,121,3.447,132,2.354,133,2.731,241,5.176,283,4.154,285,2.119,493,2.226,494,2.354,536,3.139,629,4.181,654,3.896,877,3.281,923,4.462,1070,2.731,1220,5.829,1268,2.731,1270,3.059,1271,7.062,1272,3.059,1273,3.059,1274,3.059,1275,3.059,1276,3.059]],["t/1236",[0,0.065,2,1.636,72,2.632,94,4.478,95,3.69,969,4.074,1277,4.352,1278,4.352]],["t/1238",[0,0.059,2,2.137,72,3.437,94,4.398,95,3.625,1277,5.684]],["t/1240",[0,0.052]],["t/1242",[0,0.052]],["t/1244",[0,0.058,969,5.732,1278,6.125]],["t/1246",[0,0.063]],["t/1248",[0,0.058,28,5.526]],["t/1251",[0,0.064,1040,3.785,1279,5.948,1280,6.879,1281,6.879]],["t/1253",[0,0.064,2,1.683,76,3.464,293,3.606,629,4.244,1038,5.216,1041,3.96,1281,4.476,1282,4.476,1283,4.86,1284,5.442,1285,5.442]],["t/1255",[0,0.06,214,4.92,293,4.871,877,3.183,1040,5.315,1041,4.652,1049,5.782,1051,4.104,1053,4.104,1280,5.257,1282,3.78,1283,4.104,1286,4.596,1287,4.596,1288,4.596,1289,4.596,1290,4.596]],["t/1257",[0,0.063,822,5.293,1280,5.302,1281,5.302,1282,5.302,1291,6.447]],["t/1259",[0,0.066,822,4.003,1038,4.396,1049,4.396]],["t/1261",[0,0.058,969,5.732,1278,6.125]],["t/1263",[0,0.061,2,2.663]],["t/1265",[0,0.065,2,2.044,12,0.716,13,1.994,55,1.855,76,3.071,86,2.28,89,1.796,94,4.8,95,3.468,110,2.412,283,1.994,285,2.17,536,2.076,629,1.855,661,5.904,923,2.412,1211,4.841,1292,2.577,1293,3.134,1294,3.134,1295,3.134,1296,3.134,1297,3.134,1298,3.134,1299,3.134,1300,3.134]],["t/1267",[0,0.059,2,2.137,72,3.437,94,4.398,95,3.625,1277,5.684]],["t/1269",[0,0.064,2,1.421,12,0.672,15,0.622,72,1.463,76,1.872,89,3.241,92,1.36,94,1.872,95,4.534,110,3.537,121,2.14,158,3.183,170,1.872,655,3.348,1060,2.627,1292,3.779,1301,6.563,1302,2.942,1303,2.942,1304,2.942,1305,2.942,1306,4.595,1307,2.942,1308,2.942,1309,2.942,1310,2.942,1311,2.942,1312,2.942,1313,2.942,1314,2.942]],["t/1271",[0,0.063,2,2.258,72,2.786,92,2.59,94,4.648,525,4.311,1292,4.606,1301,5.001,1315,5.601,1316,5.601,1317,5.601]],["t/1276",[0,0.062,2,2.855,560,5.57,1318,6.238,1319,6.238]],["t/1281",[0,0.063]],["t/1283",[0,0.058,28,5.526]],["t/1285",[0,0.057,2,2.832]],["t/1287",[0,0.057,2,2.663,13,4.649]],["t/1289",[0,0.058,2,2.348]],["t/1291",[0,0.063,2,2.724,79,5.259,224,5.542]],["t/1293",[0,0.059,2,2.137,32,5.029,214,5.32,1320,8.334]],["t/1296",[0,0.062,32,4.466,79,4.252,224,4.067,1321,6.138,1322,6.138,1323,5.048,1324,6.138,1325,6.138,1326,5.481]],["t/1298",[0,0.067,2,0.756,12,0.751,15,0.959,76,0.881,79,1.694,166,0.917,224,1.62,236,1.236,283,0.881,359,1.694,449,1.065,530,1.065,566,1.138,743,1.236,799,1.065,1116,2.933,1148,1.236,1323,1.138,1326,1.236,1327,2.445,1328,1.384,1329,1.384,1330,3.542,1331,2.445,1332,1.384,1333,1.236,1334,1.384,1335,1.384,1336,1.384,1337,1.384,1338,1.384,1339,2.445,1340,1.236,1341,1.384,1342,1.236,1343,1.384]],["t/1300",[0,0.065,15,0.536,79,1.755,139,1.5,166,1.679,224,4.271,237,2.263,283,1.613,316,2.263,449,1.951,487,1.951,525,1.951,532,1.951,544,2.084,625,2.263,714,2.263,769,2.263,799,1.951,956,3.645,1323,5.301,1330,3.645,1333,4.578,1340,2.263,1342,2.263,1344,4.082,1345,2.534,1346,4.082,1347,2.534,1348,4.082,1349,2.534,1350,2.534,1351,2.534,1352,2.534,1353,2.534,1354,2.534,1355,2.534,1356,2.534,1357,2.534,1358,2.534,1359,2.534,1360,2.534,1361,2.534,1362,2.534,1363,2.534]]],"invertedIndex":[["",{"_index":0,"t":{"931":{"position":[[0,2],[18,4],[35,33],[69,18],[88,9],[98,17],[116,15],[210,8],[219,14],[238,3],[242,2],[251,13],[269,14],[284,17],[318,4],[323,8],[332,3],[343,4],[366,7],[381,15],[397,3],[407,4],[429,7],[443,15],[459,3],[472,4],[497,7],[514,14],[529,6]]},"933":{"position":[[0,2],[15,13],[35,4],[48,14],[63,7],[91,3],[126,8],[156,5],[165,3],[169,2],[188,2],[203,11],[215,7],[235,11]]},"935":{"position":[[0,13],[26,12],[42,1],[47,3],[51,6],[62,3],[70,4],[88,15],[108,3],[124,4],[133,3],[149,6],[156,26],[194,1],[209,9],[225,1],[249,5],[276,47],[330,1],[356,9],[405,1],[441,10],[494,1],[503,12],[527,18],[546,8],[578,1],[587,5],[599,1],[643,10]]},"937":{"position":[[12,5],[26,17],[59,12],[84,25]]},"939":{"position":[[0,10],[23,5],[33,8],[42,3],[58,53],[112,2],[179,36],[216,2],[223,9],[245,30]]},"941":{"position":[[22,3],[38,13],[54,28],[87,4],[92,23],[125,4]]},"943":{"position":[[0,5],[18,8]]},"945":{"position":[[0,4],[27,17],[49,1],[63,6],[74,17]]},"947":{"position":[[0,6],[11,9],[29,1],[39,7],[110,8]]},"949":{"position":[[0,5],[10,9],[24,5],[30,7],[42,15],[62,3]]},"951":{"position":[[0,6],[30,2],[37,24],[74,13],[88,2],[91,5],[103,1],[105,2],[111,2],[116,1],[121,10],[132,3],[138,1],[144,2],[149,1],[151,5],[159,1],[165,7],[175,1],[200,3],[206,1],[222,3],[228,1],[232,1],[247,3],[253,1],[257,1],[275,3],[281,1],[285,1],[289,1],[293,1],[295,2],[301,3],[309,15],[325,27]]},"953":{"position":[[52,12],[77,12]]},"955":{"position":[[0,12],[17,33],[51,46]]},"957":{"position":[[19,10],[30,3],[38,3],[70,5],[117,7],[129,2],[132,3],[140,3],[177,22],[200,31]]},"959":{"position":[[46,20],[79,41],[121,13],[153,5],[159,2],[166,8],[197,2]]},"961":{"position":[[6,5],[24,5]]},"963":{"position":[[0,25],[38,14],[53,13],[121,41],[163,7],[186,24],[211,39],[251,29]]},"965":{"position":[[59,4],[75,4],[92,4],[102,58],[172,2],[179,3],[195,36]]},"967":{"position":[[0,11],[59,1],[64,2]]},"969":{"position":[[12,57],[70,10],[93,4]]},"971":{"position":[[0,4],[18,32]]},"972":{"position":[[13,6],[22,9],[43,54],[108,15],[157,3],[187,4],[194,3],[203,3],[238,16],[268,28],[297,11],[309,14],[324,3],[328,3],[366,13],[385,9],[406,9],[439,3],[443,2],[456,6],[499,12],[517,10],[641,14],[681,14],[742,3],[755,1],[767,28]]},"974":{"position":[[13,38],[113,2],[116,2],[119,9],[129,2],[166,5],[195,5],[249,8],[258,24],[313,8],[322,28],[351,3],[373,14],[388,3],[406,2],[422,2],[440,2],[443,52],[777,3],[792,2],[801,3]]},"976":{"position":[[0,43],[143,115],[259,130]]},"981":{"position":[[140,3],[193,108],[384,10],[406,88]]},"983":{"position":[[0,2],[67,2],[153,17],[177,6]]},"986":{"position":[[0,3],[9,31],[148,9],[158,3],[318,3],[362,9],[922,5],[982,13],[1009,13],[1036,4],[1094,3],[1147,1],[1159,1],[1169,6],[1181,11],[1239,1],[1283,11],[1308,1],[1317,3],[1348,19],[1378,1],[1383,3],[1397,12],[1415,2],[1515,2],[1520,1],[1527,30],[1564,6],[1577,16],[1607,27],[1668,6],[1767,6],[1786,15],[1845,19],[1874,30],[1905,29],[1941,5],[1962,35],[2017,13],[2044,20],[2065,1],[2099,25],[2267,18],[2286,52],[2345,24],[2377,4],[2468,4],[2534,8],[2593,5],[2627,10],[2643,1],[2663,5],[2747,23],[2771,4],[2784,6],[2796,1],[2801,10],[2841,1],[2867,4],[2902,4],[2915,1],[2923,1],[3090,31],[3128,21],[3171,7],[3191,27],[3224,1],[3268,1],[3277,8],[3307,16],[3330,29],[3398,9],[3408,2],[3448,5],[3514,54],[3581,1],[3586,4],[3610,27],[3643,1],[3660,3],[3680,52],[3733,2],[3753,40],[3799,1],[3811,5],[3862,3],[3899,3],[3910,17],[4031,2],[4046,4],[4081,2],[4091,6],[4103,8],[4116,9],[4165,22],[4208,1],[4221,12]]},"988":{"position":[[0,2],[13,4],[25,42],[75,1],[87,14],[102,22],[216,58],[285,43],[420,43],[562,8],[582,1],[589,1],[599,1],[655,1],[661,6],[673,2],[687,1],[694,1],[704,1],[772,5],[806,22],[847,1],[871,21],[951,11],[971,43],[1021,2],[1111,5],[1138,1],[1146,1],[1159,1],[1166,6],[1178,1],[1196,1],[1207,6],[1220,14],[1264,1],[1589,2],[1613,44],[1658,3],[1673,3],[1682,1],[1686,25],[1718,2],[1723,4],[1756,9],[1766,6],[1805,1],[1899,19],[1919,3],[1923,4],[1928,5],[1934,4],[1939,4],[1944,4],[1968,1],[1970,1],[1976,3],[1994,2],[1997,2],[2000,1],[2005,1],[2007,1],[2045,4],[2078,4],[2083,5],[2154,2],[2157,1],[2162,1],[2164,1],[2170,8],[2182,3],[2236,1],[2263,1],[2291,19],[2311,27],[2444,4],[2453,10],[2464,8],[2477,7],[2504,9],[2521,15],[2537,12],[2564,24],[3788,1]]},"990":{"position":[[0,14],[22,1],[166,98]]},"992":{"position":[[0,93],[114,15],[130,126],[257,53],[311,38],[350,53],[468,4],[473,25],[552,10],[563,20],[587,169],[859,222]]},"994":{"position":[[0,76],[195,17],[213,7],[226,115],[523,6],[533,62],[601,5],[611,3],[634,40],[675,12],[788,29],[973,45],[1137,22],[1198,29],[1233,10],[1344,45],[1496,16],[1517,8],[1587,17]]},"996":{"position":[[0,9],[19,92],[112,85],[198,65],[264,16],[281,14],[296,22],[319,37],[357,32],[495,4],[511,7],[569,1],[607,1],[643,1],[648,1],[685,1],[723,1],[754,1],[948,1],[999,1],[1097,1],[1168,1],[1205,1],[1243,1],[1279,1],[1350,1],[1442,1],[1465,1],[1545,1],[1650,14],[1672,7],[1796,2],[1832,2],[1867,2],[1904,2],[2096,31],[2132,2],[2234,22],[2354,4],[2399,6]]},"998":{"position":[[0,11],[16,5]]},"1004":{"position":[[1528,1],[1566,1],[1602,1],[1607,1],[1644,1],[1682,1],[1713,1],[1907,1],[1958,1],[2056,1],[2127,1],[2164,1],[2202,1],[2238,1],[2309,1],[2401,1],[2424,1],[2504,1],[2796,2],[2832,2],[2867,2],[2904,2]]},"1006":{"position":[[73,4],[156,4]]},"1008":{"position":[[35,3],[47,17],[65,46],[125,3],[129,5],[148,8]]},"1010":{"position":[[0,1],[24,4],[42,15],[65,16],[87,11],[104,3]]},"1012":{"position":[[75,4],[107,4],[128,19],[148,3],[152,8],[167,3],[179,15],[195,3],[199,4],[210,35],[254,32],[287,4],[292,34],[327,5],[378,19],[404,3],[416,11],[434,3],[446,3]]},"1014":{"position":[[6,60],[73,3]]},"1016":{"position":[[0,7],[14,15]]},"1018":{"position":[[7,10],[153,1],[184,3]]},"1020":{"position":[[10,6],[21,12],[34,7],[42,16],[59,4],[81,7],[96,2],[113,25],[146,7],[154,9],[164,25],[199,1],[301,9],[315,12],[331,6],[343,6],[350,25],[376,2],[385,7],[403,2],[413,2],[416,1],[418,5],[424,7],[432,1],[434,10],[445,1],[447,3],[458,6],[488,1],[584,2],[690,6],[697,15],[763,1],[773,1],[816,5],[822,1],[828,13],[858,32],[903,2]]},"1022":{"position":[[0,6],[26,1],[45,3],[63,6],[80,16],[106,5],[112,6],[155,3],[172,4],[187,20],[208,3],[212,31],[252,2],[269,2],[315,61],[381,1],[389,7],[403,30],[447,2],[483,2],[486,9],[517,12],[547,14],[583,22],[606,4],[619,10],[682,22],[762,3],[781,2],[868,11],[887,10],[931,3],[947,8],[995,2],[1029,45]]},"1024":{"position":[[99,90],[196,31]]},"1026":{"position":[[13,10],[24,1],[31,1],[42,12],[55,1],[66,1],[78,6],[85,1],[93,1],[106,6],[113,1],[123,8],[132,1],[143,8],[152,1],[165,5],[171,1],[182,1],[190,6],[197,1],[210,6],[217,1]]},"1028":{"position":[[0,14],[28,6],[46,5],[68,1],[73,2]]},"1030":{"position":[[0,4],[10,9]]},"1032":{"position":[[5,4],[23,16],[53,5],[59,11],[84,5],[92,2],[97,1],[112,8],[123,12],[138,19],[158,9],[181,5],[189,1],[204,25],[230,2],[246,7],[259,13],[304,12],[324,18],[352,7],[367,9],[386,6],[401,3],[417,1],[428,5],[439,9],[456,6],[470,14],[490,4]]},"1035":{"position":[[5,30],[49,26],[76,2],[92,16]]},"1037":{"position":[[5,29]]},"1039":{"position":[[42,41]]},"1041":{"position":[[13,11],[32,2],[53,3],[67,3],[76,6],[90,8],[106,19],[126,2],[142,1],[151,11]]},"1043":{"position":[[5,4],[62,13]]},"1045":{"position":[[5,27]]},"1047":{"position":[[13,13],[32,8],[46,11],[58,16],[83,7],[107,9],[125,8]]},"1049":{"position":[[0,6],[37,6],[48,6],[77,20]]},"1051":{"position":[[8,4],[29,16],[62,11],[76,6],[85,2],[88,2],[107,7],[120,27],[166,1],[176,18],[203,18],[225,6],[336,11],[356,14],[379,6],[389,5],[405,1],[415,10],[469,1],[578,9],[596,8]]},"1054":{"position":[[13,7],[51,5],[66,22],[96,1],[111,12],[131,10],[142,9],[172,2],[183,15],[235,28],[264,1],[271,8],[288,29],[318,3],[327,27],[382,38]]},"1056":{"position":[[26,10],[62,15],[78,7],[86,2],[113,12],[132,5],[144,1],[160,3],[164,2],[167,2],[179,6],[188,3],[199,10],[212,10],[271,1],[282,3],[290,5],[298,5],[307,3],[354,4],[372,3],[392,4],[415,7],[423,2],[426,2],[438,6],[447,3],[458,10],[471,10],[530,1],[619,7],[629,7],[639,8],[650,3],[659,54],[716,3],[732,8],[743,3],[763,4]]},"1058":{"position":[[13,5],[51,52],[109,8],[125,18],[172,5]]},"1060":{"position":[[108,9]]},"1062":{"position":[[85,19],[115,3],[125,5],[191,22],[226,1],[240,9],[250,1],[262,6],[281,2],[284,1],[292,10],[313,4],[328,5],[352,4],[393,1],[451,1],[486,1],[504,1],[516,6],[535,2],[538,1],[546,10],[566,4],[581,5],[605,4],[646,1],[704,1],[739,1],[768,10],[789,1],[800,32],[868,2],[884,45],[930,2],[939,1],[951,1],[978,33],[1016,11],[1034,50],[1085,29],[1120,45]]},"1064":{"position":[[0,8],[14,7],[26,14],[79,3],[88,45],[134,28],[176,13],[190,37],[228,9],[242,7],[250,2],[253,2],[259,3],[302,1],[321,2],[327,1],[377,1],[384,1],[408,1],[427,1],[445,1],[451,1],[462,1],[467,34],[518,25],[553,1],[559,1],[570,1],[575,12],[588,2],[591,2],[594,1],[596,5],[676,3],[699,1],[706,17],[727,36]]},"1067":{"position":[[0,68],[102,35],[154,15],[179,7],[194,20],[224,15],[254,1],[265,20],[295,30],[326,3],[335,2],[347,20],[373,16],[393,18],[445,6],[461,12],[510,33],[562,10],[573,7],[659,16],[678,11],[702,4],[727,20],[786,33],[820,3],[834,7],[863,22]]},"1069":{"position":[[0,2],[11,18],[35,5],[135,8],[144,2],[173,2],[193,20],[227,20],[273,16],[290,2],[310,1],[314,5],[320,2],[333,1],[335,3],[350,9],[365,11],[387,13],[401,5],[407,36]]},"1071":{"position":[[13,37],[64,2],[71,23],[108,4],[113,4],[122,7],[134,19],[158,4],[167,3],[202,5]]},"1073":{"position":[[7,44],[103,3],[107,2],[117,5],[130,13],[151,4],[165,2],[175,13]]},"1075":{"position":[[0,10],[22,25],[54,21],[82,3],[120,18],[144,9],[183,38],[238,1],[259,4]]},"1077":{"position":[[0,2],[11,24],[49,5],[63,26],[104,3]]},"1079":{"position":[[8,4],[18,12],[36,15],[60,6],[72,24],[111,7],[128,4],[142,16],[167,4],[179,10],[195,15],[219,28],[253,9],[271,13],[290,6],[353,20],[379,19]]},"1081":{"position":[[0,43],[89,14]]},"1083":{"position":[[34,8],[122,3]]},"1085":{"position":[[60,32],[118,3],[180,1],[251,4],[353,5]]},"1087":{"position":[[33,35]]},"1089":{"position":[[0,19],[28,1],[33,2]]},"1091":{"position":[[0,36]]},"1094":{"position":[[0,87],[203,12],[338,55],[394,5],[410,82],[499,12],[518,18],[543,8],[557,12],[576,16],[599,7],[613,8],[628,4],[633,11],[645,16],[738,14],[758,11],[782,9],[797,3],[801,100],[907,65],[1005,9],[1015,16],[1277,1],[1281,24],[1310,31],[1371,101],[1516,3]]},"1096":{"position":[[0,56],[69,8],[81,13],[100,5],[138,5],[170,27],[204,10],[309,14],[324,5],[330,132],[467,15],[487,11],[499,6],[509,72],[655,5],[667,9],[870,2],[873,5],[890,157],[1048,43],[1106,16],[1131,12],[1149,15],[1228,2],[1231,4],[1236,4],[1247,16],[1277,13],[1297,14],[1318,101],[1474,2]]},"1098":{"position":[[0,4],[21,23],[45,33],[79,29],[109,25]]},"1100":{"position":[[0,39],[40,23],[66,5]]},"1102":{"position":[[137,52],[190,141],[338,13],[465,1],[543,7],[555,3]]},"1104":{"position":[[0,75],[76,45],[122,69],[198,7],[216,33],[254,2],[360,15],[379,2],[482,88],[597,176],[784,1],[794,56],[851,11]]},"1106":{"position":[[49,19],[69,28],[98,31],[130,7],[185,13],[199,10],[210,7],[218,27],[261,5]]},"1108":{"position":[[0,50],[51,11],[84,56],[141,3],[150,28],[195,7],[322,10],[373,15],[417,16],[446,16],[480,17],[505,3]]},"1110":{"position":[[281,4],[290,35],[330,47],[378,7],[412,1]]},"1114":{"position":[[0,2],[49,23],[73,55]]},"1116":{"position":[[0,20],[24,8],[36,61],[98,1],[126,11],[138,43],[182,1],[267,37],[308,8],[339,4],[373,12],[390,58]]},"1118":{"position":[[0,1],[15,8],[27,6],[38,1]]},"1120":{"position":[[59,3],[67,46],[118,9],[128,1],[134,22],[160,2],[173,18],[224,29],[258,52],[311,6],[322,4],[381,8],[461,19],[485,6]]},"1122":{"position":[[17,3],[103,3],[170,8],[221,2],[295,1],[305,1]]},"1124":{"position":[[4,22],[27,22],[67,14],[99,2],[112,5],[234,12],[247,3],[256,4],[277,10],[293,8]]},"1126":{"position":[[4,27],[36,20]]},"1128":{"position":[[83,2],[96,7],[104,2],[132,10],[153,1],[168,2],[206,2],[223,2],[264,6],[283,7],[302,3]]},"1130":{"position":[[13,59]]},"1132":{"position":[[85,115],[214,36]]},"1135":{"position":[[13,2],[27,44],[85,13],[119,9]]},"1137":{"position":[[0,11],[16,3],[100,11],[138,3]]},"1139":{"position":[[13,2],[31,22]]},"1141":{"position":[[13,2],[32,1],[37,28]]},"1143":{"position":[[13,12]]},"1145":{"position":[[13,15],[74,17],[108,4],[131,35]]},"1147":{"position":[[13,8],[51,23],[80,3]]},"1149":{"position":[[0,22],[36,5],[46,11],[62,1],[64,31]]},"1151":{"position":[[0,8],[22,49]]},"1153":{"position":[[16,9],[58,3]]},"1155":{"position":[[13,47]]},"1157":{"position":[[0,68]]},"1159":{"position":[[13,35]]},"1161":{"position":[[0,17],[31,65]]},"1163":{"position":[[27,54]]},"1165":{"position":[[0,18],[19,4],[45,1],[50,2]]},"1167":{"position":[[0,15]]},"1169":{"position":[[0,4],[5,4],[10,4],[15,2]]},"1172":{"position":[[0,5],[25,5],[43,4]]},"1175":{"position":[[0,113],[147,27],[175,25]]},"1177":{"position":[[39,39],[91,52]]},"1179":{"position":[[0,1],[94,4],[99,2],[154,6],[163,3]]},"1181":{"position":[[0,1],[118,4],[123,8]]},"1183":{"position":[[48,1],[60,33]]},"1185":{"position":[[14,9],[35,2],[66,1],[68,2],[109,27],[137,1],[190,42],[233,1],[280,4],[285,3]]},"1187":{"position":[[0,32]]},"1189":{"position":[[0,15],[16,26]]},"1191":{"position":[[0,35],[36,53],[149,44]]},"1193":{"position":[[0,36],[84,35],[212,6],[221,6],[230,3]]},"1195":{"position":[[0,22]]},"1199":{"position":[[0,31]]},"1203":{"position":[[82,29],[124,33],[168,28]]},"1205":{"position":[[12,7],[20,2],[23,2],[26,3],[47,6],[54,12],[67,12],[80,16],[115,16],[132,12],[150,5],[156,14],[177,5],[183,13],[202,6],[209,4],[214,3]]},"1208":{"position":[[0,31],[32,4],[40,14],[55,115],[171,16]]},"1210":{"position":[[0,6],[12,72],[85,59],[242,40],[283,62]]},"1212":{"position":[[0,12],[19,35],[60,44],[105,43],[180,27],[208,38],[247,8],[261,56],[318,27],[346,103]]},"1214":{"position":[[17,16],[34,20],[55,19],[75,22],[109,7],[117,13],[131,7],[139,6],[163,31],[195,23],[219,10],[230,3],[239,18],[258,4],[263,3]]},"1216":{"position":[[0,41],[42,3],[46,1],[48,8],[57,3],[61,3],[65,32],[98,3],[102,3],[106,5]]},"1218":{"position":[[0,8]]},"1220":{"position":[[0,32]]},"1222":{"position":[[0,5]]},"1224":{"position":[[0,21]]},"1226":{"position":[[0,13],[17,3]]},"1228":{"position":[[0,35]]},"1230":{"position":[[44,23],[92,13]]},"1232":{"position":[[0,1],[20,16],[166,2]]},"1234":{"position":[[0,2],[3,9],[25,6],[37,16],[59,25],[104,21],[126,2],[140,2],[149,22],[394,7],[585,8],[598,6],[653,2],[694,6]]},"1236":{"position":[[0,42],[43,3],[51,1],[58,11],[82,1],[88,1],[149,3],[153,3],[157,35],[193,3],[197,2],[200,5],[206,3],[210,2],[213,14],[251,25]]},"1238":{"position":[[0,11],[24,1],[30,1]]},"1240":{"position":[[0,35]]},"1242":{"position":[[0,5]]},"1244":{"position":[[0,14],[38,25]]},"1246":{"position":[[0,15],[16,4],[21,3],[25,3]]},"1248":{"position":[[0,13],[17,3]]},"1251":{"position":[[100,22],[129,1],[137,11],[155,2],[160,3],[170,2],[175,4],[186,3],[196,2]]},"1253":{"position":[[18,27],[52,6],[65,4],[91,21],[131,1],[135,7],[222,1],[236,4],[246,1],[272,16]]},"1255":{"position":[[0,2],[96,6],[131,3],[145,6],[268,10],[322,3],[411,2],[429,1]]},"1257":{"position":[[0,2],[18,12],[37,4],[48,3],[71,15],[97,31]]},"1259":{"position":[[0,52],[69,4],[74,5],[80,2],[83,2],[86,6],[93,1],[95,1],[97,1],[99,6],[106,1],[108,1],[110,1]]},"1261":{"position":[[0,14],[38,25]]},"1263":{"position":[[0,44],[45,1],[91,32]]},"1265":{"position":[[0,13],[14,2],[17,9],[39,6],[51,15],[72,25],[98,4],[103,42],[158,6],[170,8],[239,1],[247,10],[274,3],[294,10],[312,14],[397,3],[470,13],[489,4],[509,12],[524,12],[583,63],[652,41],[764,20],[790,6],[797,1],[811,6],[823,34],[858,12],[931,3],[958,2],[961,29],[996,32]]},"1267":{"position":[[0,11],[24,1],[30,1]]},"1269":{"position":[[0,5],[10,12],[71,23],[124,10],[147,10],[181,17],[199,2],[244,3],[291,9],[301,1],[316,13],[431,2],[446,9],[460,23],[484,10],[499,18],[565,2],[568,1],[593,22],[720,8],[733,7],[830,1],[918,2],[970,16],[987,12],[1004,1],[1010,14],[1035,1]]},"1271":{"position":[[4,4],[56,2],[59,34],[146,18],[216,38],[260,12],[278,2],[318,10],[341,10]]},"1276":{"position":[[0,2],[15,10],[38,12],[51,3],[75,3],[104,3]]},"1281":{"position":[[0,15],[16,4],[21,3],[25,3]]},"1283":{"position":[[0,13],[17,3]]},"1285":{"position":[[0,5],[18,20]]},"1287":{"position":[[0,9],[22,9]]},"1289":{"position":[[0,17],[30,33]]},"1291":{"position":[[0,4],[9,17],[39,16],[56,16],[78,7],[90,1],[111,12],[147,4]]},"1293":{"position":[[26,6],[33,11],[62,7]]},"1296":{"position":[[0,3],[10,51],[73,5],[86,4],[107,35],[151,9]]},"1298":{"position":[[0,3],[17,2],[24,4],[43,6],[63,10],[86,21],[177,8],[232,2],[255,5],[261,20],[282,8],[291,57],[349,1],[351,1],[353,1],[355,1],[357,1],[366,1],[368,1],[370,23],[394,1],[396,1],[398,1],[409,1],[425,1],[427,1],[429,1],[446,1],[457,1],[459,1],[461,1],[463,1],[479,1],[481,1],[483,1],[492,1],[514,1],[516,1],[518,1],[520,1],[545,1],[547,1],[549,23],[573,1],[575,1],[577,1],[588,1],[590,1],[592,1],[594,1],[596,1],[598,45],[644,1],[646,1],[648,1],[650,1],[652,1],[654,1],[656,1],[658,1],[660,1],[670,1],[672,1],[674,1],[676,1],[678,23],[702,1],[704,1],[706,1],[708,1],[710,1],[727,1],[736,1],[738,1],[740,1],[742,1],[744,23],[768,1],[770,1],[772,1],[774,1],[776,1],[794,1],[796,1],[798,1],[800,1],[802,23],[826,1],[828,1],[830,1],[832,1],[834,1],[836,1],[838,1],[840,1],[842,1],[844,1],[846,1],[865,1],[885,1],[887,1],[889,1],[891,1],[913,1],[915,1],[917,1],[919,1],[921,1],[923,1],[925,1],[927,1],[929,1],[931,1],[933,1],[935,23],[959,1],[961,1],[963,1],[965,1],[967,1],[986,1],[988,1],[990,1],[992,1],[994,23],[1018,1],[1020,1],[1022,1],[1024,1],[1026,1],[1028,1],[1030,1],[1032,1],[1034,1],[1036,1],[1038,1],[1053,1],[1069,1],[1071,1],[1073,1],[1075,1],[1077,1],[1079,1],[1081,1],[1083,1],[1085,1],[1087,45],[1133,1],[1135,1],[1137,1],[1151,1],[1153,1],[1155,23],[1179,1],[1181,1],[1183,1],[1185,1],[1187,1],[1189,1],[1191,1],[1208,1],[1223,1],[1225,1],[1227,1],[1229,1],[1231,1],[1233,1],[1235,23],[1259,1],[1261,1],[1263,1],[1265,1],[1267,1],[1269,1],[1271,1],[1273,57]]},"1300":{"position":[[0,38],[39,1],[41,3],[55,3],[63,1],[65,3],[74,1],[93,1],[95,1],[97,3],[105,1],[156,1],[158,1],[160,3],[168,1],[178,1],[180,1],[182,3],[194,1],[243,1],[245,1],[247,3],[255,1],[283,1],[285,1],[287,3],[302,1],[352,1],[354,1],[356,3],[365,1],[415,1],[417,3],[435,1],[449,1],[451,3],[465,1],[467,3],[484,1],[486,3],[494,1],[496,3],[508,1],[559,1],[561,3],[573,3]]}}}],["0",{"_index":88,"t":{"972":{"position":[[192,1],[436,2]]},"1056":{"position":[[627,1],[637,1]]},"1064":{"position":[[304,2]]},"1179":{"position":[[161,1]]},"1185":{"position":[[29,1]]}}}],["0.1",{"_index":1127,"t":{"1110":{"position":[[386,3],[407,4]]}}}],["00",{"_index":1136,"t":{"1116":{"position":[[33,2]]}}}],["01",{"_index":379,"t":{"988":{"position":[[3270,2]]},"994":{"position":[[454,68]]},"1002":{"position":[[1437,3]]},"1165":{"position":[[37,7]]}}}],["05",{"_index":80,"t":{"967":{"position":[[49,9]]},"988":{"position":[[3782,2]]}}}],["063",{"_index":431,"t":{"992":{"position":[[781,77]]},"1000":{"position":[[2184,4]]}}}],["07",{"_index":378,"t":{"988":{"position":[[3267,2]]}}}],["09",{"_index":1055,"t":{"1089":{"position":[[30,2]]}}}],["0。因此我们可以使用（边类型，起始点，目的点，rank",{"_index":1317,"t":{"1271":{"position":[[281,36]]}}}],["1",{"_index":35,"t":{"935":{"position":[[191,2]]},"951":{"position":[[101,1],[157,1],[173,1],[204,1],[226,1],[251,1],[279,1]]},"953":{"position":[[16,13]]},"986":{"position":[[1443,1]]},"988":{"position":[[1684,1]]},"1032":{"position":[[90,1],[136,1]]},"1051":{"position":[[74,1]]},"1056":{"position":[[186,1],[445,1],[741,1]]},"1064":{"position":[[464,2],[544,4],[572,2]]},"1067":{"position":[[581,38]]},"1185":{"position":[[31,1]]},"1193":{"position":[[219,1]]},"1205":{"position":[[0,11]]},"1214":{"position":[[0,16]]},"1234":{"position":[[312,3]]}}}],["1.0",{"_index":1010,"t":{"1064":{"position":[[270,11]]}}}],["1.4",{"_index":195,"t":{"986":{"position":[[1199,4],[3232,3]]}}}],["1.4，2011",{"_index":228,"t":{"986":{"position":[[2090,8]]}}}],["1.8",{"_index":198,"t":{"986":{"position":[[1235,3],[3597,3]]}}}],["1.x",{"_index":1204,"t":{"1122":{"position":[[13,3]]}}}],["1/10",{"_index":1217,"t":{"1124":{"position":[[302,18]]}}}],["1/sc",{"_index":210,"t":{"986":{"position":[[1465,4]]}}}],["10",{"_index":77,"t":{"965":{"position":[[39,7]]},"983":{"position":[[173,3]]},"986":{"position":[[3583,2]]},"988":{"position":[[2850,2]]},"1104":{"position":[[382,94]]},"1110":{"position":[[437,2]]},"1114":{"position":[[46,2]]},"1124":{"position":[[274,2]]}}}],["100",{"_index":494,"t":{"996":{"position":[[1645,4],[2092,3]]},"1004":{"position":[[2604,4],[3092,3]]},"1064":{"position":[[680,3]]},"1234":{"position":[[681,12]]}}}],["1000",{"_index":1130,"t":{"1110":{"position":[[414,4]]}}}],["1001",{"_index":1022,"t":{"1064":{"position":[[701,4]]}}}],["101",{"_index":1306,"t":{"1269":{"position":[[419,8],[925,5]]}}}],["101，目的点为102，边类型都为call",{"_index":1316,"t":{"1271":{"position":[[165,38]]}}}],["11",{"_index":241,"t":{"986":{"position":[[2798,2]]},"1234":{"position":[[294,4],[344,4],[475,4]]}}}],["12",{"_index":203,"t":{"986":{"position":[[1380,2],[3645,2]]},"1094":{"position":[[1473,2],[1486,2],[1513,2]]}}}],["126230231.html",{"_index":375,"t":{"988":{"position":[[3195,15]]}}}],["13\":(\"n1",{"_index":1272,"t":{"1234":{"position":[[299,12]]}}}],["135–146",{"_index":1163,"t":{"1116":{"position":[[970,8]]}}}],["14",{"_index":413,"t":{"988":{"position":[[3785,2]]}}}],["14279和iso/iec",{"_index":209,"t":{"986":{"position":[[1447,13]]}}}],["1440w",{"_index":441,"t":{"994":{"position":[[1019,117]]},"1002":{"position":[[3670,6]]}}}],["15",{"_index":28,"t":{"935":{"position":[[39,2]]},"951":{"position":[[118,2]]},"1226":{"position":[[14,2]]},"1248":{"position":[[14,2]]},"1283":{"position":[[14,2]]}}}],["165305",{"_index":354,"t":{"988":{"position":[[2787,7]]}}}],["171",{"_index":430,"t":{"992":{"position":[[757,23]]},"1000":{"position":[[1909,4]]}}}],["1735",{"_index":1265,"t":{"1210":{"position":[[7,4]]},"1214":{"position":[[234,4]]}}}],["18",{"_index":429,"t":{"992":{"position":[[584,2]]},"1208":{"position":[[37,2]]}}}],["1878",{"_index":427,"t":{"992":{"position":[[463,4]]},"1000":{"position":[[1143,5]]},"1212":{"position":[[55,4]]}}}],["18th",{"_index":581,"t":{"1000":{"position":[[1286,4]]}}}],["19",{"_index":773,"t":{"1002":{"position":[[4799,3]]}}}],["1970",{"_index":154,"t":{"986":{"position":[[4,4]]},"1094":{"position":[[198,4],[1066,4]]}}}],["1987",{"_index":407,"t":{"988":{"position":[[3654,6]]}}}],["1989年sql",{"_index":171,"t":{"986":{"position":[[428,134]]}}}],["1996",{"_index":1258,"t":{"1183":{"position":[[189,4]]}}}],["1=1",{"_index":466,"t":{"996":{"position":[[798,3],[1075,3],[1444,3]]},"1004":{"position":[[1757,3],[2034,3],[2403,3]]}}}],["1c96572a1401",{"_index":890,"t":{"1006":{"position":[[141,14],[224,13]]}}}],["1、101",{"_index":1021,"t":{"1064":{"position":[[693,5]]}}}],["1、2、3",{"_index":1294,"t":{"1265":{"position":[[494,10]]}}}],["1、nebulagraph",{"_index":1260,"t":{"1185":{"position":[[0,13]]}}}],["2",{"_index":68,"t":{"951":{"position":[[136,1],[147,1]]},"1067":{"position":[[647,9],[700,1],[784,1]]},"1069":{"position":[[312,1]]},"1185":{"position":[[33,1],[38,27]]},"1193":{"position":[[186,25],[228,1]]},"1205":{"position":[[30,16]]},"1214":{"position":[[98,10]]}}}],["2.0",{"_index":199,"t":{"986":{"position":[[1263,3],[3656,3]]},"988":{"position":[[2150,3],[2232,3]]},"1135":{"position":[[23,3]]}}}],["2.0（2013.12）引入了一个新概念——点上的标签（label）。基于点标签，neo4j",{"_index":231,"t":{"986":{"position":[[2220,46]]}}}],["2.x",{"_index":91,"t":{"972":{"position":[[234,3]]},"1056":{"position":[[102,3]]},"1122":{"position":[[36,3]]},"1232":{"position":[[189,3]]}}}],["20",{"_index":29,"t":{"935":{"position":[[44,2]]},"996":{"position":[[2385,13]]},"1004":{"position":[[4027,3]]}}}],["2000",{"_index":183,"t":{"986":{"position":[[928,4],[1594,4]]}}}],["2001",{"_index":184,"t":{"986":{"position":[[969,4]]}}}],["2005",{"_index":270,"t":{"988":{"position":[[3,4]]}}}],["2006",{"_index":1259,"t":{"1183":{"position":[[199,4]]}}}],["2007",{"_index":185,"t":{"986":{"position":[[996,4],[2031,4]]}}}],["2009",{"_index":186,"t":{"986":{"position":[[1023,4],[2791,4]]}}}],["2010",{"_index":189,"t":{"986":{"position":[[1081,4],[3150,4]]},"988":{"position":[[8,4]]},"1116":{"position":[[998,5]]}}}],["2011",{"_index":194,"t":{"986":{"position":[[1176,4],[3219,4]]},"988":{"position":[[790,4],[1066,28],[1980,4]]}}}],["2012",{"_index":197,"t":{"986":{"position":[[1222,4],[3569,11]]},"988":{"position":[[1117,5],[1535,13],[2062,4]]}}}],["2013",{"_index":251,"t":{"986":{"position":[[3638,4]]}}}],["2014",{"_index":327,"t":{"988":{"position":[[2121,4]]}}}],["2015",{"_index":200,"t":{"986":{"position":[[1295,4],[3794,4],[3928,4]]},"988":{"position":[[842,4],[1095,15],[1125,4],[1173,4],[1608,4]]},"1183":{"position":[[204,4]]}}}],["2016",{"_index":258,"t":{"986":{"position":[[3962,4]]},"988":{"position":[[2198,4]]},"1183":{"position":[[194,4]]}}}],["2017",{"_index":201,"t":{"986":{"position":[[1333,4]]},"988":{"position":[[1677,4],[1962,5]]}}}],["2017年，复制并分叉(fork)了原有的titan",{"_index":313,"t":{"988":{"position":[[1433,39]]}}}],["2018",{"_index":202,"t":{"986":{"position":[[1373,4],[4041,4]]},"988":{"position":[[3777,4]]}}}],["2019",{"_index":205,"t":{"986":{"position":[[1410,4],[4098,4],[4188,4]]},"996":{"position":[[2349,4]]},"1004":{"position":[[3914,5]]}}}],["2019年大约是8亿美元，将在未来6年保持25%左右的年复合增长(cagr",{"_index":151,"t":{"983":{"position":[[81,65]]}}}],["2020",{"_index":1085,"t":{"1098":{"position":[[5,4]]}}}],["2020.html",{"_index":1145,"t":{"1116":{"position":[[521,10]]}}}],["2021",{"_index":213,"t":{"986":{"position":[[1502,4]]},"988":{"position":[[2883,6]]}}}],["2021年十大数据与分析趋势\"gartner2",{"_index":140,"t":{"981":{"position":[[95,44]]}}}],["2021年日常代码提交(pull",{"_index":315,"t":{"988":{"position":[[1549,16]]}}}],["2022",{"_index":1188,"t":{"1116":{"position":[[1559,4]]}}}],["2026",{"_index":370,"t":{"988":{"position":[[3099,4]]}}}],["27",{"_index":506,"t":{"996":{"position":[[2367,9]]},"1004":{"position":[[3967,3]]}}}],["3",{"_index":55,"t":{"941":{"position":[[52,1]]},"951":{"position":[[230,1],[255,1],[283,1]]},"1032":{"position":[[95,1],[121,1],[187,1]]},"1051":{"position":[[83,1]]},"1056":{"position":[[210,1],[469,1]]},"1067":{"position":[[657,1],[676,1]]},"1185":{"position":[[85,11]]},"1205":{"position":[[97,17]]},"1214":{"position":[[146,16]]},"1265":{"position":[[522,1]]}}}],["3.25",{"_index":215,"t":{"986":{"position":[[1522,4]]}}}],["3.5",{"_index":204,"t":{"986":{"position":[[1393,3]]}}}],["3.x",{"_index":274,"t":{"988":{"position":[[335,3]]},"1056":{"position":[[106,6]]}}}],["3.x.x",{"_index":1268,"t":{"1232":{"position":[[14,5]]},"1234":{"position":[[98,5]]}}}],["30",{"_index":152,"t":{"983":{"position":[[147,2]]},"986":{"position":[[3005,67]]},"1028":{"position":[[70,2]]}}}],["32",{"_index":211,"t":{"986":{"position":[[1470,2]]}}}],["3228",{"_index":212,"t":{"986":{"position":[[1475,26]]}}}],["323–330",{"_index":404,"t":{"988":{"position":[[3630,8]]}}}],["331b",{"_index":1187,"t":{"1116":{"position":[[1551,4]]}}}],["360",{"_index":442,"t":{"994":{"position":[[1160,32],[1244,29]]},"1002":{"position":[[4123,4],[4452,3]]},"1153":{"position":[[0,15]]}}}],["360、快手kuaishou、微信weixin、知乎zhihu",{"_index":444,"t":{"994":{"position":[[1274,69]]}}}],["37",{"_index":81,"t":{"967":{"position":[[61,2]]}}}],["39",{"_index":1241,"t":{"1165":{"position":[[47,2]]}}}],["4",{"_index":367,"t":{"988":{"position":[[3082,1]]},"1056":{"position":[[370,1],[648,1]]},"1087":{"position":[[69,1]]},"1210":{"position":[[145,96]]}}}],["4.x",{"_index":277,"t":{"988":{"position":[[416,3]]},"1104":{"position":[[780,3]]}}}],["40",{"_index":153,"t":{"983":{"position":[[150,2]]},"1116":{"position":[[1063,2]]},"1183":{"position":[[131,2]]}}}],["40/02",{"_index":1168,"t":{"1116":{"position":[[1053,5]]}}}],["42",{"_index":1256,"t":{"1183":{"position":[[145,2]]}}}],["4、5",{"_index":1266,"t":{"1212":{"position":[[149,30]]}}}],["5",{"_index":67,"t":{"951":{"position":[[114,1],[287,1]]},"965":{"position":[[12,26]]},"983":{"position":[[171,1]]},"988":{"position":[[1721,1]]},"1085":{"position":[[93,1]]}}}],["50",{"_index":1135,"t":{"1116":{"position":[[21,2]]}}}],["500",{"_index":368,"t":{"988":{"position":[[3084,3]]},"996":{"position":[[2377,7]]},"1004":{"position":[[3984,4]]}}}],["6",{"_index":82,"t":{"972":{"position":[[20,1]]},"1062":{"position":[[189,1]]},"1104":{"position":[[302,57]]}}}],["64",{"_index":1309,"t":{"1269":{"position":[[678,2]]}}}],["7",{"_index":69,"t":{"951":{"position":[[291,1]]}}}],["8",{"_index":986,"t":{"1056":{"position":[[296,1],[714,1]]},"1064":{"position":[[263,6],[324,2],[373,3]]},"1116":{"position":[[1172,3]]}}}],["8.0",{"_index":922,"t":{"1018":{"position":[[155,3]]}}}],["89",{"_index":173,"t":{"986":{"position":[[592,22]]}}}],["89标准被制定后，整个关系型数据库的市场快速收敛到sql",{"_index":172,"t":{"986":{"position":[[563,28]]}}}],["89这种国际标准，gql",{"_index":175,"t":{"986":{"position":[[674,34]]}}}],["9",{"_index":253,"t":{"986":{"position":[[3801,1]]}}}],["90",{"_index":1074,"t":{"1096":{"position":[[78,2]]}}}],["99.99",{"_index":440,"t":{"994":{"position":[[779,8]]},"1002":{"position":[[2514,8],[2900,9]]}}}],["abbrevi",{"_index":666,"t":{"1002":{"position":[[1187,13]]}}}],["abov",{"_index":636,"t":{"1000":{"position":[[2983,5]]}}}],["abstract",{"_index":620,"t":{"1000":{"position":[[2009,11],[2153,8]]}}}],["academia",{"_index":870,"t":{"1004":{"position":[[3741,9]]}}}],["access",{"_index":754,"t":{"1002":{"position":[[4274,6]]},"1143":{"position":[[53,6]]}}}],["accord",{"_index":844,"t":{"1004":{"position":[[1398,9],[3591,9],[3920,9]]},"1116":{"position":[[1564,9]]}}}],["account",{"_index":735,"t":{"1002":{"position":[[3651,7],[3692,8],[3740,9],[4102,8],[4144,9],[4237,8]]}}}],["acm",{"_index":405,"t":{"988":{"position":[[3639,3]]},"1116":{"position":[[1004,4]]}}}],["action",{"_index":1347,"t":{"1300":{"position":[[186,7]]}}}],["actor",{"_index":1331,"t":{"1298":{"position":[[208,9],[1047,5]]}}}],["ad",{"_index":728,"t":{"1002":{"position":[[3515,6],[4683,6]]},"1004":{"position":[[907,6]]}}}],["addit",{"_index":726,"t":{"1002":{"position":[[3471,9],[4597,8]]}}}],["addpeer/removep",{"_index":1032,"t":{"1075":{"position":[[240,18]]}}}],["advanc",{"_index":45,"t":{"935":{"position":[[407,8]]}}}],["advantag",{"_index":812,"t":{"1004":{"position":[[333,11]]}}}],["affect",{"_index":708,"t":{"1002":{"position":[[2581,8],[3399,9]]}}}],["ag",{"_index":654,"t":{"1002":{"position":[[897,4],[1578,5]]},"1183":{"position":[[115,3]]},"1234":{"position":[[250,3],[282,4]]}}}],["age和name（凸显下图片中的属性），对应的值为40和kob",{"_index":1246,"t":{"1177":{"position":[[144,65]]}}}],["age（int",{"_index":112,"t":{"974":{"position":[[157,8]]}}}],["algorithm",{"_index":1169,"t":{"1116":{"position":[[1084,12]]}}}],["allow",{"_index":709,"t":{"1002":{"position":[[2827,6]]},"1004":{"position":[[436,6]]}}}],["although",{"_index":806,"t":{"1004":{"position":[[0,8]]}}}],["amazon",{"_index":312,"t":{"988":{"position":[[1425,7],[2418,6]]},"990":{"position":[[15,6]]}}}],["amount",{"_index":657,"t":{"1002":{"position":[[987,7],[3783,7]]}}}],["analysi",{"_index":856,"t":{"1004":{"position":[[3439,9]]},"1006":{"position":[[292,8]]}}}],["analyt",{"_index":346,"t":{"988":{"position":[[2715,9],[2862,9]]}}}],["analyz",{"_index":824,"t":{"1004":{"position":[[708,7]]}}}],["andré",{"_index":244,"t":{"986":{"position":[[3155,8]]}}}],["anoth",{"_index":550,"t":{"1000":{"position":[[618,7]]}}}],["answer",{"_index":614,"t":{"1000":{"position":[[1867,6]]}}}],["apach",{"_index":179,"t":{"986":{"position":[[754,10]]},"988":{"position":[[2135,6],[2210,6]]},"1135":{"position":[[16,6]]}}}],["api",{"_index":224,"t":{"986":{"position":[[1870,3],[2589,3],[2930,3]]},"1102":{"position":[[551,3]]},"1106":{"position":[[138,46]]},"1291":{"position":[[73,4],[92,6],[143,3]]},"1296":{"position":[[102,4]]},"1298":{"position":[[82,3],[716,4]]},"1300":{"position":[[81,3],[152,3],[174,3],[279,3],[555,3]]}}}],["api。api",{"_index":975,"t":{"1051":{"position":[[195,7]]}}}],["api。应用程序可以将查询引擎作为库(librari",{"_index":234,"t":{"986":{"position":[[2548,40]]}}}],["app",{"_index":449,"t":{"994":{"position":[[1583,3]]},"1002":{"position":[[5478,4]]},"1298":{"position":[[729,6]]},"1300":{"position":[[101,3]]}}}],["app.vu",{"_index":1358,"t":{"1300":{"position":[[500,7]]}}}],["applic",{"_index":383,"t":{"988":{"position":[[3376,12]]},"998":{"position":[[79,11]]},"1004":{"position":[[3299,11]]}}}],["approach",{"_index":748,"t":{"1002":{"position":[[4007,8]]}}}],["aql",{"_index":329,"t":{"988":{"position":[[2166,3]]}}}],["arangodb",{"_index":320,"t":{"988":{"position":[[1795,9],[2107,8],[2126,8]]},"1116":{"position":[[1232,10]]}}}],["architectur",{"_index":1318,"t":{"1276":{"position":[[91,12]]}}}],["architecture/storag",{"_index":968,"t":{"1032":{"position":[[548,20]]}}}],["area",{"_index":602,"t":{"1000":{"position":[[1609,6],[1777,5],[2375,4],[2499,5]]}}}],["aris",{"_index":696,"t":{"1002":{"position":[[2117,6]]}}}],["arr",{"_index":1108,"t":{"1104":{"position":[[993,16]]}}}],["arrows.apparrow",{"_index":1119,"t":{"1108":{"position":[[463,16]]}}}],["art",{"_index":247,"t":{"986":{"position":[[3301,5],[3366,3]]}}}],["asc",{"_index":503,"t":{"996":{"position":[[2082,3]]},"1004":{"position":[[3082,3]]}}}],["ascii",{"_index":248,"t":{"986":{"position":[[3360,5]]}}}],["ascii艺术(ascii",{"_index":246,"t":{"986":{"position":[[3286,14]]}}}],["assess",{"_index":723,"t":{"1002":{"position":[[3436,6]]}}}],["associ",{"_index":396,"t":{"988":{"position":[[3542,11]]},"1000":{"position":[[1666,10],[2657,10]]},"1004":{"position":[[246,11]]}}}],["ast",{"_index":925,"t":{"1018":{"position":[[180,3]]},"1020":{"position":[[17,3]]}}}],["attribut",{"_index":642,"t":{"1002":{"position":[[194,9]]}}}],["aureliu",{"_index":297,"t":{"988":{"position":[[795,10]]}}}],["aurelius(titan",{"_index":305,"t":{"988":{"position":[[1180,15],[1266,15],[1592,15]]}}}],["austern",{"_index":1152,"t":{"1116":{"position":[[760,8]]}}}],["author",{"_index":408,"t":{"988":{"position":[[3723,8]]}}}],["avail",{"_index":704,"t":{"1002":{"position":[[2483,12],[2869,12]]}}}],["aw",{"_index":31,"t":{"935":{"position":[[66,3],[75,3],[460,3]]},"937":{"position":[[18,3]]},"939":{"position":[[29,3],[219,3]]},"941":{"position":[[18,3],[83,3]]},"945":{"position":[[23,3],[45,3],[70,3]]},"947":{"position":[[7,3]]},"949":{"position":[[6,3],[20,3],[38,3]]},"951":{"position":[[33,3]]},"953":{"position":[[30,3]]},"957":{"position":[[0,3],[66,3]]},"959":{"position":[[162,3],[193,3]]},"988":{"position":[[2425,3],[2449,3]]}}}],["aws会根据报告的设置将计费指标数据发送到指定的aw",{"_index":53,"t":{"939":{"position":[[127,48]]}}}],["azur",{"_index":336,"t":{"988":{"position":[[2349,5]]}}}],["a→b",{"_index":1286,"t":{"1255":{"position":[[103,21]]}}}],["a→b→c",{"_index":1282,"t":{"1253":{"position":[[59,5]]},"1255":{"position":[[125,5]]},"1257":{"position":[[42,5]]}}}],["a→b→c→d→e→c",{"_index":1287,"t":{"1255":{"position":[[152,12]]}}}],["a→b→d→a→b→c",{"_index":1284,"t":{"1253":{"position":[[113,15]]}}}],["a→b→d→e→c",{"_index":1283,"t":{"1253":{"position":[[70,18]]},"1255":{"position":[[135,9]]}}}],["a→b→d→e→c。这是因为path",{"_index":1291,"t":{"1257":{"position":[[52,18]]}}}],["a和tag",{"_index":1199,"t":{"1120":{"position":[[404,5]]}}}],["a或c",{"_index":1052,"t":{"1085":{"position":[[322,4]]}}}],["a的操作不会影响tag",{"_index":1201,"t":{"1120":{"position":[[428,11]]}}}],["a转账至账户b，a和b相互关注并且a和b都关注c",{"_index":1262,"t":{"1193":{"position":[[37,46]]}}}],["b",{"_index":293,"t":{"988":{"position":[[702,1]]},"1083":{"position":[[72,2],[86,2],[103,2]]},"1085":{"position":[[102,2],[316,2],[416,2]]},"1087":{"position":[[78,2]]},"1120":{"position":[[440,2]]},"1253":{"position":[[133,1]]},"1255":{"position":[[310,2],[328,2],[378,2]]}}}],["b)中的e时，e的起点a和终点b",{"_index":1276,"t":{"1234":{"position":[[723,25]]}}}],["b+树、hash",{"_index":1140,"t":{"1116":{"position":[[189,73]]}}}],["back",{"_index":743,"t":{"1002":{"position":[[3930,4]]},"1298":{"position":[[522,6]]}}}],["backend",{"_index":1340,"t":{"1298":{"position":[[662,7]]},"1300":{"position":[[85,7]]}}}],["balanc",{"_index":8,"t":{"931":{"position":[[199,10]]},"1056":{"position":[[231,30],[490,30]]}}}],["bar",{"_index":521,"t":{"1000":{"position":[[73,3],[601,3]]}}}],["base",{"_index":790,"t":{"1002":{"position":[[5301,5]]},"1004":{"position":[[1088,5]]},"1022":{"position":[[639,5],[714,5]]}}}],["base64，md5，hash",{"_index":1216,"t":{"1124":{"position":[[218,15]]}}}],["basketballplay",{"_index":1320,"t":{"1293":{"position":[[0,25],[45,16]]}}}],["bastionip",{"_index":24,"t":{"933":{"position":[[71,16]]}}}],["bdb",{"_index":1079,"t":{"1096":{"position":[[650,4]]}}}],["began",{"_index":579,"t":{"1000":{"position":[[1267,5]]}}}],["behavior",{"_index":785,"t":{"1002":{"position":[[5153,10]]}}}],["below",{"_index":611,"t":{"1000":{"position":[[1844,6]]},"1002":{"position":[[2496,5],[2882,5]]}}}],["benchmark",{"_index":260,"t":{"986":{"position":[[3981,12]]},"1110":{"position":[[37,9]]},"1137":{"position":[[125,12]]}}}],["benchmark）是由关联数据基准委员会（ldbc）开发的面向图数据库的基准测试（benchmark）之一，分为交互式查询（interactive）和商业智能（bi",{"_index":1123,"t":{"1110":{"position":[[172,95]]}}}],["benefit",{"_index":350,"t":{"988":{"position":[[2758,8]]}}}],["berkeleydb",{"_index":301,"t":{"988":{"position":[[926,17]]}}}],["better",{"_index":722,"t":{"1002":{"position":[[3429,6]]}}}],["between",{"_index":470,"t":{"996":{"position":[[866,7],[1136,7],[1513,7]]},"998":{"position":[[138,7]]},"1000":{"position":[[166,7],[955,7],[2274,7]]},"1002":{"position":[[74,7],[362,7],[500,7],[820,7],[1120,7],[1509,7],[1648,7],[1897,7],[2189,7],[2408,7],[2664,7],[2795,7],[3112,7],[3281,7],[3732,7],[4223,7],[4295,7],[4860,7],[5034,7]]},"1004":{"position":[[272,7],[1825,7],[2095,7],[2472,7]]}}}],["big",{"_index":345,"t":{"988":{"position":[[2706,3]]},"1002":{"position":[[4430,3]]},"1116":{"position":[[649,3]]}}}],["biggraph",{"_index":1093,"t":{"1102":{"position":[[0,71]]}}}],["bik",{"_index":1154,"t":{"1116":{"position":[[775,4]]}}}],["bison（语法分析工具）生成的词法语法解析器，将语句转换为抽象语法树（ast",{"_index":919,"t":{"1018":{"position":[[32,62]]}}}],["black",{"_index":756,"t":{"1002":{"position":[[4396,5]]}}}],["block",{"_index":20,"t":{"931":{"position":[[548,5]]}}}],["bomb",{"_index":1066,"t":{"1094":{"position":[[986,18]]}}}],["bool、nul",{"_index":931,"t":{"1020":{"position":[[393,9]]}}}],["boss",{"_index":432,"t":{"994":{"position":[[221,4]]},"1002":{"position":[[649,4]]}}}],["bot",{"_index":1323,"t":{"1296":{"position":[[66,3]]},"1298":{"position":[[787,6]]},"1300":{"position":[[148,3],[164,3],[170,3],[251,3],[275,3]]}}}],["bot/act",{"_index":1343,"t":{"1298":{"position":[[1055,13]]}}}],["bot/classifi",{"_index":1341,"t":{"1298":{"position":[[867,17]]}}}],["both",{"_index":838,"t":{"1004":{"position":[[1343,4]]}}}],["brain",{"_index":817,"t":{"1004":{"position":[[423,7]]}}}],["branch",{"_index":562,"t":{"1000":{"position":[[885,6]]}}}],["bridg",{"_index":585,"t":{"1000":{"position":[[1329,7],[1640,8],[1731,6],[1827,7],[2076,7],[2311,7],[2411,7],[2535,7],[2889,7],[2945,8],[3025,7]]}}}],["browser",{"_index":1356,"t":{"1300":{"position":[[437,7]]}}}],["bryant",{"_index":1247,"t":{"1177":{"position":[[210,7]]},"1183":{"position":[[124,6]]}}}],["bryant）和湖人队（lak",{"_index":1261,"t":{"1191":{"position":[[128,20]]}}}],["bsp",{"_index":1098,"t":{"1102":{"position":[[480,44]]}}}],["busi",{"_index":651,"t":{"1002":{"position":[[681,8],[762,9],[843,9],[5430,10]]},"1004":{"position":[[462,8]]}}}],["b的两条insert语句，对tag",{"_index":1200,"t":{"1120":{"position":[[410,17]]}}}],["c",{"_index":1040,"t":{"1083":{"position":[[75,2],[89,2],[106,2],[115,2]]},"1085":{"position":[[105,2],[114,3],[319,2],[333,3],[419,2],[428,2]]},"1087":{"position":[[81,2]]},"1110":{"position":[[272,2]]},"1116":{"position":[[783,2]]},"1137":{"position":[[12,3]]},"1251":{"position":[[173,1]]},"1255":{"position":[[313,2],[331,2],[381,2],[390,2],[409,1]]}}}],["ca",{"_index":1028,"t":{"1071":{"position":[[118,3],[163,3]]}}}],["cach",{"_index":1033,"t":{"1077":{"position":[[98,5]]}}}],["calculus）的数学方法论证了这些数据集能够完成与导航数据库管理系统相同的任务。唯一的要求是，关系型数据模型需要一种合适的查询语言，以保证数据库的一致性要求。这就为后来声明型的结构化查询语言（sql）提供了灵感来源。ibm",{"_index":1069,"t":{"1094":{"position":[[1163,113]]}}}],["call",{"_index":525,"t":{"1000":{"position":[[121,4],[351,6],[748,6],[1012,7],[1059,7],[1190,5],[2683,6]]},"1002":{"position":[[183,6],[332,6],[410,6],[2853,4],[3093,4],[3263,4]]},"1271":{"position":[[15,29]]},"1300":{"position":[[142,5]]}}}],["call表中的time和continue_time就是边类型cal",{"_index":1315,"t":{"1271":{"position":[[94,51]]}}}],["camp",{"_index":679,"t":{"1002":{"position":[[1584,6]]}}}],["capac",{"_index":48,"t":{"935":{"position":[[516,10]]}}}],["capit",{"_index":667,"t":{"1002":{"position":[[1208,15]]}}}],["card",{"_index":776,"t":{"1002":{"position":[[4933,4]]}}}],["case",{"_index":353,"t":{"988":{"position":[[2782,4]]},"1094":{"position":[[552,4]]}}}],["cassandra",{"_index":273,"t":{"988":{"position":[[77,9],[893,10]]}}}],["cassarndar上(这些当时都已经是相对成熟的分布式存储方案)，gremlin",{"_index":302,"t":{"988":{"position":[[1024,41]]}}}],["caus",{"_index":694,"t":{"1002":{"position":[[2076,5]]}}}],["caution",{"_index":1226,"t":{"1128":{"position":[[306,7]]}}}],["cbo（cost",{"_index":952,"t":{"1022":{"position":[[705,8]]}}}],["center、aw",{"_index":62,"t":{"947":{"position":[[72,10]]}}}],["central",{"_index":828,"t":{"1004":{"position":[[877,7]]}}}],["centuri",{"_index":582,"t":{"1000":{"position":[[1291,7]]}}}],["certain",{"_index":840,"t":{"1004":{"position":[[1353,7]]}}}],["certif",{"_index":64,"t":{"947":{"position":[[96,13]]}}}],["chain",{"_index":863,"t":{"1004":{"position":[[3539,6]]}}}],["chang",{"_index":541,"t":{"1000":{"position":[[453,7]]},"1002":{"position":[[3600,7]]},"1004":{"position":[[937,6],[1014,7]]}}}],["charact",{"_index":673,"t":{"1002":{"position":[[1376,9],[1464,11],[1521,11],[1660,11]]},"1004":{"position":[[737,10],[752,9]]}}}],["character'",{"_index":678,"t":{"1002":{"position":[[1559,11]]}}}],["characterist",{"_index":755,"t":{"1002":{"position":[[4366,14]]},"1004":{"position":[[620,14]]}}}],["chart",{"_index":522,"t":{"1000":{"position":[[77,6],[92,7],[365,6],[433,5],[547,7],[593,7],[605,7]]}}}],["chosen",{"_index":627,"t":{"1000":{"position":[[2472,6]]}}}],["chrome",{"_index":1325,"t":{"1296":{"position":[[79,6]]}}}],["circuit",{"_index":1053,"t":{"1085":{"position":[[337,7],[345,7]]},"1255":{"position":[[341,34]]}}}],["citi",{"_index":588,"t":{"1000":{"position":[[1383,4],[1594,4],[1790,5],[2045,4],[2099,4]]}}}],["cl",{"_index":1134,"t":{"1114":{"position":[[11,34]]}}}],["class",{"_index":1031,"t":{"1075":{"position":[[232,5]]}}}],["classifi",{"_index":1350,"t":{"1300":{"position":[[291,10]]}}}],["client",{"_index":1233,"t":{"1141":{"position":[[79,8]]}}}],["close",{"_index":778,"t":{"1002":{"position":[[5020,5]]}}}],["cloud",{"_index":5,"t":{"931":{"position":[[152,9]]},"941":{"position":[[12,5]]},"945":{"position":[[17,5]]},"959":{"position":[[12,8],[21,12],[147,5],[187,5]]},"961":{"position":[[0,5]]},"965":{"position":[[0,11],[64,10],[161,10]]},"967":{"position":[[24,6],[43,5]]},"1116":{"position":[[1534,5]]}}}],["cloud.aliyunreleas",{"_index":74,"t":{"961":{"position":[[30,24]]}}}],["cloud.awsreleas",{"_index":56,"t":{"943":{"position":[[27,21]]}}}],["cloudform",{"_index":1,"t":{"931":{"position":[[3,14]]},"935":{"position":[[464,14]]},"937":{"position":[[44,14]]},"957":{"position":[[4,14]]}}}],["cocoon",{"_index":220,"t":{"986":{"position":[[1702,6]]}}}],["codasylddia",{"_index":155,"t":{"986":{"position":[[41,19]]}}}],["codd",{"_index":1059,"t":{"1094":{"position":[[191,6],[1059,6]]}}}],["codd'",{"_index":1071,"t":{"1094":{"position":[[1476,9]]}}}],["code",{"_index":665,"t":{"1002":{"position":[[1181,5],[3053,4],[3120,5],[3186,5],[3333,4]]}}}],["coeffici",{"_index":670,"t":{"1002":{"position":[[1290,11]]}}}],["collect(e.tmp",{"_index":1300,"t":{"1265":{"position":[[942,15]]}}}],["column",{"_index":1075,"t":{"1096":{"position":[[238,11]]}}}],["combin",{"_index":787,"t":{"1002":{"position":[[5182,11]]}}}],["come",{"_index":628,"t":{"1000":{"position":[[2482,4]]}}}],["comment",{"_index":469,"t":{"996":{"position":[[839,7],[1030,9]]},"1004":{"position":[[1798,7],[1989,9]]}}}],["commerc",{"_index":878,"t":{"1004":{"position":[[3850,9]]}}}],["commit",{"_index":717,"t":{"1002":{"position":[[3338,7]]}}}],["common",{"_index":639,"t":{"1002":{"position":[[114,6]]}}}],["commun",{"_index":332,"t":{"988":{"position":[[2245,9]]},"1004":{"position":[[692,12]]},"1116":{"position":[[663,9]]}}}],["compani",{"_index":662,"t":{"1002":{"position":[[1079,7],[1135,10],[1742,7],[3813,9],[4434,9],[5380,9],[5576,9]]}}}],["compat",{"_index":90,"t":{"972":{"position":[[207,13]]},"974":{"position":[[392,13]]}}}],["complet",{"_index":830,"t":{"1004":{"position":[[926,10]]}}}],["complianc",{"_index":857,"t":{"1004":{"position":[[3453,11]]}}}],["compon",{"_index":644,"t":{"1002":{"position":[[268,11]]}}}],["comput",{"_index":397,"t":{"988":{"position":[[3558,9]]}}}],["concept",{"_index":560,"t":{"1000":{"position":[[830,8]]},"1276":{"position":[[67,7]]}}}],["condit",{"_index":841,"t":{"1004":{"position":[[1361,11]]}}}],["confer",{"_index":1161,"t":{"1116":{"position":[[921,10]]}}}],["configur",{"_index":41,"t":{"935":{"position":[[332,9]]}}}],["connect",{"_index":527,"t":{"1000":{"position":[[154,11],[1079,7],[1621,9],[2084,10],[2115,10],[2319,10],[2380,9],[2505,9]]},"1006":{"position":[[654,11]]}}}],["consensu",{"_index":978,"t":{"1051":{"position":[[395,9]]}}}],["consist",{"_index":567,"t":{"1000":{"position":[[981,8]]},"1002":{"position":[[242,8]]}}}],["consol",{"_index":32,"t":{"935":{"position":[[79,8]]},"951":{"position":[[22,7]]},"963":{"position":[[178,7]]},"1293":{"position":[[82,12]]},"1296":{"position":[[143,7]]}}}],["console、nebula",{"_index":1238,"t":{"1145":{"position":[[50,14]]}}}],["consum",{"_index":797,"t":{"1002":{"position":[[5459,9]]}}}],["contact",{"_index":774,"t":{"1002":{"position":[[4852,7],[5026,7]]}}}],["context",{"_index":957,"t":{"1026":{"position":[[34,7]]}}}],["control",{"_index":859,"t":{"1004":{"position":[[3479,8]]}}}],["convers",{"_index":553,"t":{"1000":{"position":[[665,13]]}}}],["core",{"_index":264,"t":{"986":{"position":[[4036,4],[4160,4]]}}}],["corona",{"_index":910,"t":{"1006":{"position":[[933,6]]}}}],["coronaviru",{"_index":770,"t":{"1002":{"position":[[4772,11]]}}}],["correl",{"_index":663,"t":{"1002":{"position":[[1108,11],[1278,11]]}}}],["correspond",{"_index":686,"t":{"1002":{"position":[[1798,13]]},"1004":{"position":[[1221,13],[3112,14]]}}}],["cosmo",{"_index":337,"t":{"988":{"position":[[2355,6]]}}}],["council",{"_index":261,"t":{"986":{"position":[[3994,8]]}}}],["council）是由oracle、intel等软硬件巨头和主流图数据库厂商neo4j和tigergraph",{"_index":1121,"t":{"1110":{"position":[[47,96]]}}}],["count",{"_index":1092,"t":{"1100":{"position":[[291,79]]}}}],["count(distinct",{"_index":485,"t":{"996":{"position":[[1281,14],[1352,14],[1969,14],[2006,14]]},"1004":{"position":[[2240,14],[2311,14],[2969,14],[3006,14]]}}}],["cov02",{"_index":445,"t":{"994":{"position":[[1390,105]]},"1002":{"position":[[4803,6]]}}}],["covid",{"_index":772,"t":{"1002":{"position":[[4792,6]]}}}],["cpu",{"_index":1137,"t":{"1116":{"position":[[100,20]]}}}],["creat",{"_index":36,"t":{"935":{"position":[[196,6],[555,6]]},"1064":{"position":[[163,6],[626,6]]},"1234":{"position":[[207,6]]}}}],["create_complet",{"_index":51,"t":{"935":{"position":[[613,15]]}}}],["crime",{"_index":765,"t":{"1002":{"position":[[4561,5]]}}}],["cross",{"_index":596,"t":{"1000":{"position":[[1448,7],[1720,5]]}}}],["cruz",{"_index":386,"t":{"988":{"position":[[3432,5]]}}}],["cryptocurr",{"_index":750,"t":{"1002":{"position":[[4068,17]]}}}],["ctrip",{"_index":762,"t":{"1002":{"position":[[4517,5]]}}}],["curv",{"_index":572,"t":{"1000":{"position":[[1052,6]]}}}],["custom",{"_index":884,"t":{"1004":{"position":[[3974,9]]}}}],["cycl",{"_index":1051,"t":{"1085":{"position":[[239,5],[245,5]]},"1255":{"position":[[279,28]]}}}],["cycle和circuit",{"_index":1050,"t":{"1085":{"position":[[188,50]]}}}],["cypher",{"_index":196,"t":{"986":{"position":[[1204,17],[1241,6],[1267,15],[1310,6],[2370,6],[2895,6],[3236,31],[3270,6],[3370,27],[3507,6],[3601,8],[3742,10],[3855,6],[3903,6],[4084,6]]},"996":{"position":[[1665,6],[1682,6]]},"1004":{"position":[[2641,6],[2682,6]]},"1108":{"position":[[498,6]]}}}],["cytoscapecytoscap",{"_index":1117,"t":{"1108":{"position":[[397,19]]}}}],["czajkowski",{"_index":1158,"t":{"1116":{"position":[[822,11]]}}}],["c、a",{"_index":1043,"t":{"1083":{"position":[[98,4]]}}}],["c、d、e",{"_index":1039,"t":{"1083":{"position":[[43,5]]}}}],["c指向b，b指向a，这样的图称为有向图；右边图中每条边都没有方向，则称为无向图，a和b",{"_index":1263,"t":{"1193":{"position":[[234,92]]}}}],["d",{"_index":1041,"t":{"1083":{"position":[[78,2],[92,2],[109,2],[118,3]]},"1085":{"position":[[108,2],[327,2],[422,2]]},"1087":{"position":[[84,2]]},"1253":{"position":[[89,1]]},"1255":{"position":[[334,2],[384,2]]}}}],["daemon",{"_index":958,"t":{"1026":{"position":[[58,7]]}}}],["daili",{"_index":552,"t":{"1000":{"position":[[659,5]]}}}],["dangl",{"_index":1264,"t":{"1197":{"position":[[0,12]]},"1230":{"position":[[0,15]]}}}],["dashboard、nebula",{"_index":75,"t":{"963":{"position":[[74,16]]}}}],["data",{"_index":139,"t":{"981":{"position":[[66,28]]},"986":{"position":[[3976,4]]},"988":{"position":[[2710,4],[2853,4],[3361,4],[3618,5]]},"1000":{"position":[[186,4],[448,4]]},"1002":{"position":[[1779,4],[1812,4],[1928,4],[4349,4]]},"1004":{"position":[[120,4],[201,4],[284,5],[642,4],[793,4],[3339,4]]},"1006":{"position":[[36,4],[649,4]]},"1110":{"position":[[32,4]]},"1116":{"position":[[949,4]]},"1300":{"position":[[375,4]]}}}],["databas",{"_index":359,"t":{"988":{"position":[[2943,8],[3041,8],[3179,8],[3304,8]]},"998":{"position":[[33,9],[164,9],[201,10]]},"1004":{"position":[[20,9],[50,9],[140,10],[310,9],[559,8],[3268,9],[4013,9]]},"1006":{"position":[[532,8],[640,8],[967,10],[1026,8]]},"1096":{"position":[[298,10]]},"1298":{"position":[[505,8],[1199,8]]}}}],["datanod",{"_index":1034,"t":{"1079":{"position":[[119,8]]}}}],["datastax",{"_index":306,"t":{"988":{"position":[[1198,8],[1235,9]]}}}],["db",{"_index":135,"t":{"979":{"position":[[0,16]]},"981":{"position":[[395,2]]},"988":{"position":[[4055,4]]}}}],["dba",{"_index":1077,"t":{"1096":{"position":[[582,3]]}}}],["dbcosmo",{"_index":338,"t":{"988":{"position":[[2362,8]]}}}],["debug",{"_index":1109,"t":{"1106":{"position":[[255,5]]}}}],["defens",{"_index":874,"t":{"1004":{"position":[[3810,8]]}}}],["degre",{"_index":119,"t":{"974":{"position":[[300,6]]},"1000":{"position":[[2699,7],[2796,7],[2834,8]]}}}],["dehnert",{"_index":1155,"t":{"1116":{"position":[[786,8]]}}}],["delet",{"_index":829,"t":{"1004":{"position":[[898,8]]},"1122":{"position":[[183,19]]},"1232":{"position":[[87,14],[193,10]]}}}],["depart",{"_index":782,"t":{"1002":{"position":[[5094,11]]}}}],["depend",{"_index":542,"t":{"1000":{"position":[[471,10]]}}}],["desc",{"_index":492,"t":{"996":{"position":[[1620,5],[2066,5]]},"1004":{"position":[[2579,5],[3066,5]]}}}],["describ",{"_index":511,"t":{"998":{"position":[[113,8]]},"1004":{"position":[[92,8],[160,9],[505,8]]}}}],["design",{"_index":834,"t":{"1004":{"position":[[1079,8],[2648,8],[3208,8]]}}}],["detail",{"_index":39,"t":{"935":{"position":[[241,7]]}}}],["detect",{"_index":855,"t":{"1004":{"position":[[3423,10]]}}}],["develop",{"_index":510,"t":{"998":{"position":[[91,12]]},"1002":{"position":[[3058,12]]}}}],["devic",{"_index":751,"t":{"1002":{"position":[[4115,7],[4161,8],[4257,8],[4310,7]]}}}],["dgraph",{"_index":321,"t":{"988":{"position":[[1807,7],[2186,6],[2203,6],[2238,6]]}}}],["diagram",{"_index":538,"t":{"1000":{"position":[[334,7],[634,7],[737,7],[782,7],[2162,7]]}}}],["dialog",{"_index":1337,"t":{"1298":{"position":[[465,6]]}}}],["diego",{"_index":1029,"t":{"1075":{"position":[[92,20]]}}}],["differ",{"_index":512,"t":{"998":{"position":[[126,11]]},"1000":{"position":[[820,9],[2448,9]]}}}],["digitech360",{"_index":758,"t":{"1002":{"position":[[4456,12]]}}}],["dimens",{"_index":766,"t":{"1002":{"position":[[4613,9]]}}}],["direct",{"_index":645,"t":{"1002":{"position":[[450,8]]}}}],["director",{"_index":659,"t":{"1002":{"position":[[1029,8]]}}}],["directori",{"_index":1235,"t":{"1143":{"position":[[43,9]]}}}],["discov",{"_index":706,"t":{"1002":{"position":[[2526,8],[2916,8],[3488,8],[3879,8]]}}}],["discoveri",{"_index":749,"t":{"1002":{"position":[[4043,9]]}}}],["discuss",{"_index":558,"t":{"1000":{"position":[[793,7]]},"1006":{"position":[[20,7]]}}}],["diseas",{"_index":771,"t":{"1002":{"position":[[4784,7]]}}}],["display",{"_index":826,"t":{"1004":{"position":[[798,9]]}}}],["distribut",{"_index":513,"t":{"998":{"position":[[146,11]]}}}],["divid",{"_index":597,"t":{"1000":{"position":[[1480,7],[1582,7]]}}}],["doc",{"_index":1103,"t":{"1104":{"position":[[287,14]]}}}],["docid，来将每个记录或者数据单元(key",{"_index":1102,"t":{"1104":{"position":[[257,22]]}}}],["document",{"_index":697,"t":{"1002":{"position":[[2151,8]]},"1096":{"position":[[265,13]]}}}],["dont",{"_index":888,"t":{"1006":{"position":[[112,4],[195,4]]}}}],["dot",{"_index":569,"t":{"1000":{"position":[[1007,4],[1093,5],[2198,4],[2286,4]]}}}],["down.`，这是一个全局扫描，需要用`limit",{"_index":1229,"t":{"1128":{"position":[[426,39]]}}}],["draw",{"_index":250,"t":{"986":{"position":[[3437,10],[3463,9]]}}}],["drive",{"_index":1192,"t":{"1116":{"position":[[1646,6]]}}}],["dsl",{"_index":242,"t":{"986":{"position":[[2879,15]]}}}],["dst(edg",{"_index":924,"t":{"1018":{"position":[[165,14]]},"1020":{"position":[[231,9],[496,10],[641,10],[679,10],[747,9]]}}}],["dst(edge)，valid",{"_index":930,"t":{"1020":{"position":[[281,19],[796,19]]}}}],["dst(edge)，校验ov",{"_index":933,"t":{"1020":{"position":[[534,26]]}}}],["dstvertex",{"_index":996,"t":{"1062":{"position":[[165,23],[441,9],[506,9],[571,9],[636,9]]}}}],["dstvertex，形成路径(srcvertex",{"_index":995,"t":{"1062":{"position":[[131,25]]}}}],["due",{"_index":886,"t":{"1006":{"position":[[47,3]]}}}],["duncan",{"_index":1255,"t":{"1183":{"position":[[138,6]]}}}],["dutor",{"_index":1280,"t":{"1251":{"position":[[123,5],[149,5],[180,5]]},"1255":{"position":[[3,5],[262,5]]},"1257":{"position":[[3,5]]}}}],["e",{"_index":877,"t":{"1004":{"position":[[3848,1]]},"1083":{"position":[[95,2],[112,2]]},"1085":{"position":[[111,2],[330,2],[425,2]]},"1087":{"position":[[87,3]]},"1234":{"position":[[673,1],[719,3]]},"1255":{"position":[[387,2]]}}}],["e.g",{"_index":820,"t":{"1004":{"position":[[568,6]]}}}],["e1",{"_index":1271,"t":{"1234":{"position":[[233,2],[272,2],[354,2],[485,2],[558,2]]}}}],["e:e1",{"_index":1275,"t":{"1234":{"position":[[656,9]]}}}],["e:temp",{"_index":1299,"t":{"1265":{"position":[[922,8]]}}}],["e]→，不需要起始点a和终点b",{"_index":1274,"t":{"1234":{"position":[[605,17]]}}}],["each",{"_index":603,"t":{"1000":{"position":[[1616,4],[1726,4]]},"1002":{"position":[[2319,4],[2706,4],[3209,4],[3248,4]]}}}],["earli",{"_index":580,"t":{"1000":{"position":[[1280,5]]}}}],["easi",{"_index":622,"t":{"1000":{"position":[[2354,4]]}}}],["easier",{"_index":821,"t":{"1004":{"position":[[601,6]]}}}],["easili",{"_index":624,"t":{"1000":{"position":[[2426,6]]},"1002":{"position":[[2011,6],[2089,6],[2449,6],[2841,6],[3359,6],[3851,6]]}}}],["east",{"_index":34,"t":{"935":{"position":[[186,4]]},"953":{"position":[[11,4]]}}}],["ebs。aw",{"_index":58,"t":{"947":{"position":[[31,7]]}}}],["ebs（elast",{"_index":19,"t":{"931":{"position":[[536,11]]}}}],["ec2",{"_index":52,"t":{"937":{"position":[[22,3]]},"951":{"position":[[161,3],[177,3],[208,3],[234,3],[259,3],[305,3]]},"955":{"position":[[13,3]]}}}],["ec2、vpc",{"_index":57,"t":{"947":{"position":[[21,7]]}}}],["edg",{"_index":92,"t":{"972":{"position":[[260,7],[395,4],[463,4],[656,8],[671,4],[757,4]]},"974":{"position":[[201,4],[283,4]]},"994":{"position":[[108,56]]},"1000":{"position":[[1067,6],[2109,5],[2651,5]]},"1002":{"position":[[417,6],[437,5],[559,6],[780,4],[959,5],[1094,4],[1241,4],[1476,5],[1601,4],[2364,4],[2751,4],[3253,4],[3704,4],[3750,4],[4189,5],[4838,5],[4958,4]]},"1004":{"position":[[917,4]]},"1020":{"position":[[99,4],[561,4],[574,4]]},"1041":{"position":[[57,4]]},"1056":{"position":[[609,4]]},"1128":{"position":[[359,5]]},"1181":{"position":[[14,25],[108,4],[132,4]]},"1183":{"position":[[50,4],[148,8]]},"1185":{"position":[[75,4],[247,25]]},"1197":{"position":[[13,44]]},"1230":{"position":[[16,27]]},"1232":{"position":[[62,24],[126,39]]},"1234":{"position":[[184,22],[214,4],[267,4],[567,4]]},"1269":{"position":[[1025,4]]},"1271":{"position":[[45,4]]}}}],["edgar",{"_index":1067,"t":{"1094":{"position":[[1036,16]]}}}],["edge.md",{"_index":131,"t":{"974":{"position":[[767,9]]}}}],["edge.md)、[delet",{"_index":130,"t":{"974":{"position":[[700,16]]}}}],["edge](../3.ngql",{"_index":128,"t":{"974":{"position":[[650,15],[717,15]]}}}],["edgea",{"_index":994,"t":{"1062":{"position":[[119,5],[157,7],[286,5],[540,5]]}}}],["edgea_in",{"_index":1004,"t":{"1062":{"position":[[557,8],[791,8],[871,12],[953,8]]}}}],["edgea_out",{"_index":1000,"t":{"1062":{"position":[[303,9],[758,9],[779,9],[941,9]]}}}],["edgea。edgea_out",{"_index":1007,"t":{"1062":{"position":[[833,15]]}}}],["edge）组成。“图（graph",{"_index":426,"t":{"992":{"position":[[431,31]]}}}],["effici",{"_index":712,"t":{"1002":{"position":[[3039,10],[3146,10]]},"1004":{"position":[[3156,9]]}}}],["eid",{"_index":96,"t":{"972":{"position":[[380,4]]}}}],["eifrém",{"_index":222,"t":{"986":{"position":[[1779,6]]}}}],["elasticsearch",{"_index":300,"t":{"988":{"position":[[911,14]]}}}],["emil",{"_index":221,"t":{"986":{"position":[[1774,4]]}}}],["empti",{"_index":932,"t":{"1020":{"position":[[406,6]]}}}],["enabl",{"_index":792,"t":{"1002":{"position":[[5344,7]]}}}],["enable_optim",{"_index":938,"t":{"1022":{"position":[[28,16]]}}}],["end",{"_index":487,"t":{"996":{"position":[[1329,4]]},"1000":{"position":[[2575,7]]},"1004":{"position":[[2288,4]]},"1300":{"position":[[445,3]]}}}],["end_year",{"_index":117,"t":{"974":{"position":[[234,8]]},"1183":{"position":[[180,8]]}}}],["end_year（科比何时结束为湖人队效力的时间）和start_year（科比何时为湖人队效力），对应的值为2016和1996",{"_index":1248,"t":{"1177":{"position":[[218,116]]}}}],["enddat",{"_index":472,"t":{"996":{"position":[[889,8],[1159,8],[1536,8],[1835,8],[1907,8]]},"1004":{"position":[[1848,8],[2118,8],[2495,8],[2835,8],[2907,8]]}}}],["engin",{"_index":146,"t":{"981":{"position":[[398,7]]},"1004":{"position":[[3196,7]]},"1051":{"position":[[462,6]]}}}],["engines.com/en/ranking_categori",{"_index":343,"t":{"988":{"position":[[2614,34]]}}}],["engines.com的统计，图数据库至2013年以来，一直是“增速最快”的数据库类别db",{"_index":136,"t":{"979":{"position":[[17,47]]}}}],["engine（33",{"_index":964,"t":{"1028":{"position":[[58,9]]}}}],["enterpris",{"_index":307,"t":{"988":{"position":[[1245,10]]}}}],["entir",{"_index":607,"t":{"1000":{"position":[[1765,6]]},"1004":{"position":[[948,6]]}}}],["entiti",{"_index":566,"t":{"1000":{"position":[[963,9]]},"1002":{"position":[[299,7],[512,9]]},"1298":{"position":[[977,8]]}}}],["entrypoint",{"_index":1349,"t":{"1300":{"position":[[257,10]]}}}],["equiti",{"_index":652,"t":{"1002":{"position":[[690,6],[800,6]]}}}],["equivalent/mock",{"_index":1353,"t":{"1300":{"position":[[390,17]]}}}],["especi",{"_index":827,"t":{"1004":{"position":[[856,10],[2657,10]]}}}],["etc",{"_index":549,"t":{"1000":{"position":[[613,4]]},"1002":{"position":[[913,4],[1232,4],[1591,5],[3791,4],[5050,4]]},"1004":{"position":[[3586,4]]}}}],["etl",{"_index":437,"t":{"994":{"position":[[615,3],[630,3]]},"1002":{"position":[[1879,3],[1981,3]]},"1104":{"position":[[1010,96]]},"1106":{"position":[[246,8]]}}}],["etl模块，图数据库系统(graph",{"_index":1094,"t":{"1102":{"position":[[72,18]]}}}],["euler",{"_index":617,"t":{"1000":{"position":[[1961,5]]}}}],["even",{"_index":623,"t":{"1000":{"position":[[2397,4],[2829,4],[2874,4],[3010,4]]}}}],["event",{"_index":49,"t":{"935":{"position":[[580,6]]}}}],["everyth",{"_index":143,"t":{"981":{"position":[[180,12]]}}}],["everywher",{"_index":515,"t":{"1000":{"position":[[11,11]]}}}],["exampl",{"_index":532,"t":{"1000":{"position":[[213,7],[530,8]]},"1002":{"position":[[595,8],[628,8],[1731,8],[3612,8],[4735,7]]},"1004":{"position":[[1140,7],[3322,8]]},"1300":{"position":[[367,7]]}}}],["exce",{"_index":365,"t":{"988":{"position":[[3071,6]]}}}],["excel",{"_index":1063,"t":{"1094":{"position":[[512,5],[570,5],[607,5]]}}}],["excel、wp",{"_index":1061,"t":{"1094":{"position":[[400,9]]}}}],["exchang",{"_index":1239,"t":{"1145":{"position":[[65,8]]}}}],["executor",{"_index":917,"t":{"1016":{"position":[[85,16]]},"1022":{"position":[[97,8]]},"1024":{"position":[[0,8]]},"1026":{"position":[[69,8]]}}}],["exist",{"_index":1270,"t":{"1234":{"position":[[226,6]]}}}],["exists参数），晚写入的insert",{"_index":1198,"t":{"1120":{"position":[[352,28]]}}}],["expero",{"_index":308,"t":{"988":{"position":[[1366,19]]}}}],["expert.d",{"_index":412,"t":{"988":{"position":[[3764,12]]}}}],["explor",{"_index":13,"t":{"931":{"position":[[309,8]]},"933":{"position":[[117,8],[179,8]]},"941":{"position":[[116,8]]},"951":{"position":[[191,8]]},"963":{"position":[[91,24]]},"1002":{"position":[[3858,7],[4031,7]]},"1265":{"position":[[556,26]]},"1287":{"position":[[44,8]]}}}],["explorerportal：nebula",{"_index":26,"t":{"933":{"position":[[95,21]]}}}],["extend",{"_index":640,"t":{"1002":{"position":[[124,6],[163,8]]}}}],["e、a",{"_index":1042,"t":{"1083":{"position":[[81,4]]}}}],["f",{"_index":214,"t":{"986":{"position":[[1518,1]]},"988":{"position":[[3429,2]]},"1255":{"position":[[316,2],[393,2]]},"1293":{"position":[[95,6]]}}}],["fabric",{"_index":1106,"t":{"1104":{"position":[[786,7]]}}}],["fabric)fosdem20",{"_index":278,"t":{"988":{"position":[[464,97]]}}}],["facebook",{"_index":424,"t":{"990":{"position":[[24,141]]}}}],["fact",{"_index":371,"t":{"988":{"position":[[3104,5]]}}}],["factor",{"_index":1129,"t":{"1110":{"position":[[400,6]]}}}],["factors.html",{"_index":372,"t":{"988":{"position":[[3110,13]]}}}],["failur",{"_index":44,"t":{"935":{"position":[[389,7]]},"1002":{"position":[[2595,8],[2952,7]]}}}],["false，plann",{"_index":939,"t":{"1022":{"position":[[49,13]]}}}],["famili",{"_index":1076,"t":{"1096":{"position":[[250,6]]}}}],["featur",{"_index":1319,"t":{"1276":{"position":[[120,8]]}}}],["field",{"_index":868,"t":{"1004":{"position":[[3633,6]]}}}],["fill",{"_index":1352,"t":{"1300":{"position":[[344,7]]}}}],["filter",{"_index":947,"t":{"1022":{"position":[[510,6],[880,6],[924,6],[956,26]]}}}],["filter、filt",{"_index":943,"t":{"1022":{"position":[[255,13]]}}}],["financ",{"_index":763,"t":{"1002":{"position":[[4523,7]]},"1004":{"position":[[3751,8]]}}}],["find",{"_index":613,"t":{"1000":{"position":[[1858,4]]},"1002":{"position":[[2456,4],[2848,4],[4640,4]]}}}],["fixed_str",{"_index":987,"t":{"1056":{"position":[[318,29]]}}}],["fixed_string(<n",{"_index":1310,"t":{"1269":{"position":[[681,34]]}}}],["fixed_string(<n>)和int64",{"_index":1307,"t":{"1269":{"position":[[522,42]]}}}],["fixed_string(<n>)或int64",{"_index":1195,"t":{"1120":{"position":[[4,50]]}}}],["fixed_string(<n>)的n",{"_index":1215,"t":{"1124":{"position":[[135,82]]}}}],["fixed_string(<n>)表示数据类型为定长字符串，长度为n不足时会填充，超出长度会报错。int64",{"_index":1308,"t":{"1269":{"position":[[616,61]]}}}],["fixed_string(n",{"_index":87,"t":{"972":{"position":[[170,16]]}}}],["flask",{"_index":1327,"t":{"1298":{"position":[[11,5],[721,5]]}}}],["flex",{"_index":918,"t":{"1018":{"position":[[18,13]]}}}],["flow",{"_index":737,"t":{"1002":{"position":[[3664,5],[4060,4]]}}}],["fnfresearchfnf",{"_index":148,"t":{"983":{"position":[[29,15]]}}}],["focu",{"_index":818,"t":{"1004":{"position":[[449,5]]}}}],["focus",{"_index":809,"t":{"1004":{"position":[[222,7]]}}}],["foesa",{"_index":1292,"t":{"1265":{"position":[[305,6]]},"1269":{"position":[[95,28],[775,5]]},"1271":{"position":[[9,5]]}}}],["follow",{"_index":118,"t":{"974":{"position":[[293,6]]},"1000":{"position":[[228,9],[1153,9],[2176,7]]},"1002":{"position":[[258,9]]},"1004":{"position":[[1119,9]]},"1032":{"position":[[287,9],[343,8],[377,8],[419,8]]},"1067":{"position":[[170,8],[215,8],[256,8],[474,26],[553,8],[707,12],[760,23]]},"1073":{"position":[[156,8]]}}}],["follower，从而实现强一致性和高可用性。raft",{"_index":1026,"t":{"1069":{"position":[[107,27]]}}}],["food",{"_index":788,"t":{"1002":{"position":[[5281,4]]}}}],["form",{"_index":598,"t":{"1000":{"position":[[1524,6]]},"1002":{"position":[[2047,4]]}}}],["four",{"_index":601,"t":{"1000":{"position":[[1604,4],[1772,4],[2025,4],[2193,4],[2232,4],[2334,4]]}}}],["frank",{"_index":1058,"t":{"1094":{"position":[[185,5],[1053,5]]}}}],["fraud",{"_index":853,"t":{"1004":{"position":[[3405,6]]}}}],["frontend",{"_index":1332,"t":{"1298":{"position":[[400,8]]}}}],["function",{"_index":713,"t":{"1002":{"position":[[3084,8],[3226,8],[3289,9]]}}}],["fund",{"_index":736,"t":{"1002":{"position":[[3659,4],[3916,6]]}}}],["futur",{"_index":380,"t":{"988":{"position":[[3290,6]]},"1116":{"position":[[639,6]]}}}],["g",{"_index":263,"t":{"986":{"position":[[4034,1],[4158,1]]},"1116":{"position":[[741,2],[819,2]]}}}],["g/g",{"_index":156,"t":{"986":{"position":[[61,4]]}}}],["game",{"_index":604,"t":{"1000":{"position":[[1661,4],[1882,4]]},"1002":{"position":[[1419,4]]},"1004":{"position":[[776,4]]}}}],["gang",{"_index":745,"t":{"1002":{"position":[[3965,4]]}}}],["gartner",{"_index":145,"t":{"981":{"position":[[370,13]]},"988":{"position":[[3273,7]]},"996":{"position":[[2359,7]]},"1114":{"position":[[3,7]]},"1116":{"position":[[1577,9]]}}}],["gartner'",{"_index":882,"t":{"1004":{"position":[[3933,9]]}}}],["gartnergar",{"_index":150,"t":{"983":{"position":[[70,10]]}}}],["gartner早在2013年之前gartner1，就将图数据库作为主要的\"商业智能与分析技术趋势\"。在那个时候，big",{"_index":138,"t":{"981":{"position":[[0,65]]}}}],["gartner预测，到2025年图技术在数据和分析创新中的占比将从2021年的10%上升到80",{"_index":144,"t":{"981":{"position":[[302,67]]}}}],["gb",{"_index":1128,"t":{"1110":{"position":[[390,2],[419,2]]}}}],["geograph",{"_index":767,"t":{"1002":{"position":[[4695,10],[4991,12],[5197,10]]}}}],["gephi",{"_index":897,"t":{"1006":{"position":[[396,5]]}}}],["gephigephi",{"_index":1118,"t":{"1108":{"position":[[434,11]]}}}],["get",{"_index":59,"t":{"947":{"position":[[47,7]]}}}],["getneighbor",{"_index":944,"t":{"1022":{"position":[[272,20],[898,25],[935,11],[983,11]]},"1051":{"position":[[232,46]]}}}],["getprop",{"_index":977,"t":{"1051":{"position":[[312,23]]}}}],["get、put、scan等操作。相关接口存储在kvstore.h和kvengine.h",{"_index":980,"t":{"1051":{"position":[[479,98]]}}}],["github",{"_index":425,"t":{"992":{"position":[[107,6]]},"1000":{"position":[[286,6]]},"1135":{"position":[[112,6]]},"1169":{"position":[[18,6]]}}}],["github.com",{"_index":303,"t":{"988":{"position":[[1148,10]]}}}],["given",{"_index":545,"t":{"1000":{"position":[[519,5]]}}}],["glang",{"_index":157,"t":{"986":{"position":[[66,45],[289,28]]}}}],["gmbh",{"_index":326,"t":{"988":{"position":[[2116,4]]}}}],["go",{"_index":629,"t":{"1000":{"position":[[2491,3]]},"1002":{"position":[[3453,2]]},"1018":{"position":[[95,4]]},"1020":{"position":[[201,2],[248,2],[465,6],[713,6],[765,2]]},"1122":{"position":[[297,2]]},"1128":{"position":[[107,2]]},"1141":{"position":[[34,2]]},"1234":{"position":[[316,5],[322,2],[325,13],[391,2],[406,63]]},"1253":{"position":[[248,2],[269,2]]},"1265":{"position":[[694,2]]}}}],["go`语句采用的是`walk",{"_index":1044,"t":{"1083":{"position":[[131,21]]}}}],["googl",{"_index":271,"t":{"988":{"position":[[18,6],[1386,7]]},"1102":{"position":[[352,112]]}}}],["google等搜索引擎的收录和趋势情况、主要it技术论坛和社交网站上讨论的技术话题、招聘网站的职位变化等。该网站共收录了371种数据库产品，并分为12个类别。这12",{"_index":137,"t":{"979":{"position":[[65,147]]}}}],["govern",{"_index":680,"t":{"1002":{"position":[[1697,10],[2302,11]]},"1004":{"position":[[3786,11]]}}}],["gpml",{"_index":1105,"t":{"1104":{"position":[[477,4]]}}}],["gql",{"_index":177,"t":{"986":{"position":[[741,3],[906,15]]}}}],["gql)承担了类似于sql的作用，是一种用户与图数据库主要的交互方式。但不同于sql",{"_index":174,"t":{"986":{"position":[[615,58]]}}}],["grakn.ai",{"_index":309,"t":{"988":{"position":[[1394,9]]}}}],["graph",{"_index":15,"t":{"931":{"position":[[360,5]]},"971":{"position":[[12,5]]},"972":{"position":[[7,5],[228,5]]},"974":{"position":[[7,5],[367,5],[416,5]]},"981":{"position":[[150,21]]},"986":{"position":[[256,5],[327,14],[1131,9],[4202,5],[4241,5]]},"988":{"position":[[1256,7],[2557,6],[2596,6],[3035,5],[3699,5]]},"992":{"position":[[101,5],[510,41]]},"998":{"position":[[27,5],[158,5]]},"1000":{"position":[[0,6],[45,6],[131,7],[280,5],[573,7],[843,5],[852,5],[869,5],[908,6],[975,5],[1108,5],[1198,6],[1217,5],[1246,7],[1254,5]]},"1002":{"position":[[35,5],[146,5],[172,6],[204,5],[228,5],[616,7],[665,6],[1330,5],[1672,6],[2055,7],[2124,6],[2604,6],[3000,6],[3071,6],[3202,6],[3580,5],[3831,5],[3870,5],[4343,5],[4673,6],[5221,5],[5485,5],[5590,6]]},"1004":{"position":[[103,5],[134,5],[174,5],[304,5],[345,6],[650,7],[848,7],[1025,6],[1055,5],[1097,5],[2672,7],[3096,5],[3255,6],[3262,5],[3367,7],[3649,5],[4007,5]]},"1006":{"position":[[128,5],[211,5],[316,7],[409,7],[469,5],[526,5],[762,7],[811,5],[961,5],[1020,5]]},"1008":{"position":[[7,5],[13,13],[119,5],[142,5]]},"1010":{"position":[[9,5]]},"1012":{"position":[[7,5],[13,16],[49,25],[161,5],[204,5],[333,15],[398,5],[428,5]]},"1014":{"position":[[0,5],[67,5]]},"1016":{"position":[[8,5]]},"1022":{"position":[[441,5],[756,5]]},"1026":{"position":[[7,5]]},"1028":{"position":[[22,5]]},"1032":{"position":[[78,5],[175,5],[542,5]]},"1035":{"position":[[86,5]]},"1039":{"position":[[7,5]]},"1041":{"position":[[7,5],[136,5]]},"1047":{"position":[[7,5]]},"1054":{"position":[[7,5],[105,5],[166,5],[229,5]]},"1056":{"position":[[20,5],[96,5]]},"1058":{"position":[[7,5],[45,5]]},"1060":{"position":[[102,5]]},"1062":{"position":[[7,5],[972,5]]},"1069":{"position":[[167,5],[221,5]]},"1071":{"position":[[7,5],[58,5],[102,5]]},"1075":{"position":[[177,5]]},"1077":{"position":[[43,5]]},"1096":{"position":[[287,10],[1271,5]]},"1116":{"position":[[653,7],[681,5],[867,5],[1078,5]]},"1118":{"position":[[9,5]]},"1122":{"position":[[7,5]]},"1128":{"position":[[15,5]]},"1130":{"position":[[7,5]]},"1132":{"position":[[208,5]]},"1135":{"position":[[7,5],[79,5],[106,5]]},"1137":{"position":[[57,5],[94,5],[119,5]]},"1139":{"position":[[7,5]]},"1141":{"position":[[7,5],[73,5]]},"1143":{"position":[[7,5]]},"1145":{"position":[[7,5],[102,5]]},"1147":{"position":[[7,5]]},"1149":{"position":[[30,5]]},"1151":{"position":[[16,5]]},"1153":{"position":[[33,11],[52,5]]},"1155":{"position":[[7,5],[68,6]]},"1157":{"position":[[76,29]]},"1159":{"position":[[7,5]]},"1161":{"position":[[25,5]]},"1163":{"position":[[21,5]]},"1165":{"position":[[31,5]]},"1212":{"position":[[13,5]]},"1232":{"position":[[183,5]]},"1234":{"position":[[92,5]]},"1269":{"position":[[310,5]]},"1298":{"position":[[499,5],[539,5],[1139,5],[1193,5],[1217,5]]},"1300":{"position":[[232,5]]}}}],["graph.com.cn/posts/detect",{"_index":909,"t":{"1006":{"position":[[907,25]]}}}],["graph.com.cn/posts/gam",{"_index":895,"t":{"1006":{"position":[[339,23]]}}}],["graph.com.cn/posts/graph",{"_index":902,"t":{"1006":{"position":[[615,24]]}}}],["graph.com.cn/posts/kuaish",{"_index":904,"t":{"1006":{"position":[[691,27]]}}}],["graph.com.cn/posts/meituan",{"_index":899,"t":{"1006":{"position":[[499,26],[993,26]]}}}],["graph.com.cn/posts/nebula",{"_index":907,"t":{"1006":{"position":[[785,25]]}}}],["graph.com.cn/posts/pract",{"_index":898,"t":{"1006":{"position":[[432,29]]}}}],["graph.com.cn/posts/stock",{"_index":892,"t":{"1006":{"position":[[253,24]]}}}],["grapha",{"_index":280,"t":{"988":{"position":[[575,6]]}}}],["graphb",{"_index":291,"t":{"988":{"position":[[680,6]]}}}],["graphd",{"_index":14,"t":{"931":{"position":[[336,6],[374,6]]},"951":{"position":[[212,9]]},"1012":{"position":[[87,6]]}}}],["graphd.conf",{"_index":937,"t":{"1022":{"position":[[14,11]]}}}],["graphd.conf中enable_optim",{"_index":940,"t":{"1022":{"position":[[126,28]]}}}],["graphic",{"_index":392,"t":{"988":{"position":[[3473,9]]}}}],["graphoracl",{"_index":341,"t":{"988":{"position":[[2492,11]]}}}],["graphprivateip：graph",{"_index":27,"t":{"933":{"position":[[135,20]]}}}],["graphql",{"_index":334,"t":{"988":{"position":[[2273,7],[2281,8]]}}}],["graphsql",{"_index":325,"t":{"988":{"position":[[2036,8],[2089,8]]}}}],["graph、neo4j",{"_index":1303,"t":{"1269":{"position":[[169,11]]}}}],["graph、neo4j、orientdb",{"_index":1084,"t":{"1096":{"position":[[1453,20]]}}}],["graph，可以提供毫秒级查询。众多数据库中，nebula",{"_index":1231,"t":{"1137":{"position":[[27,29]]}}}],["great",{"_index":507,"t":{"998":{"position":[[53,5]]},"1000":{"position":[[1941,5]]}}}],["greatest",{"_index":869,"t":{"1004":{"position":[[3680,8]]}}}],["gremlin",{"_index":193,"t":{"986":{"position":[[1161,7],[2460,7],[2776,7],[2859,7],[2907,7]]},"988":{"position":[[963,7]]}}}],["gremlingremlin",{"_index":188,"t":{"986":{"position":[[1047,33]]}}}],["gremlin是基于apach",{"_index":233,"t":{"986":{"position":[[2473,16]]},"988":{"position":[[3790,16]]}}}],["groovi",{"_index":240,"t":{"986":{"position":[[2734,12],[2843,15],[2872,6]]}}}],["group",{"_index":401,"t":{"988":{"position":[[3595,5]]},"996":{"position":[[1547,5]]},"1002":{"position":[[4567,6]]},"1004":{"position":[[2506,5],[3989,7]]},"1051":{"position":[[432,5]]},"1069":{"position":[[47,5],[80,13],[182,5],[253,5],[299,5],[344,5]]},"1075":{"position":[[16,5],[48,5],[76,5],[86,5],[154,5]]}}}],["group（ocig",{"_index":255,"t":{"986":{"position":[[3841,13]]}}}],["gsqlgsql",{"_index":269,"t":{"986":{"position":[[4144,9]]}}}],["guide/12.vertex",{"_index":123,"t":{"974":{"position":[[522,15],[595,15]]}}}],["guide/13.edg",{"_index":129,"t":{"974":{"position":[[666,13],[733,13]]}}}],["h",{"_index":1125,"t":{"1110":{"position":[[279,1]]},"1116":{"position":[[757,2]]}}}],["hadoop",{"_index":272,"t":{"988":{"position":[[68,6],[944,6]]},"1102":{"position":[[525,6]]}}}],["handl",{"_index":810,"t":{"1004":{"position":[[233,8]]}}}],["hans/docs/introduction/nebula",{"_index":967,"t":{"1032":{"position":[[512,29]]}}}],["hard",{"_index":1191,"t":{"1116":{"position":[[1641,4]]}}}],["has_creat",{"_index":496,"t":{"996":{"position":[[1712,14]]},"1004":{"position":[[2712,14]]}}}],["hash",{"_index":1009,"t":{"1064":{"position":[[9,4],[398,5]]},"1124":{"position":[[251,4],[288,4]]}}}],["hash(id.data",{"_index":1016,"t":{"1064":{"position":[[410,16]]}}}],["hbase",{"_index":299,"t":{"988":{"position":[[904,6],[1015,5]]},"1079":{"position":[[297,11]]}}}],["hbase、cassandra、hadoopdb",{"_index":1080,"t":{"1096":{"position":[[683,186]]}}}],["hdd",{"_index":1139,"t":{"1116":{"position":[[184,4],[263,3],[344,3],[386,3]]},"1149":{"position":[[58,3]]}}}],["hdf",{"_index":1025,"t":{"1067":{"position":[[842,4]]},"1079":{"position":[[31,4],[106,4],[190,4],[248,4],[285,4],[374,4]]}}}],["hdfs，再访问到文件系统，远程过程调用（rpc",{"_index":1036,"t":{"1079":{"position":[[309,30]]}}}],["head",{"_index":98,"t":{"972":{"position":[[549,7]]}}}],["health",{"_index":780,"t":{"1002":{"position":[[5076,6]]}}}],["healthcar",{"_index":873,"t":{"1004":{"position":[[3798,11]]}}}],["hear",{"_index":516,"t":{"1000":{"position":[[28,7]]}}}],["help",{"_index":720,"t":{"1002":{"position":[[3415,5],[5067,4]]}}}],["here",{"_index":544,"t":{"1000":{"position":[[506,4]]},"1002":{"position":[[2314,4]]},"1300":{"position":[[238,4]]}}}],["high",{"_index":784,"t":{"1002":{"position":[[5126,4]]}}}],["histori",{"_index":165,"t":{"986":{"position":[[245,7]]},"988":{"position":[[3688,7]]}}}],["hive",{"_index":435,"t":{"994":{"position":[[596,4]]},"1002":{"position":[[1909,4]]}}}],["horn",{"_index":1156,"t":{"1116":{"position":[[798,5]]}}}],["hortonwork",{"_index":310,"t":{"988":{"position":[[1404,12]]}}}],["http",{"_index":237,"t":{"986":{"position":[[2645,4]]},"1300":{"position":[[124,4]]}}}],["https://arrows.app",{"_index":1182,"t":{"1116":{"position":[[1418,20]]}}}],["https://arxiv.org/abs/1709.03188",{"_index":913,"t":{"1006":{"position":[[1055,33]]},"1116":{"position":[[1243,33]]}}}],["https://arxiv.org/abs/2012.06171",{"_index":1149,"t":{"1116":{"position":[[707,33]]}}}],["https://aws.amazon.com/cn/neptun",{"_index":422,"t":{"988":{"position":[[4060,35]]}}}],["https://azure.microsoft.com/en",{"_index":420,"t":{"988":{"position":[[4009,30]]}}}],["https://blocksandfiles.com/2021/01/25/wikibon",{"_index":1189,"t":{"1116":{"position":[[1587,45]]}}}],["https://cloudcomput",{"_index":1184,"t":{"1116":{"position":[[1478,22]]}}}],["https://cytoscape.org",{"_index":1180,"t":{"1116":{"position":[[1374,23]]}}}],["https://db",{"_index":342,"t":{"988":{"position":[[2603,10]]}}}],["https://docs.tigergraph.com/dev/gsql",{"_index":415,"t":{"988":{"position":[[3856,36]]}}}],["https://en.wikipedia.org/wiki/graph_isomorph",{"_index":1147,"t":{"1116":{"position":[[586,48]]}}}],["https://gephi.org",{"_index":1181,"t":{"1116":{"position":[[1398,19]]}}}],["https://github.com/janusgraph/janusgraph",{"_index":419,"t":{"988":{"position":[[3967,41]]}}}],["https://github.com/jrtom/jung",{"_index":1177,"t":{"1116":{"position":[[1299,30]]}}}],["https://github.com/ldbc/ldbc_snb_doc",{"_index":1183,"t":{"1116":{"position":[[1439,38]]}}}],["https://github.com/thinkaurelius/titan",{"_index":418,"t":{"988":{"position":[[3927,39]]}}}],["https://graphaware.com/graphaware/2020/02/17/graph",{"_index":1143,"t":{"1116":{"position":[[449,50]]}}}],["https://igraph.org",{"_index":1178,"t":{"1116":{"position":[[1330,20]]}}}],["https://jgrapht.org",{"_index":1176,"t":{"1116":{"position":[[1277,21]]}}}],["https://livebook.manning.com/book/graph",{"_index":1170,"t":{"1116":{"position":[[1097,39]]}}}],["https://medium.freecodecamp.org/i",{"_index":887,"t":{"1006":{"position":[[78,33],[161,33]]}}}],["https://mp.weixin.qq.com/s/k2qinpr5rplw1tehphtf4w",{"_index":908,"t":{"1006":{"position":[[841,50]]}}}],["https://nebula",{"_index":891,"t":{"1006":{"position":[[238,14],[324,14],[417,14],[484,14],[600,14],[676,14],[770,14],[892,14],[978,14]]}}}],["https://neo4j.com/fosdem20",{"_index":417,"t":{"988":{"position":[[3898,28]]}}}],["https://neo4j.com/graphacademy/train",{"_index":1167,"t":{"1116":{"position":[[1009,39]]}}}],["https://networkx.org",{"_index":1179,"t":{"1116":{"position":[[1351,22]]}}}],["https://www.amazon.com/design",{"_index":381,"t":{"988":{"position":[[3328,32]]}}}],["https://www.arangodb.com/learn/graphs/us",{"_index":1174,"t":{"1116":{"position":[[1176,43]]}}}],["https://www.gartner.com/en/newsroom/press",{"_index":376,"t":{"988":{"position":[[3211,41]]}}}],["https://www.gartner.com/smarterwithgartner/gartn",{"_index":355,"t":{"988":{"position":[[2795,50]]}}}],["https://www.globenewswire.com/new",{"_index":361,"t":{"988":{"position":[[2961,34]]}}}],["https://www.marketsandmarkets.com/market",{"_index":373,"t":{"988":{"position":[[3124,40]]}}}],["https://www.oracle.com/database/graph",{"_index":423,"t":{"988":{"position":[[4096,39]]}}}],["https://www.verifiedmarketresearch.com/product/graph",{"_index":358,"t":{"988":{"position":[[2890,52]]}}}],["https://www.yellowfinbi.com/blog/2014/06/yfcommunitynew",{"_index":344,"t":{"988":{"position":[[2649,56]]}}}],["https://zhuanlan.zhihu.com/p/90635957",{"_index":901,"t":{"1006":{"position":[[561,38]]}}}],["huawei",{"_index":801,"t":{"1002":{"position":[[5529,7]]}}}],["human",{"_index":816,"t":{"1004":{"position":[[417,5]]}}}],["i.",{"_index":633,"t":{"1000":{"position":[[2843,5]]}}}],["iam",{"_index":30,"t":{"935":{"position":[[58,3]]},"949":{"position":[[58,3]]},"951":{"position":[[140,3]]}}}],["ibm",{"_index":311,"t":{"988":{"position":[[1417,3]]},"1094":{"position":[[1032,3],[1306,3],[1342,20]]}}}],["id",{"_index":655,"t":{"1002":{"position":[[902,2],[4930,2]]},"1020":{"position":[[244,3],[328,2],[760,2],[775,3],[824,3]]},"1056":{"position":[[273,5],[279,2],[304,2],[363,6],[556,12],[592,12],[605,3]]},"1062":{"position":[[453,4],[706,4]]},"1064":{"position":[[256,2],[672,3],[724,2]]},"1094":{"position":[[335,2]]},"1118":{"position":[[24,2],[47,3]]},"1120":{"position":[[157,2]]},"1122":{"position":[[107,19]]},"1269":{"position":[[273,14],[288,2],[428,2]]}}}],["id(xxx",{"_index":1209,"t":{"1122":{"position":[[213,7]]}}}],["id.data",{"_index":1014,"t":{"1064":{"position":[[362,10]]}}}],["id.siz",{"_index":1012,"t":{"1064":{"position":[[310,10]]}}}],["ident",{"_index":858,"t":{"1004":{"position":[[3465,8]]}}}],["identifi",{"_index":764,"t":{"1002":{"position":[[4535,10],[5117,8]]}}}],["ids等语句，相比前者多了一次内存或硬盘的随机读（lookup",{"_index":1213,"t":{"1122":{"position":[[307,44]]}}}],["id。前一个vertexid",{"_index":989,"t":{"1056":{"position":[[532,23]]}}}],["id）、edgetype（符号为正，代表边方向为出）、rank（0）、vid（dst",{"_index":1002,"t":{"1062":{"position":[[395,45]]}}}],["id）、edgetype（符号为负，代表边方向为入）、rank（0）、vid（src",{"_index":1006,"t":{"1062":{"position":[[648,45]]}}}],["id；后一个vertexid",{"_index":990,"t":{"1056":{"position":[[569,22]]}}}],["iga",{"_index":1101,"t":{"1102":{"position":[[559,3]]},"1116":{"position":[[1049,3],[1059,3]]}}}],["igraphigraph",{"_index":1113,"t":{"1108":{"position":[[308,13]]}}}],["imag",{"_index":428,"t":{"992":{"position":[[499,10]]},"1000":{"position":[[687,5]]}}}],["impact",{"_index":710,"t":{"1002":{"position":[[2992,7]]}}}],["implement",{"_index":691,"t":{"1002":{"position":[[1955,14]]}}}],["implementor",{"_index":254,"t":{"986":{"position":[[3828,12]]}}}],["import",{"_index":825,"t":{"1004":{"position":[[762,10],[994,10]]}}}],["improv",{"_index":711,"t":{"1002":{"position":[[3027,7],[3134,7]]}}}],["includ",{"_index":851,"t":{"1004":{"position":[[3331,7]]}}}],["indic",{"_index":647,"t":{"1002":{"position":[[476,8]]}}}],["industri",{"_index":872,"t":{"1004":{"position":[[3776,9]]}}}],["infer",{"_index":800,"t":{"1002":{"position":[[5518,10]]}}}],["info",{"_index":159,"t":{"986":{"position":[[162,4]]},"1098":{"position":[[135,13]]}}}],["inform",{"_index":730,"t":{"1002":{"position":[[3536,11],[4715,12],[4902,11]]},"1004":{"position":[[3700,11]]}}}],["informix",{"_index":219,"t":{"986":{"position":[[1693,8]]}}}],["infrastructur",{"_index":861,"t":{"1004":{"position":[[3505,14]]}}}],["insert",{"_index":121,"t":{"974":{"position":[[496,7]]},"1051":{"position":[[279,6]]},"1232":{"position":[[37,24]]},"1234":{"position":[[172,11],[260,6]]},"1269":{"position":[[364,39]]}}}],["insert语句（均无if",{"_index":1197,"t":{"1120":{"position":[[331,16]]}}}],["insid",{"_index":733,"t":{"1002":{"position":[[3621,6]]}}}],["insight",{"_index":903,"t":{"1006":{"position":[[666,9]]}}}],["insur",{"_index":881,"t":{"1004":{"position":[[3900,10]]}}}],["int",{"_index":116,"t":{"974":{"position":[[228,5],[243,5],[307,5]]},"1056":{"position":[[286,3]]},"1234":{"position":[[254,5]]}}}],["int64",{"_index":86,"t":{"972":{"position":[[161,8],[425,10]]},"1064":{"position":[[282,6],[502,5],[508,9]]},"1122":{"position":[[25,10]]},"1124":{"position":[[261,5]]},"1265":{"position":[[179,43]]}}}],["int64和fixed_string(<n>)。在cr",{"_index":1205,"t":{"1122":{"position":[[40,35]]}}}],["integr",{"_index":852,"t":{"1004":{"position":[[3344,11]]}}}],["intellig",{"_index":906,"t":{"1006":{"position":[[728,12]]}}}],["intens",{"_index":382,"t":{"988":{"position":[[3366,9]]}}}],["intent",{"_index":1330,"t":{"1298":{"position":[[186,21],[848,6],[969,7],[1040,6]]},"1300":{"position":[[201,7],[322,6]]}}}],["intent，例如“查关联”）与问句涉及的实体（entities，例如“yao",{"_index":1328,"t":{"1298":{"position":[[108,62]]}}}],["interact",{"_index":677,"t":{"1002":{"position":[[1496,12],[1635,12]]}}}],["interbank",{"_index":734,"t":{"1002":{"position":[[3641,9]]}}}],["interest",{"_index":400,"t":{"988":{"position":[[3586,8]]},"1000":{"position":[[1898,10]]},"1002":{"position":[[5324,9]]}}}],["interest）的实时美食推荐mt",{"_index":448,"t":{"994":{"position":[[1539,43]]}}}],["interfac",{"_index":719,"t":{"1002":{"position":[[3376,10]]},"1051":{"position":[[156,9]]}}}],["intern",{"_index":1160,"t":{"1116":{"position":[[907,13]]}}}],["interrel",{"_index":893,"t":{"1006":{"position":[[278,13]]}}}],["intric",{"_index":699,"t":{"1002":{"position":[[2201,9],[2676,9]]}}}],["intuit",{"_index":814,"t":{"1004":{"position":[[374,9],[830,9],[972,11]]}}}],["invest",{"_index":656,"t":{"1002":{"position":[[976,10],[995,10]]}}}],["invoc",{"_index":698,"t":{"1002":{"position":[[2164,10],[2384,10],[2461,10],[2639,10],[2771,10]]}}}],["io",{"_index":1024,"t":{"1067":{"position":[[390,2]]},"1116":{"position":[[305,2],[363,9]]}}}],["ip",{"_index":25,"t":{"933":{"position":[[88,2],[162,2]]},"951":{"position":[[108,2],[298,2]]}}}],["island",{"_index":599,"t":{"1000":{"position":[[1541,7]]}}}],["iso",{"_index":161,"t":{"986":{"position":[[205,3],[722,18],[1338,5],[1418,3],[4112,3]]}}}],["iso/iec",{"_index":206,"t":{"986":{"position":[[1422,16]]}}}],["isomorphism)\"——虽然两个看上去不同的图，但其实是一模一样的subiso",{"_index":1090,"t":{"1100":{"position":[[142,43]]}}}],["itself",{"_index":808,"t":{"1004":{"position":[[206,6],[479,6]]}}}],["j",{"_index":1153,"t":{"1116":{"position":[[772,2],[780,2]]}}}],["janusgraph",{"_index":296,"t":{"988":{"position":[[778,11],[1523,11],[1662,10],[1844,54]]}}}],["janusgraphjanu",{"_index":314,"t":{"988":{"position":[[1473,49]]}}}],["java",{"_index":223,"t":{"986":{"position":[[1865,4],[2543,4],[2925,4]]},"1108":{"position":[[203,4]]}}}],["java、python、c",{"_index":1232,"t":{"1141":{"position":[[16,15]]}}}],["jgrapht",{"_index":894,"t":{"1006":{"position":[[301,7]]}}}],["jgraphtjgrapht",{"_index":1111,"t":{"1108":{"position":[[179,15]]}}}],["job",{"_index":436,"t":{"994":{"position":[[607,3]]},"1002":{"position":[[1951,3]]}}}],["joe",{"_index":1301,"t":{"1269":{"position":[[6,3],[27,7],[442,3],[741,3],[839,3],[931,3]]},"1271":{"position":[[0,3]]}}}],["johan",{"_index":225,"t":{"986":{"position":[[1947,5]]}}}],["join",{"_index":290,"t":{"988":{"position":[[668,4]]},"996":{"position":[[1421,4],[2135,18]]},"1004":{"position":[[2380,4],[3130,4]]},"1094":{"position":[[753,4],[792,4],[902,4],[973,4],[978,7]]}}}],["json",{"_index":1082,"t":{"1096":{"position":[[1123,7],[1144,4],[1165,4]]}}}],["jtc",{"_index":207,"t":{"986":{"position":[[1439,3],[1461,3]]}}}],["jungjung是bsd许可下用java",{"_index":1112,"t":{"1108":{"position":[[236,71]]}}}],["k",{"_index":1087,"t":{"1100":{"position":[[64,1]]}}}],["kaliningrad",{"_index":593,"t":{"1000":{"position":[[1417,13]]}}}],["key",{"_index":105,"t":{"972":{"position":[[709,12]]},"986":{"position":[[1808,30],[2125,3]]},"1022":{"position":[[377,3]]},"1056":{"position":[[37,18],[146,9],[175,3],[434,3]]},"1062":{"position":[[13,24],[346,5],[599,5],[1012,3]]},"1094":{"position":[[305,29]]},"1096":{"position":[[215,8]]},"1104":{"position":[[206,3],[250,3]]},"1234":{"position":[[402,3],[594,3]]}}}],["key指定主键以确定id",{"_index":1304,"t":{"1269":{"position":[[223,20]]}}}],["key）和值（valu",{"_index":1245,"t":{"1177":{"position":[[0,38]]},"1201":{"position":[[0,80]]}}}],["kind",{"_index":551,"t":{"1000":{"position":[[626,4]]}}}],["know",{"_index":635,"t":{"1000":{"position":[[2969,4]]}}}],["knowledg",{"_index":799,"t":{"1002":{"position":[[5508,9],[5638,9]]},"1004":{"position":[[404,9],[3356,10]]},"1298":{"position":[[529,9]]},"1300":{"position":[[222,9]]}}}],["kobe",{"_index":1254,"t":{"1183":{"position":[[119,4]]},"1191":{"position":[[90,37]]}}}],["kuaishoukuaish",{"_index":759,"t":{"1002":{"position":[[4469,17]]}}}],["kv",{"_index":324,"t":{"988":{"position":[[2002,2],[2159,2],[2179,2]]},"1051":{"position":[[222,2],[386,2]]}}}],["kvstore",{"_index":972,"t":{"1049":{"position":[[7,8]]},"1054":{"position":[[21,15],[37,13],[57,8],[199,14]]}}}],["königsberg",{"_index":586,"t":{"1000":{"position":[[1340,11],[1352,10],[1456,10],[1488,10],[1682,10],[2248,11],[2736,10],[3050,11]]}}}],["lab",{"_index":330,"t":{"988":{"position":[[2193,4]]}}}],["label",{"_index":252,"t":{"986":{"position":[[3664,5],[3670,9]]}}}],["laboratori",{"_index":871,"t":{"1004":{"position":[[3760,12]]}}}],["lan",{"_index":1086,"t":{"1098":{"position":[[10,10]]}}}],["landscap",{"_index":1144,"t":{"1116":{"position":[[511,9]]}}}],["languag",{"_index":182,"t":{"986":{"position":[[881,24],[4253,9]]},"988":{"position":[[3489,8],[3711,11]]},"1004":{"position":[[1067,8]]}}}],["language)——也即用户只需要告诉系统“要什么”，而不管“怎么做”；后者通常被称为命令式语言(imp",{"_index":181,"t":{"986":{"position":[[814,60]]}}}],["languages\"tobias2018",{"_index":167,"t":{"986":{"position":[[268,20]]}}}],["language，gql",{"_index":168,"t":{"986":{"position":[[348,13]]}}}],["larg",{"_index":684,"t":{"1002":{"position":[[1773,5],[2234,5],[2986,5]]},"1116":{"position":[[855,5]]}}}],["law",{"_index":1194,"t":{"1116":{"position":[[1661,5]]}}}],["ldap（lightweight",{"_index":1234,"t":{"1143":{"position":[[26,16]]}}}],["ldbc",{"_index":262,"t":{"986":{"position":[[4003,4],[4008,22]]},"996":{"position":[[390,4]]},"1004":{"position":[[1151,5]]},"1110":{"position":[[0,5]]}}}],["ldbcldbc，link",{"_index":1120,"t":{"1110":{"position":[[6,25]]}}}],["leader",{"_index":965,"t":{"1032":{"position":[[273,13],[297,6],[317,6],[360,6],[393,7],[410,6],[449,6],[463,6]]},"1067":{"position":[[138,8],[147,6],[187,6],[412,7],[420,24],[544,8],[620,26],[690,9],[720,6],[748,11]]},"1069":{"position":[[94,12]]},"1073":{"position":[[0,6],[52,18],[71,24],[96,6],[110,6],[123,6],[144,6],[168,6]]},"1079":{"position":[[97,8],[172,6]]}}}],["leader。lead",{"_index":1023,"t":{"1067":{"position":[[240,13]]}}}],["learning/welcome/v",{"_index":1173,"t":{"1116":{"position":[[1153,18]]}}}],["left",{"_index":490,"t":{"996":{"position":[[1416,4]]},"1004":{"position":[[2375,4]]}}}],["leiser",{"_index":1157,"t":{"1116":{"position":[[807,7]]}}}],["lessthan",{"_index":102,"t":{"972":{"position":[[579,11]]}}}],["librari",{"_index":266,"t":{"986":{"position":[[4057,12]]},"1108":{"position":[[208,27],[333,8]]}}}],["licens",{"_index":328,"t":{"988":{"position":[[2142,7],[2224,7],[2255,7]]}}}],["life",{"_index":648,"t":{"1002":{"position":[[574,5],[5358,4]]}}}],["like,serv",{"_index":935,"t":{"1020":{"position":[[624,10]]}}}],["like和serve，该语句会展开为go",{"_index":934,"t":{"1020":{"position":[[587,20]]}}}],["limit",{"_index":493,"t":{"996":{"position":[[1639,5],[2086,5]]},"1004":{"position":[[2598,5],[3086,5]]},"1006":{"position":[[60,12]]},"1128":{"position":[[383,5],[400,5]]},"1234":{"position":[[675,5]]}}}],["lindaak",{"_index":409,"t":{"988":{"position":[[3739,10]]}}}],["lindaaker、ivarsson、pet",{"_index":239,"t":{"986":{"position":[[2676,24]]}}}],["line",{"_index":523,"t":{"1000":{"position":[[87,4],[360,4],[428,4],[542,4],[1043,5],[2268,5]]}}}],["link",{"_index":259,"t":{"986":{"position":[[3967,8]]},"1002":{"position":[[2472,5],[2858,5]]}}}],["linux",{"_index":10,"t":{"931":{"position":[[245,5]]},"988":{"position":[[1282,83],[1815,28]]}}}],["list",{"_index":661,"t":{"1002":{"position":[[1072,6],[1128,6]]},"1265":{"position":[[785,4],[818,4],[871,24],[991,4]]}}}],["listen",{"_index":1359,"t":{"1300":{"position":[[510,9]]}}}],["literatur",{"_index":867,"t":{"1004":{"position":[[3608,10]]}}}],["live",{"_index":724,"t":{"1002":{"position":[[3456,4]]},"1043":{"position":[[22,31]]}}}],["load",{"_index":7,"t":{"931":{"position":[[194,4]]},"1002":{"position":[[3937,4]]}}}],["loan",{"_index":744,"t":{"1002":{"position":[[3954,5],[3960,4]]}}}],["local",{"_index":793,"t":{"1002":{"position":[[5352,5]]}}}],["locat",{"_index":768,"t":{"1002":{"position":[[4706,8],[5004,8],[5208,8]]}}}],["login",{"_index":753,"t":{"1002":{"position":[[4203,5]]}}}],["logist",{"_index":864,"t":{"1004":{"position":[[3550,10]]}}}],["lookup",{"_index":1220,"t":{"1128":{"position":[[171,6]]},"1234":{"position":[[510,20],[531,6],[538,16],[578,6]]}}}],["lookup或者match",{"_index":1207,"t":{"1122":{"position":[[132,32]]}}}],["lsm",{"_index":1202,"t":{"1120":{"position":[[447,8]]}}}],["ltd",{"_index":322,"t":{"988":{"position":[[1958,3]]}}}],["m",{"_index":1151,"t":{"1116":{"position":[[754,2]]}}}],["m_c_replyof",{"_index":467,"t":{"996":{"position":[[806,11]]},"1004":{"position":[[1765,11]]}}}],["m_creationd",{"_index":463,"t":{"996":{"position":[[756,15],[851,14],[1014,15],[1121,14]]},"1004":{"position":[[1715,15],[1810,14],[1973,15],[2080,14]]}}}],["m_creatorid",{"_index":462,"t":{"996":{"position":[[687,11]]},"1004":{"position":[[1646,11]]}}}],["m_messageid",{"_index":460,"t":{"996":{"position":[[657,11],[725,11],[1001,12]]},"1004":{"position":[[1616,11],[1684,11],[1960,12]]}}}],["machin",{"_index":1172,"t":{"1116":{"position":[[1145,7]]}}}],["machineri",{"_index":398,"t":{"988":{"position":[[3568,9]]}}}],["mailto:min.wu@vesoft.com",{"_index":1146,"t":{"1116":{"position":[[532,53]]}}}],["main.j",{"_index":1362,"t":{"1300":{"position":[[565,7]]}}}],["maintainable/dp/1449373321",{"_index":385,"t":{"988":{"position":[[3398,27]]}}}],["malewicz",{"_index":1150,"t":{"1116":{"position":[[744,9]]}}}],["manag",{"_index":402,"t":{"988":{"position":[[3604,10]]},"1002":{"position":[[1827,10],[1851,10],[2032,7]]},"1004":{"position":[[3520,11]]},"1116":{"position":[[935,10]]}}}],["mani",{"_index":518,"t":{"1000":{"position":[[52,4]]},"1002":{"position":[[590,4]]}}}],["map",{"_index":1099,"t":{"1102":{"position":[[532,3]]}}}],["market",{"_index":360,"t":{"988":{"position":[[2952,8],[3050,6],[3188,6],[3313,6]]},"1002":{"position":[[1201,6]]}}}],["marketsandmarketsmam",{"_index":149,"t":{"983":{"position":[[45,21]]}}}],["marko",{"_index":190,"t":{"986":{"position":[[1098,5],[2710,6],[2812,8]]}}}],["master",{"_index":275,"t":{"988":{"position":[[339,32]]}}}],["match",{"_index":283,"t":{"988":{"position":[[601,5],[706,5]]},"996":{"position":[[1689,5]]},"1004":{"position":[[2689,5]]},"1128":{"position":[[226,5],[314,6]]},"1234":{"position":[[623,12],[636,5],[642,10],[701,5]]},"1265":{"position":[[904,5]]},"1298":{"position":[[855,9]]},"1300":{"position":[[329,9]]}}}],["match`、`find",{"_index":1046,"t":{"1085":{"position":[[127,13]]}}}],["matching)：找到一个/所有的子图，满足给定的图模式；这个问题非常接近于\"子图同构映射(subgraph",{"_index":1089,"t":{"1100":{"position":[[86,55]]}}}],["match、findpath",{"_index":1289,"t":{"1255":{"position":[[414,14]]}}}],["match、go、lookup",{"_index":1218,"t":{"1128":{"position":[[21,45]]}}}],["mathemat",{"_index":563,"t":{"1000":{"position":[[895,12]]},"1002":{"position":[[7,12]]}}}],["mathematician",{"_index":616,"t":{"1000":{"position":[[1947,13]]}}}],["max",{"_index":100,"t":{"972":{"position":[[565,6]]}}}],["meet",{"_index":839,"t":{"1004":{"position":[[1348,4]]}}}],["meituan",{"_index":795,"t":{"1002":{"position":[[5395,7],[5557,8]]}}}],["memcpy(static_cast<void*>(&vid",{"_index":1013,"t":{"1064":{"position":[[329,32]]}}}],["mendelzon",{"_index":388,"t":{"988":{"position":[[3444,10]]}}}],["merg",{"_index":133,"t":{"974":{"position":[[795,5]]},"1234":{"position":[[143,5]]}}}],["messag",{"_index":465,"t":{"996":{"position":[[784,7],[1045,7]]},"1004":{"position":[[1743,7],[2004,7]]}}}],["messagecount",{"_index":488,"t":{"996":{"position":[[1337,12],[1389,12],[1607,12],[2031,12],[2053,12]]},"1004":{"position":[[2296,12],[2348,12],[2566,12],[3031,12],[3053,12]]}}}],["meta",{"_index":17,"t":{"931":{"position":[[424,4]]},"1008":{"position":[[27,7]]},"1010":{"position":[[15,8],[82,4],[99,4]]},"1030":{"position":[[5,4]]},"1032":{"position":[[0,4]]},"1035":{"position":[[0,4],[36,4],[41,7]]},"1037":{"position":[[0,4]]},"1039":{"position":[[13,28]]},"1041":{"position":[[71,4]]},"1043":{"position":[[0,4]]},"1045":{"position":[[0,4]]},"1047":{"position":[[27,4],[41,4]]},"1054":{"position":[[266,4]]},"1058":{"position":[[104,4]]}}}],["metad",{"_index":16,"t":{"931":{"position":[[401,5],[437,5]]},"951":{"position":[[238,8]]},"1010":{"position":[[36,5]]},"1032":{"position":[[17,5],[47,5],[106,5],[198,5],[240,5]]}}}],["microservic",{"_index":700,"t":{"1002":{"position":[[2211,13],[2343,12],[2420,14],[2535,12],[2686,13],[2731,12],[2807,14],[2925,12]]}}}],["microsoft",{"_index":335,"t":{"988":{"position":[[2339,9]]}}}],["middl",{"_index":600,"t":{"1000":{"position":[[1556,6]]}}}],["million",{"_index":369,"t":{"988":{"position":[[3088,7]]},"1002":{"position":[[4553,7]]}}}],["min",{"_index":101,"t":{"972":{"position":[[572,6]]}}}],["ming",{"_index":1329,"t":{"1298":{"position":[[171,5]]}}}],["minor",{"_index":833,"t":{"1004":{"position":[[1008,5]]}}}],["misappropri",{"_index":741,"t":{"1002":{"position":[[3896,16]]}}}],["mobil",{"_index":752,"t":{"1002":{"position":[[4154,6],[4250,6],[4303,6]]}}}],["mock",{"_index":959,"t":{"1026":{"position":[[88,4]]}}}],["model",{"_index":249,"t":{"986":{"position":[[3424,8],[3473,7]]},"1002":{"position":[[82,7],[152,6],[210,6],[675,5]]},"1004":{"position":[[125,6]]},"1006":{"position":[[41,5]]}}}],["modern",{"_index":509,"t":{"998":{"position":[[72,6]]}}}],["modul",{"_index":1354,"t":{"1300":{"position":[[408,6]]}}}],["mongodb、couchdb、terrastor",{"_index":1083,"t":{"1096":{"position":[[1170,57]]}}}],["more",{"_index":529,"t":{"1000":{"position":[[181,4]]},"1002":{"position":[[3354,4],[3497,4],[4645,4],[5416,4]]},"1004":{"position":[[358,4],[3151,4]]}}}],["morethan",{"_index":103,"t":{"972":{"position":[[591,37]]}}}],["move:movi",{"_index":294,"t":{"988":{"position":[[712,12]]}}}],["movie.titl",{"_index":286,"t":{"988":{"position":[[628,11],[732,11]]}}}],["movie:movi",{"_index":284,"t":{"988":{"position":[[607,13]]}}}],["mt",{"_index":504,"t":{"996":{"position":[[2160,10]]},"1002":{"position":[[5334,3]]}}}],["much",{"_index":848,"t":{"1004":{"position":[[3146,4]]}}}],["multi",{"_index":979,"t":{"1051":{"position":[[426,5]]},"1069":{"position":[[41,5],[176,5],[293,5]]}}}],["multipl",{"_index":837,"t":{"1004":{"position":[[1288,8]]}}}],["murmurhash2",{"_index":1015,"t":{"1064":{"position":[[386,11]]}}}],["mysql",{"_index":1062,"t":{"1094":{"position":[[493,5],[537,5],[593,5],[622,5]]}}}],["mysql。mysql",{"_index":1056,"t":{"1094":{"position":[[88,11]]}}}],["n",{"_index":208,"t":{"986":{"position":[[1445,1],[1473,1]]},"1116":{"position":[[804,2]]},"1128":{"position":[[321,3],[332,3]]}}}],["n3",{"_index":1293,"t":{"1265":{"position":[[327,69]]}}}],["na",{"_index":974,"t":{"1049":{"position":[[44,3]]}}}],["name",{"_index":40,"t":{"935":{"position":[[261,14]]},"974":{"position":[[143,4],[181,4]]},"1000":{"position":[[1706,6]]},"1002":{"position":[[891,5],[1571,6]]},"1183":{"position":[[110,4]]},"1234":{"position":[[236,5],[275,6]]}}}],["name:\"toni",{"_index":1225,"t":{"1128":{"position":[[242,11]]}}}],["namenod",{"_index":1035,"t":{"1079":{"position":[[133,8]]}}}],["nat",{"_index":9,"t":{"931":{"position":[[234,3]]}}}],["nation",{"_index":411,"t":{"988":{"position":[[3755,8]]}}}],["natur",{"_index":653,"t":{"1002":{"position":[[742,7],[925,7]]}}}],["navig",{"_index":606,"t":{"1000":{"position":[[1752,8]]}}}],["nearbi",{"_index":823,"t":{"1004":{"position":[[685,6]]}}}],["nebula",{"_index":12,"t":{"931":{"position":[[302,6]]},"933":{"position":[[172,6]]},"951":{"position":[[181,9]]},"963":{"position":[[67,6],[171,6]]},"971":{"position":[[5,6]]},"972":{"position":[[0,6],[221,6]]},"974":{"position":[[0,6],[360,6],[409,6]]},"986":{"position":[[4193,8],[4234,6]]},"988":{"position":[[2550,6],[2589,6]]},"992":{"position":[[94,6]]},"1000":{"position":[[273,6]]},"1006":{"position":[[309,6],[402,6],[462,6],[755,6]]},"1008":{"position":[[0,6],[112,6],[135,6]]},"1010":{"position":[[2,6],[29,6]]},"1012":{"position":[[0,6],[80,6],[112,6]]},"1022":{"position":[[7,6],[119,6],[434,6],[749,6]]},"1026":{"position":[[0,6]]},"1028":{"position":[[15,6]]},"1032":{"position":[[10,6],[40,6],[71,6],[99,6],[168,6],[191,6],[233,6]]},"1035":{"position":[[79,6]]},"1039":{"position":[[0,6]]},"1041":{"position":[[0,6],[129,6]]},"1047":{"position":[[0,6],[91,6]]},"1051":{"position":[[13,6],[46,6],[91,6]]},"1054":{"position":[[0,6],[98,6],[152,13],[214,14]]},"1056":{"position":[[0,19],[89,6]]},"1058":{"position":[[0,6],[27,17]]},"1062":{"position":[[0,6],[962,9]]},"1069":{"position":[[152,14],[214,6]]},"1071":{"position":[[0,6],[51,6],[95,6]]},"1075":{"position":[[160,16]]},"1077":{"position":[[36,6]]},"1096":{"position":[[1264,6],[1426,26]]},"1118":{"position":[[2,6]]},"1122":{"position":[[0,6]]},"1128":{"position":[[0,14]]},"1130":{"position":[[0,6]]},"1132":{"position":[[201,6]]},"1135":{"position":[[0,6],[72,6],[99,6]]},"1137":{"position":[[20,6],[63,30],[112,6]]},"1139":{"position":[[0,6]]},"1141":{"position":[[0,6],[66,6]]},"1143":{"position":[[0,6]]},"1145":{"position":[[0,6],[29,6],[92,9]]},"1147":{"position":[[0,6]]},"1149":{"position":[[23,6]]},"1151":{"position":[[9,6]]},"1153":{"position":[[26,6],[45,6]]},"1155":{"position":[[0,6],[61,6]]},"1157":{"position":[[69,6]]},"1159":{"position":[[0,6]]},"1161":{"position":[[18,6]]},"1163":{"position":[[0,20]]},"1165":{"position":[[24,6]]},"1232":{"position":[[169,13]]},"1234":{"position":[[85,6]]},"1265":{"position":[[896,7]]},"1269":{"position":[[303,6]]},"1298":{"position":[[29,6],[218,6],[1210,6]]}}}],["nebula.releas",{"_index":120,"t":{"974":{"position":[[425,14]]}}}],["nebulagraph",{"_index":2,"t":{"931":{"position":[[23,11],[348,11],[412,11],[477,11]]},"933":{"position":[[3,11],[191,11],[223,11]]},"935":{"position":[[14,11],[112,11],[137,11],[629,13]]},"937":{"position":[[0,11],[72,11]]},"939":{"position":[[11,11],[46,11],[115,11],[233,11]]},"941":{"position":[[0,11],[26,11]]},"943":{"position":[[6,11]]},"945":{"position":[[5,11],[51,11]]},"951":{"position":[[62,11]]},"953":{"position":[[65,11]]},"957":{"position":[[42,23],[87,29],[144,28]]},"959":{"position":[[0,11],[34,11],[67,11],[135,11],[175,11]]},"961":{"position":[[12,11]]},"963":{"position":[[26,11]]},"965":{"position":[[47,11],[80,11],[183,11]]},"967":{"position":[[12,11],[31,11]]},"969":{"position":[[0,11],[81,11]]},"1172":{"position":[[31,11]]},"1175":{"position":[[114,32]]},"1177":{"position":[[79,11]]},"1179":{"position":[[2,11]]},"1181":{"position":[[2,11]]},"1185":{"position":[[97,11],[139,11],[178,11],[235,11]]},"1232":{"position":[[2,11]]},"1234":{"position":[[13,11]]},"1236":{"position":[[70,11]]},"1238":{"position":[[12,11]]},"1253":{"position":[[224,11]]},"1263":{"position":[[47,11],[59,31]]},"1265":{"position":[[27,11],[146,11],[537,18],[799,11]]},"1267":{"position":[[12,11]]},"1269":{"position":[[135,11],[570,11]]},"1271":{"position":[[204,11],[329,11]]},"1276":{"position":[[3,11],[26,11],[55,11],[79,11],[108,11]]},"1285":{"position":[[6,11],[39,25],[65,38]]},"1287":{"position":[[10,11],[32,11]]},"1289":{"position":[[18,11]]},"1291":{"position":[[27,11],[99,11],[124,18],[152,17]]},"1293":{"position":[[70,11]]},"1298":{"position":[[50,12],[235,14]]}}}],["need",{"_index":347,"t":{"988":{"position":[[2729,4]]},"1128":{"position":[[365,4]]}}}],["neo4j",{"_index":158,"t":{"986":{"position":[[112,29],[142,5],[933,7],[974,7],[1001,7],[1028,7],[1086,7],[1141,5],[1193,5],[1227,7],[1248,14],[1300,7],[1387,5],[1507,7],[1558,5],[1571,5],[1599,7],[1642,25],[1709,57],[1935,5],[2036,7],[2067,5],[2073,16],[2135,11],[2339,5],[2382,5],[2528,5],[2650,12],[2917,5],[3122,5],[3179,7],[3226,5],[3324,5],[3591,5],[3648,7],[3736,5],[3803,7]]},"988":{"position":[[125,90],[275,9],[329,5],[410,5],[1140,5]]},"996":{"position":[[2154,5]]},"1102":{"position":[[332,5]]},"1104":{"position":[[774,5]]},"1269":{"position":[[248,5],[351,5]]}}}],["neo4j。在最初的几年，neo4j",{"_index":227,"t":{"986":{"position":[[1998,18]]}}}],["neo4j和其创造的图查询语言cyph",{"_index":160,"t":{"986":{"position":[[167,37]]}}}],["neo4j的cyph",{"_index":176,"t":{"986":{"position":[[709,12]]}}}],["neptuneneptun",{"_index":340,"t":{"988":{"position":[[2429,14]]}}}],["network",{"_index":6,"t":{"931":{"position":[[162,31]]},"986":{"position":[[941,27]]},"1002":{"position":[[3630,7],[4091,7],[4179,9],[4327,9],[4388,7]]},"1004":{"position":[[3568,7]]},"1006":{"position":[[828,12]]},"1110":{"position":[[164,7]]}}}],["networkx",{"_index":896,"t":{"1006":{"position":[[387,8]]}}}],["networkxnetworkx",{"_index":1115,"t":{"1108":{"position":[[355,17]]}}}],["neubauer",{"_index":218,"t":{"986":{"position":[[1681,11],[2701,8]]}}}],["new",{"_index":716,"t":{"1002":{"position":[[3329,3]]},"1116":{"position":[[979,3]]}}}],["news.net/news/2019/apr/15/publ",{"_index":1185,"t":{"1116":{"position":[[1501,32]]}}}],["next",{"_index":37,"t":{"935":{"position":[[219,5],[324,5],[435,5]]},"972":{"position":[[528,13]]}}}],["ngql",{"_index":76,"t":{"963":{"position":[[116,4]]},"986":{"position":[[4263,5]]},"1147":{"position":[[22,17],[75,4]]},"1234":{"position":[[32,4],[54,4]]},"1253":{"position":[[241,4]]},"1265":{"position":[[46,4],[67,4]]},"1269":{"position":[[825,4]]},"1298":{"position":[[250,4]]}}}],["nmeetup",{"_index":963,"t":{"1028":{"position":[[35,10]]}}}],["node",{"_index":571,"t":{"1000":{"position":[[1032,6],[2675,4],[2694,4],[2781,5],[2818,5]]},"1002":{"position":[[280,5],[322,5],[370,6],[549,5],[2548,5],[2938,5]]}}}],["nosql",{"_index":235,"t":{"986":{"position":[[2599,12],[2612,14]]},"1096":{"position":[[132,5],[144,25],[198,5],[661,5],[677,5],[879,10],[1241,5],[1291,5],[1312,5],[1420,5]]},"1104":{"position":[[192,5]]}}}],["nosql。nosql",{"_index":1073,"t":{"1096":{"position":[[57,11]]}}}],["note",{"_index":108,"t":{"972":{"position":[[746,4]]},"974":{"position":[[355,4]]},"986":{"position":[[322,4]]},"1032":{"position":[[405,4]]},"1054":{"position":[[322,4]]},"1064":{"position":[[83,4]]},"1067":{"position":[[330,4],[824,4]]},"1083":{"position":[[126,4]]},"1085":{"position":[[122,4]]},"1108":{"position":[[145,4]]}}}],["noth",{"_index":973,"t":{"1049":{"position":[[29,7]]},"1139":{"position":[[23,7]]}}}],["now",{"_index":589,"t":{"1000":{"position":[[1388,4],[2707,3]]}}}],["np",{"_index":1104,"t":{"1104":{"position":[[376,2]]}}}],["null",{"_index":468,"t":{"996":{"position":[[821,4]]},"1004":{"position":[[1780,4]]}}}],["number",{"_index":534,"t":{"1000":{"position":[[263,6],[392,6],[2402,8],[2526,8],[2641,6],[2879,6],[2935,6],[3015,6]]},"1002":{"position":[[905,7],[1625,6]]},"1004":{"position":[[1415,6]]},"1128":{"position":[[389,7],[406,6]]}}}],["numpart",{"_index":1019,"t":{"1064":{"position":[[453,8],[561,8],[602,8]]}}}],["ny",{"_index":1165,"t":{"1116":{"position":[[989,3]]}}}],["o",{"_index":387,"t":{"988":{"position":[[3441,2]]}}}],["o2o",{"_index":446,"t":{"994":{"position":[[1513,3]]},"1002":{"position":[[5248,3]]}}}],["object",{"_index":638,"t":{"1002":{"position":[[90,8],[289,6]]}}}],["obviou",{"_index":740,"t":{"1002":{"position":[[3888,7]]}}}],["odd",{"_index":630,"t":{"1000":{"position":[[2522,3],[2792,3],[2931,3]]}}}],["olap)，基于图引擎的应用系统（bi",{"_index":1096,"t":{"1102":{"position":[[109,27]]}}}],["oltp)，图处理系统(graph",{"_index":1095,"t":{"1102":{"position":[[91,17]]}}}],["on",{"_index":718,"t":{"1002":{"position":[[3346,3]]}}}],["onc",{"_index":605,"t":{"1000":{"position":[[1743,4],[2631,5]]}}}],["ongaro",{"_index":1030,"t":{"1075":{"position":[[113,6]]}}}],["onset",{"_index":777,"t":{"1002":{"position":[[4942,5]]}}}],["op",{"_index":703,"t":{"1002":{"position":[[2441,3],[2834,3]]}}}],["open",{"_index":798,"t":{"1002":{"position":[[5469,4]]}}}],["opencyph",{"_index":132,"t":{"974":{"position":[[781,10]]},"986":{"position":[[1321,11],[3817,10],[3866,32],[4126,11],[4210,10]]},"1147":{"position":[[40,10]]},"1234":{"position":[[129,10]]}}}],["oper",{"_index":701,"t":{"1002":{"position":[[2273,10],[4413,11]]}}}],["oppo",{"_index":803,"t":{"1002":{"position":[[5543,5]]}}}],["oppos",{"_index":731,"t":{"1002":{"position":[[3551,7]]}}}],["optim",{"_index":951,"t":{"1022":{"position":[[645,26],[720,28]]},"1026":{"position":[[96,9]]}}}],["option",{"_index":42,"t":{"935":{"position":[[348,7],[397,7],[416,18],[485,8]]}}}],["oracl",{"_index":256,"t":{"986":{"position":[[3933,8]]},"988":{"position":[[2485,6],[2514,6]]},"1094":{"position":[[1363,7]]},"1108":{"position":[[76,7]]}}}],["order",{"_index":491,"t":{"996":{"position":[[1598,5],[2044,5]]},"1004":{"position":[[2557,5],[3044,5]]}}}],["orientdb",{"_index":318,"t":{"988":{"position":[[1773,9],[1949,8],[1985,8],[2009,8]]}}}],["output",{"_index":23,"t":{"933":{"position":[[40,7]]}}}],["over",{"_index":536,"t":{"1000":{"position":[[310,4],[415,4],[461,4]]},"1002":{"position":[[4546,4]]},"1018":{"position":[[111,4]]},"1020":{"position":[[215,4],[264,4],[483,4],[619,4],[731,4],[779,4]]},"1128":{"position":[[127,4]]},"1234":{"position":[[349,4],[480,4]]},"1265":{"position":[[714,4]]}}}],["overview",{"_index":163,"t":{"986":{"position":[[222,8]]},"988":{"position":[[3665,8]]},"1116":{"position":[[1066,8]]}}}],["over、where和yield",{"_index":926,"t":{"1020":{"position":[[64,16]]}}}],["p",{"_index":389,"t":{"988":{"position":[[3459,2]]},"996":{"position":[[1053,2],[1414,1]]},"1004":{"position":[[2012,2],[2373,1]]}}}],["p.m_c_replyof",{"_index":477,"t":{"996":{"position":[[1083,13]]},"1004":{"position":[[2042,13]]}}}],["p.p_firstnam",{"_index":481,"t":{"996":{"position":[[1207,13],[1570,14]]},"1004":{"position":[[2166,13],[2529,14]]}}}],["p.p_lastnam",{"_index":483,"t":{"996":{"position":[[1245,12],[1585,12]]},"1004":{"position":[[2204,12],[2544,12]]}}}],["p.p_personid",{"_index":479,"t":{"996":{"position":[[1177,12],[1452,12],[1556,13],[1626,12]]},"1004":{"position":[[2136,12],[2411,12],[2515,13],[2585,12]]}}}],["package.json",{"_index":1357,"t":{"1300":{"position":[[471,12]]}}}],["page",{"_index":403,"t":{"988":{"position":[[3624,5]]},"1116":{"position":[[964,5]]}}}],["pair",{"_index":107,"t":{"972":{"position":[[728,13]]},"1062":{"position":[[44,40]]}}}],["parker",{"_index":1223,"t":{"1128":{"position":[[215,7],[254,9]]}}}],["pars",{"_index":1351,"t":{"1300":{"position":[[313,8]]}}}],["parser",{"_index":914,"t":{"1016":{"position":[[30,16]]},"1018":{"position":[[0,6]]},"1026":{"position":[[116,6]]}}}],["part",{"_index":590,"t":{"1000":{"position":[[1393,4],[1508,6]]},"1075":{"position":[[227,4]]}}}],["particular",{"_index":819,"t":{"1004":{"position":[[531,10]]}}}],["particularli",{"_index":707,"t":{"1002":{"position":[[2568,12],[2973,12]]}}}],["partid",{"_index":984,"t":{"1056":{"position":[[192,6],[451,6]]}}}],["partit",{"_index":997,"t":{"1062":{"position":[[214,9],[228,9],[269,9],[334,9],[523,9],[587,9]]},"1104":{"position":[[983,9]]}}}],["partition_num",{"_index":1020,"t":{"1064":{"position":[[639,19]]}}}],["partitionid",{"_index":1017,"t":{"1064":{"position":[[429,11]]}}}],["partition）上。nebula",{"_index":992,"t":{"1060":{"position":[[0,101]]}}}],["partition），而不是一台服务器一个大分片（shard",{"_index":1107,"t":{"1104":{"position":[[914,68]]}}}],["pass",{"_index":625,"t":{"1000":{"position":[[2433,6]]},"1300":{"position":[[532,4]]}}}],["path",{"_index":822,"t":{"1004":{"position":[[675,5]]},"1087":{"position":[[0,32]]},"1100":{"position":[[240,4]]},"1203":{"position":[[158,4],[163,4]]},"1205":{"position":[[197,4]]},"1257":{"position":[[9,8],[87,9]]},"1259":{"position":[[64,4]]}}}],["path`和`get",{"_index":1047,"t":{"1085":{"position":[[141,10]]}}}],["path（03",{"_index":1054,"t":{"1089":{"position":[[20,7]]}}}],["pattern",{"_index":1088,"t":{"1100":{"position":[[72,13]]}}}],["pay",{"_index":742,"t":{"1002":{"position":[[3923,6]]}}}],["peer",{"_index":1027,"t":{"1069":{"position":[[360,4]]},"1075":{"position":[[139,4]]}}}],["peopl",{"_index":519,"t":{"1000":{"position":[[57,6]]},"1002":{"position":[[4868,7],[5042,7],[5136,6]]}}}],["person",{"_index":489,"t":{"996":{"position":[[1407,6]]},"1002":{"position":[[750,6],[830,6],[933,7],[4827,6]]},"1004":{"position":[[1199,7],[2366,6],[3375,12]]}}}],["person'",{"_index":775,"t":{"1002":{"position":[[4921,8]]}}}],["person.firstnam",{"_index":482,"t":{"996":{"position":[[1224,18],[1934,17]]},"1004":{"position":[[2183,18],[2934,17]]}}}],["person.id",{"_index":480,"t":{"996":{"position":[[1193,11],[1923,10],[2072,9]]},"1004":{"position":[[2152,11],[2923,10],[3072,9]]}}}],["person.lastnam",{"_index":484,"t":{"996":{"position":[[1261,17],[1952,16]]},"1004":{"position":[[2220,17],[2952,16]]}}}],["person:person",{"_index":495,"t":{"996":{"position":[[1695,16]]},"1004":{"position":[[2695,16]]}}}],["person）在社交网络上发布的帖子（posts）；查找相应的回复（messag",{"_index":452,"t":{"996":{"position":[[395,99]]}}}],["pert",{"_index":1267,"t":{"1212":{"position":[[256,4]]}}}],["peter",{"_index":217,"t":{"986":{"position":[[1675,5],[1802,5]]}}}],["pgql",{"_index":268,"t":{"986":{"position":[[4138,5]]}}}],["pgx使用的图语言pgql",{"_index":257,"t":{"986":{"position":[[3942,19]]}}}],["pharmaceut",{"_index":875,"t":{"1004":{"position":[[3819,16]]}}}],["phenomena",{"_index":747,"t":{"1002":{"position":[[3987,10]]}}}],["photo",{"_index":556,"t":{"1000":{"position":[[716,7]]}}}],["pictur",{"_index":533,"t":{"1000":{"position":[[238,8],[1163,7],[2210,7],[2989,8]]}}}],["picture/photo/imag",{"_index":557,"t":{"1000":{"position":[[757,20]]}}}],["pid",{"_index":1018,"t":{"1064":{"position":[[441,3],[549,3],[659,3]]}}}],["pie",{"_index":548,"t":{"1000":{"position":[[589,3]]}}}],["placehold",{"_index":991,"t":{"1056":{"position":[[720,11]]}}}],["placeholder。serializedvalu",{"_index":1003,"t":{"1062":{"position":[[458,27],[711,27]]}}}],["plan",{"_index":885,"t":{"1004":{"position":[[4036,5]]}}}],["planner",{"_index":916,"t":{"1016":{"position":[[65,19]]},"1022":{"position":[[611,7]]},"1026":{"position":[[135,7]]}}}],["platform",{"_index":794,"t":{"1002":{"position":[[5371,8]]},"1006":{"position":[[541,8],[741,8],[1035,8]]}}}],["player",{"_index":110,"t":{"974":{"position":[[136,6]]},"1128":{"position":[[181,6]]},"1265":{"position":[[282,11]]},"1269":{"position":[[35,35],[254,18]]}}}],["player.nam",{"_index":1221,"t":{"1128":{"position":[[194,11],[271,11]]}}}],["player100",{"_index":1211,"t":{"1122":{"position":[[246,22]]},"1128":{"position":[[115,11],[155,12]]},"1265":{"position":[[262,11],[405,59],[702,11]]}}}],["player100\"，或者go",{"_index":1210,"t":{"1122":{"position":[[224,16]]}}}],["player_team",{"_index":1065,"t":{"1094":{"position":[[726,11],[770,11]]}}}],["player、team）和两种类型的边（serve、follow",{"_index":109,"t":{"974":{"position":[[52,60]]}}}],["player表中的name、age、start_year、end_year，都是标签play",{"_index":1313,"t":{"1269":{"position":[[843,74]]}}}],["player除了有age外，还可以有name，或者其他属性，例如height",{"_index":1250,"t":{"1179":{"position":[[106,47]]}}}],["player）和球队（team",{"_index":1064,"t":{"1094":{"position":[[666,59]]}}}],["player，就会将之前play",{"_index":1314,"t":{"1269":{"position":[[935,30]]}}}],["poc",{"_index":1336,"t":{"1298":{"position":[[450,3]]}}}],["poi",{"_index":791,"t":{"1002":{"position":[[5310,3]]}}}],["point",{"_index":621,"t":{"1000":{"position":[[2055,6],[2130,7],[2583,6]]},"1002":{"position":[[20,5],[2324,5],[5314,6]]}}}],["poi（point",{"_index":447,"t":{"994":{"position":[[1526,9]]}}}],["polish",{"_index":1243,"t":{"1172":{"position":[[12,6]]}}}],["posit",{"_index":658,"t":{"1002":{"position":[[1012,8]]}}}],["post",{"_index":464,"t":{"996":{"position":[[772,6],[829,5],[1984,5]]},"1004":{"position":[[1181,5],[1187,6],[1315,7],[1731,6],[1788,5],[2984,5]]}}}],["post.creationd",{"_index":500,"t":{"996":{"position":[[1778,17],[1814,17]]},"1004":{"position":[[2778,17],[2814,17]]}}}],["post:post",{"_index":497,"t":{"996":{"position":[[1727,12]]},"1004":{"position":[[2727,12]]}}}],["post_al",{"_index":475,"t":{"996":{"position":[[1056,8],[1426,8]]},"1004":{"position":[[2015,8],[2385,8]]}}}],["post_all(psa_threadid",{"_index":454,"t":{"996":{"position":[[547,21]]},"1004":{"position":[[1506,21]]}}}],["postgresql",{"_index":453,"t":{"996":{"position":[[500,10],[521,10]]},"1004":{"position":[[1466,11],[1480,10]]}}}],["potenti",{"_index":508,"t":{"998":{"position":[[59,9]]},"1002":{"position":[[3443,9]]}}}],["power",{"_index":1171,"t":{"1116":{"position":[[1137,7]]}}}],["practic",{"_index":900,"t":{"1006":{"position":[[550,10],[1044,10]]}}}],["pragmat",{"_index":348,"t":{"988":{"position":[[2738,10]]}}}],["pre",{"_index":97,"t":{"972":{"position":[[542,6]]}}}],["pregel",{"_index":1159,"t":{"1116":{"position":[[834,7]]}}}],["pregelpregel",{"_index":1097,"t":{"1102":{"position":[[467,12]]}}}],["preger",{"_index":595,"t":{"1000":{"position":[[1441,6]]}}}],["present",{"_index":692,"t":{"1002":{"position":[[2018,9]]}}}],["press",{"_index":406,"t":{"988":{"position":[[3643,6]]}}}],["prevent",{"_index":781,"t":{"1002":{"position":[[5083,10]]}}}],["price",{"_index":671,"t":{"1002":{"position":[[1315,5]]}}}],["primari",{"_index":1060,"t":{"1094":{"position":[[280,24]]},"1269":{"position":[[206,16]]}}}],["privat",{"_index":4,"t":{"931":{"position":[[144,7]]}}}],["problem",{"_index":583,"t":{"1000":{"position":[[1308,7],[1928,8],[1983,7],[2747,7]]},"1002":{"position":[[2108,8]]},"1004":{"position":[[471,7],[518,7]]}}}],["procedural）。它允许更短的语法来表达查询，也允许通过网络远程访问数据库。gremlin",{"_index":243,"t":{"986":{"position":[[2934,70]]}}}],["proceed",{"_index":395,"t":{"988":{"position":[[3523,11]]},"1116":{"position":[[888,11]]}}}],["process",{"_index":1148,"t":{"1116":{"position":[[687,10],[873,11]]},"1298":{"position":[[902,10]]}}}],["product",{"_index":757,"t":{"1002":{"position":[[4402,10]]}}}],["project",{"_index":942,"t":{"1022":{"position":[[244,7],[788,79]]}}}],["properti",{"_index":104,"t":{"972":{"position":[[696,12]]},"986":{"position":[[1114,16]]},"994":{"position":[[165,29]]},"1002":{"position":[[219,8],[535,10],[607,8],[857,10],[945,10],[1157,8],[1246,8],[1540,10],[1606,10],[3571,8],[3755,10],[4664,8],[4883,10],[4963,10]]},"1234":{"position":[[494,15]]}}}],["properties(edg",{"_index":1273,"t":{"1234":{"position":[[363,27]]}}}],["properties(edge).lik",{"_index":921,"t":{"1018":{"position":[[127,25]]},"1020":{"position":[[507,26],[652,26]]}}}],["properties(edge).tmp",{"_index":1296,"t":{"1265":{"position":[[730,21]]}}}],["propos",{"_index":574,"t":{"1000":{"position":[[1118,8]]}}}],["protocol",{"_index":1236,"t":{"1143":{"position":[[60,40]]}}}],["prove",{"_index":618,"t":{"1000":{"position":[[1967,6]]}}}],["provid",{"_index":779,"t":{"1002":{"position":[[5058,8]]}}}],["prussian",{"_index":587,"t":{"1000":{"position":[[1374,8]]}}}],["psa",{"_index":476,"t":{"996":{"position":[[1065,3],[1435,3]]},"1004":{"position":[[2024,3],[2394,3]]}}}],["psa.psa_messageid",{"_index":478,"t":{"996":{"position":[[1099,17],[1367,18]]},"1004":{"position":[[2058,17],[2326,18]]}}}],["psa.psa_thread_creatorid",{"_index":474,"t":{"996":{"position":[[950,24],[1467,24]]},"1004":{"position":[[1909,24],[2426,24]]}}}],["psa.psa_threadid",{"_index":473,"t":{"996":{"position":[[915,16],[1296,17]]},"1004":{"position":[[1874,16],[2255,17]]}}}],["psa_creationd",{"_index":457,"t":{"996":{"position":[[609,17],[1496,16]]},"1004":{"position":[[1568,17],[2455,16]]}}}],["psa_messageid",{"_index":456,"t":{"996":{"position":[[593,13],[740,13]]},"1004":{"position":[[1552,13],[1699,13]]}}}],["psa_messagetyp",{"_index":458,"t":{"996":{"position":[[627,15]]},"1004":{"position":[[1586,15]]}}}],["psa_thread_creatorid",{"_index":455,"t":{"996":{"position":[[571,21],[702,20],[978,20]]},"1004":{"position":[[1530,21],[1661,20],[1937,20]]}}}],["psa_threadid",{"_index":461,"t":{"996":{"position":[[672,12],[935,12]]},"1004":{"position":[[1631,12],[1894,12]]}}}],["public",{"_index":331,"t":{"988":{"position":[[2217,6]]}}}],["pull",{"_index":317,"t":{"988":{"position":[[1728,4]]}}}],["push",{"_index":1228,"t":{"1128":{"position":[[421,4]]}}}],["put",{"_index":577,"t":{"1000":{"position":[[1212,4]]}}}],["puzzl",{"_index":637,"t":{"1000":{"position":[[3070,6]]}}}],["python",{"_index":1116,"t":{"1108":{"position":[[389,7]]},"1298":{"position":[[4,6],[36,6],[225,6]]}}}],["qichacha",{"_index":649,"t":{"1002":{"position":[[637,8]]}}}],["queri",{"_index":166,"t":{"986":{"position":[[262,5],[342,5],[808,5],[875,5],[3411,12],[3454,8],[4247,5]]},"988":{"position":[[3483,5],[3705,5]]},"1004":{"position":[[1061,5],[1134,5],[1171,5],[1211,5],[1440,8],[2615,8],[3190,5]]},"1028":{"position":[[52,5]]},"1100":{"position":[[245,45]]},"1298":{"position":[[1145,5]]},"1300":{"position":[[216,5]]}}}],["question",{"_index":1361,"t":{"1300":{"position":[[537,9]]}}}],["questionnair",{"_index":883,"t":{"1004":{"position":[[3943,13]]}}}],["quickli",{"_index":783,"t":{"1002":{"position":[[5109,7]]}}}],["quot",{"_index":141,"t":{"981":{"position":[[144,5]]}}}],["quota",{"_index":66,"t":{"951":{"position":[[15,6]]}}}],["r",{"_index":1070,"t":{"1094":{"position":[[1279,1]]},"1234":{"position":[[575,2]]}}}],["raft",{"_index":78,"t":{"965":{"position":[[97,4]]},"1032":{"position":[[254,4],[434,4],[485,4]]},"1049":{"position":[[55,10],[66,10]]},"1051":{"position":[[115,4],[438,17]]},"1067":{"position":[[69,9],[79,22],[286,4],[338,4],[368,4],[452,4],[501,4],[829,4],[847,15]]},"1069":{"position":[[30,4],[53,21],[75,4],[147,4],[188,4],[248,4],[305,4],[339,4]]},"1075":{"position":[[11,4],[222,4]]},"1079":{"position":[[13,4],[67,4]]}}}],["rang",{"_index":850,"t":{"1004":{"position":[[3290,5]]}}}],["rank",{"_index":94,"t":{"972":{"position":[[351,9],[416,8],[446,4],[451,4],[512,4]]},"1056":{"position":[[654,4]]},"1236":{"position":[[53,4],[90,4]]},"1238":{"position":[[32,4]]},"1265":{"position":[[165,4],[223,4],[241,5],[465,4],[484,4],[647,4]]},"1267":{"position":[[32,4]]},"1269":{"position":[[1037,5]]},"1271":{"position":[[255,4],[273,4]]}}}],["rank(edg",{"_index":1297,"t":{"1265":{"position":[[752,11]]}}}],["rbo",{"_index":954,"t":{"1022":{"position":[[784,3]]}}}],["rbo（rul",{"_index":950,"t":{"1022":{"position":[[630,8]]}}}],["rdf",{"_index":333,"t":{"988":{"position":[[2265,7],[2473,3]]},"998":{"position":[[12,3]]},"1006":{"position":[[32,3]]}}}],["rdma",{"_index":1138,"t":{"1116":{"position":[[121,4]]}}}],["readme.md",{"_index":1344,"t":{"1300":{"position":[[45,9],[455,9]]}}}],["real",{"_index":351,"t":{"988":{"position":[[2771,4]]},"1002":{"position":[[569,4],[5271,4],[5444,4]]}}}],["recent",{"_index":164,"t":{"986":{"position":[[238,6]]},"988":{"position":[[3681,6]]}}}],["recognit",{"_index":554,"t":{"1000":{"position":[[693,12]]}}}],["recommend",{"_index":789,"t":{"1002":{"position":[[5286,14],[5406,9]]},"1004":{"position":[[3388,16]]}}}],["record",{"_index":688,"t":{"1002":{"position":[[1868,6],[2628,6],[3725,6],[3766,6],[4354,7]]}}}],["recurs",{"_index":394,"t":{"988":{"position":[[3509,10]]},"996":{"position":[[537,9]]},"1004":{"position":[[1496,9]]}}}],["redi",{"_index":265,"t":{"986":{"position":[[4051,5]]}}}],["redisgraph",{"_index":267,"t":{"986":{"position":[[4070,10]]}}}],["redis、voldemort、oracl",{"_index":1078,"t":{"1096":{"position":[[586,63]]}}}],["reduc",{"_index":1100,"t":{"1102":{"position":[[536,6]]}}}],["ref",{"_index":416,"t":{"988":{"position":[[3893,4]]}}}],["region",{"_index":70,"t":{"953":{"position":[[34,8]]},"1000":{"position":[[2030,7],[2237,7],[2339,8],[2853,7],[2915,7],[3040,6]]}}}],["regular",{"_index":1091,"t":{"1100":{"position":[[186,53]]}}}],["relat",{"_index":142,"t":{"981":{"position":[[172,7]]},"1004":{"position":[[9,10]]}}}],["relationship",{"_index":565,"t":{"1000":{"position":[[941,13]]},"1002":{"position":[[60,13],[349,12],[392,13],[487,12],[697,14],[807,12],[1336,12],[1386,12],[1883,13],[1985,13],[2175,13],[2395,12],[2650,13],[2782,12],[3098,13],[3268,12],[4209,13],[4281,13],[5648,14]]},"1004":{"position":[[258,13],[720,13]]},"1006":{"position":[[374,12]]}}}],["release/2021/01/28/2165742/0/en/glob",{"_index":362,"t":{"988":{"position":[[2996,38]]}}}],["releases/2019",{"_index":377,"t":{"988":{"position":[[3253,13]]}}}],["reliabl",{"_index":384,"t":{"988":{"position":[[3389,8]]}}}],["remain",{"_index":634,"t":{"1000":{"position":[[2905,9]]}}}],["renam",{"_index":592,"t":{"1000":{"position":[[1409,7]]}}}],["repli",{"_index":502,"t":{"996":{"position":[[2021,6]]},"1004":{"position":[[1235,7],[1248,7],[1280,7],[1332,5],[1425,8],[3021,6]]}}}],["reply.creationd",{"_index":501,"t":{"996":{"position":[[1848,18],[1885,18]]},"1004":{"position":[[2848,18],[2885,18]]}}}],["reply:messag",{"_index":499,"t":{"996":{"position":[[1756,15]]},"1004":{"position":[[2756,15]]}}}],["reply_of*0",{"_index":498,"t":{"996":{"position":[[1740,15]]},"1004":{"position":[[2740,15]]}}}],["reports/graph",{"_index":374,"t":{"988":{"position":[[3165,13]]}}}],["repositori",{"_index":535,"t":{"1000":{"position":[[293,10]]}}}],["repres",{"_index":564,"t":{"1000":{"position":[[927,9],[2218,9],[2291,9]]},"1002":{"position":[[729,10],[785,10],[1482,9],[2330,10],[2369,10],[2718,10],[2756,10]]},"1004":{"position":[[391,12]]}}}],["represent",{"_index":805,"t":{"1002":{"position":[[5605,14]]}}}],["request",{"_index":316,"t":{"988":{"position":[[1566,22],[1733,7]]},"1300":{"position":[[129,8]]}}}],["requir",{"_index":835,"t":{"1004":{"position":[[1157,13]]}}}],["research",{"_index":866,"t":{"1004":{"position":[[3576,9],[3729,8],[3957,9]]}}}],["resourc",{"_index":61,"t":{"947":{"position":[[63,8]]},"953":{"position":[[114,8]]}}}],["rest",{"_index":236,"t":{"986":{"position":[[2638,4]]},"1298":{"position":[[74,7]]}}}],["result",{"_index":843,"t":{"1004":{"position":[[1390,7]]}}}],["resultmap",{"_index":946,"t":{"1022":{"position":[[496,13]]}}}],["resultmap[\"filter2",{"_index":949,"t":{"1022":{"position":[[562,20]]}}}],["resultmap[\"gn1",{"_index":948,"t":{"1022":{"position":[[530,16]]}}}],["retail",{"_index":876,"t":{"1004":{"position":[[3836,7]]}}}],["retouch",{"_index":555,"t":{"1000":{"position":[[706,9]]}}}],["return",{"_index":285,"t":{"988":{"position":[[621,6],[725,6]]},"996":{"position":[[1916,6]]},"1004":{"position":[[2916,6]]},"1128":{"position":[[325,6]]},"1234":{"position":[[666,6]]},"1265":{"position":[[935,6]]}}}],["review",{"_index":47,"t":{"935":{"position":[[496,6]]},"1002":{"position":[[3160,9]]}}}],["rise",{"_index":540,"t":{"1000":{"position":[[409,5]]}}}],["risk",{"_index":725,"t":{"1002":{"position":[[3461,6],[5131,4]]},"1004":{"position":[[3434,4]]}}}],["river",{"_index":594,"t":{"1000":{"position":[[1435,5],[1570,6]]}}}],["rocksdb",{"_index":981,"t":{"1054":{"position":[[175,7]]},"1077":{"position":[[3,7]]}}}],["rodriguez",{"_index":191,"t":{"986":{"position":[[1104,9],[2717,10]]}}}],["root",{"_index":693,"t":{"1002":{"position":[[2071,4]]}}}],["rout",{"_index":626,"t":{"1000":{"position":[[2458,6],[2607,5]]}}}],["rule",{"_index":1072,"t":{"1094":{"position":[[1489,23]]}}}],["russia",{"_index":591,"t":{"1000":{"position":[[1401,7]]}}}],["r、python、c",{"_index":1114,"t":{"1108":{"position":[[342,12]]}}}],["s",{"_index":434,"t":{"994":{"position":[[424,29]]},"998":{"position":[[22,1]]},"1002":{"position":[[1435,1]]}}}],["s1.1",{"_index":281,"t":{"988":{"position":[[584,4]]}}}],["s1.2",{"_index":292,"t":{"988":{"position":[[689,4]]}}}],["s2",{"_index":289,"t":{"988":{"position":[[657,3]]}}}],["s3",{"_index":54,"t":{"939":{"position":[[176,2]]}}}],["same",{"_index":631,"t":{"1000":{"position":[[2602,4]]},"1002":{"position":[[4002,4]]}}}],["sap",{"_index":323,"t":{"988":{"position":[[1972,3]]}}}],["scale",{"_index":543,"t":{"1000":{"position":[[489,5]]},"1110":{"position":[[393,6]]},"1116":{"position":[[861,5]]}}}],["scam",{"_index":746,"t":{"1002":{"position":[[3970,6]]}}}],["scan",{"_index":1227,"t":{"1128":{"position":[[336,10]]}}}],["scenario",{"_index":727,"t":{"1002":{"position":[[3502,9],[4650,9],[5252,10]]},"1004":{"position":[[3311,10]]}}}],["schedul",{"_index":960,"t":{"1026":{"position":[[155,9]]}}}],["scheduler）和执行器（executor",{"_index":955,"t":{"1024":{"position":[[9,89]]}}}],["schema",{"_index":216,"t":{"986":{"position":[[1635,6]]},"1010":{"position":[[58,6]]},"1020":{"position":[[89,6],[139,6],[451,6]]},"1041":{"position":[[25,6],[83,6],[99,6],[144,6]]},"1054":{"position":[[89,6],[124,6]]},"1058":{"position":[[19,7],[118,6],[144,20],[165,6]]}}}],["search",{"_index":229,"t":{"986":{"position":[[2147,40],[2388,59]]}}}],["sector",{"_index":668,"t":{"1002":{"position":[[1224,7]]}}}],["secur",{"_index":905,"t":{"1006":{"position":[[719,8]]}}}],["see",{"_index":539,"t":{"1000":{"position":[[383,4],[2362,3]]},"1002":{"position":[[3366,3]]}}}],["select",{"_index":459,"t":{"996":{"position":[[650,6],[908,6],[1170,6]]},"1004":{"position":[[1609,6],[1867,6],[2129,6]]}}}],["semi",{"_index":807,"t":{"1004":{"position":[[34,4]]}}}],["sens",{"_index":832,"t":{"1004":{"position":[[984,5]]}}}],["sentenc",{"_index":1339,"t":{"1298":{"position":[[579,8],[778,8]]}}}],["seri",{"_index":669,"t":{"1002":{"position":[[1271,6],[1407,6]]}}}],["serializedvalu",{"_index":988,"t":{"1056":{"position":[[376,15],[747,15]]}}}],["serv",{"_index":114,"t":{"974":{"position":[[211,5]]},"1020":{"position":[[269,5],[784,5]]},"1193":{"position":[[120,65]]}}}],["server",{"_index":1345,"t":{"1300":{"position":[[111,7]]}}}],["servic",{"_index":65,"t":{"951":{"position":[[7,7]]},"953":{"position":[[43,8]]},"1002":{"position":[[2294,7],[5363,7]]},"1026":{"position":[[174,7]]},"1032":{"position":[[569,9]]}}}],["set",{"_index":46,"t":{"935":{"position":[[452,7]]},"1000":{"position":[[495,10]]}}}],["seven",{"_index":584,"t":{"1000":{"position":[[1323,5],[1634,5],[1821,5],[2070,5],[2305,5]]}}}],["sever",{"_index":514,"t":{"998":{"position":[[178,7]]},"1000":{"position":[[993,7]]},"1004":{"position":[[325,7]]}}}],["sf1000",{"_index":1131,"t":{"1110":{"position":[[422,14]]}}}],["shard",{"_index":282,"t":{"988":{"position":[[591,5],[696,5]]},"1104":{"position":[[571,25]]}}}],["share",{"_index":364,"t":{"988":{"position":[[3062,5]]},"1049":{"position":[[16,12]]},"1139":{"position":[[16,6]]}}}],["show",{"_index":526,"t":{"1000":{"position":[[145,4],[253,5],[443,4]]},"1004":{"position":[[611,4]]}}}],["shown",{"_index":610,"t":{"1000":{"position":[[1838,5],[2721,5]]}}}],["sigmod",{"_index":1162,"t":{"1116":{"position":[[954,9]]}}}],["similar",{"_index":672,"t":{"1002":{"position":[[1361,7]]}}}],["simon",{"_index":1281,"t":{"1251":{"position":[[131,5],[164,5],[190,5]]},"1253":{"position":[[46,5]]},"1257":{"position":[[31,5]]}}}],["simplest",{"_index":531,"t":{"1000":{"position":[[204,8]]}}}],["simpli",{"_index":576,"t":{"1000":{"position":[[1205,6]]}}}],["simplifi",{"_index":608,"t":{"1000":{"position":[[1798,10],[2142,10]]}}}],["siwi",{"_index":1333,"t":{"1298":{"position":[[411,5]]},"1300":{"position":[[69,4],[76,4],[550,4]]}}}],["siwi_frontend",{"_index":1355,"t":{"1300":{"position":[[421,13]]}}}],["size",{"_index":363,"t":{"988":{"position":[[3057,4]]}}}],["slave/slav",{"_index":276,"t":{"988":{"position":[[372,37]]}}}],["slot",{"_index":1348,"t":{"1300":{"position":[[209,6],[339,4]]}}}],["small",{"_index":568,"t":{"1000":{"position":[[1001,5],[1535,5]]}}}],["smartgraph",{"_index":1175,"t":{"1116":{"position":[[1220,11]]}}}],["snb",{"_index":1126,"t":{"1110":{"position":[[326,3]]}}}],["snb，social",{"_index":1122,"t":{"1110":{"position":[[144,19]]}}}],["snowflak",{"_index":1214,"t":{"1124":{"position":[[102,9]]}}}],["soar",{"_index":1186,"t":{"1116":{"position":[[1540,7]]}}}],["social",{"_index":865,"t":{"1004":{"position":[[3561,6]]},"1006":{"position":[[821,6]]}}}],["solv",{"_index":615,"t":{"1000":{"position":[[1917,5],[2767,6]]}}}],["sometim",{"_index":524,"t":{"1000":{"position":[[108,9]]}}}],["sort",{"_index":842,"t":{"1004":{"position":[[1381,4]]}}}],["sourc",{"_index":769,"t":{"1002":{"position":[[4758,6]]},"1300":{"position":[[380,6]]}}}],["space",{"_index":83,"t":{"972":{"position":[[32,10]]},"1006":{"position":[[54,5]]},"1064":{"position":[[170,5],[633,5]]}}}],["space中通过参数vid_typ",{"_index":1206,"t":{"1122":{"position":[[76,22]]}}}],["spark、flink、hbas",{"_index":1240,"t":{"1145":{"position":[[113,17]]}}}],["special",{"_index":399,"t":{"988":{"position":[[3578,7]]}}}],["specif",{"_index":811,"t":{"1004":{"position":[[290,13],[3217,12]]}}}],["specifi",{"_index":38,"t":{"935":{"position":[[227,7]]},"1128":{"position":[[373,7]]}}}],["speech",{"_index":1326,"t":{"1296":{"position":[[95,6]]},"1298":{"position":[[359,6]]}}}],["spread",{"_index":912,"t":{"1006":{"position":[[946,9]]}}}],["sql",{"_index":170,"t":{"986":{"position":[[424,3],[1368,4],[3073,3],[3077,12],[3187,3]]},"988":{"position":[[2018,3],[2022,13],[2098,8]]},"996":{"position":[[2128,3]]},"1004":{"position":[[3138,4]]},"1094":{"position":[[216,63],[662,3]]},"1096":{"position":[[95,4],[106,25],[463,3]]},"1110":{"position":[[286,3]]},"1269":{"position":[[202,3]]}}}],["sqlite",{"_index":1110,"t":{"1108":{"position":[[63,12]]}}}],["sql、nebula",{"_index":1302,"t":{"1269":{"position":[[158,10]]}}}],["sql、文档、图、key",{"_index":339,"t":{"988":{"position":[[2371,34]]}}}],["sql。通过使用sql",{"_index":169,"t":{"986":{"position":[[372,51]]}}}],["sql）进行数据库操作，并以表格、行、列的形式存储数据。这种存储数据的方法源自埃德加·科德（edgar",{"_index":1057,"t":{"1094":{"position":[[100,84]]}}}],["src",{"_index":956,"t":{"1026":{"position":[[27,3]]},"1300":{"position":[[59,3],[490,3]]}}}],["src/context/executioncontext.cpp",{"_index":945,"t":{"1022":{"position":[[450,32]]}}}],["src/optim",{"_index":953,"t":{"1022":{"position":[[766,14]]}}}],["src/planner",{"_index":936,"t":{"1020":{"position":[[891,11]]}}}],["srcvertex",{"_index":993,"t":{"1062":{"position":[[105,9],[252,9],[318,9],[383,9],[694,9]]}}}],["ssd",{"_index":1141,"t":{"1116":{"position":[[317,3],[348,14],[1633,4]]},"1149":{"position":[[42,3]]}}}],["ssdhdd，ssd",{"_index":1142,"t":{"1116":{"position":[[321,17]]}}}],["ssh",{"_index":11,"t":{"931":{"position":[[265,3]]}}}],["stack",{"_index":22,"t":{"933":{"position":[[29,5]]},"935":{"position":[[203,5],[235,5],[255,5],[342,5],[479,5],[562,15],[593,5]]}}}],["stand",{"_index":676,"t":{"1002":{"position":[[1450,5]]}}}],["standard",{"_index":178,"t":{"986":{"position":[[745,8]]}}}],["star",{"_index":304,"t":{"988":{"position":[[1161,4]]},"1000":{"position":[[304,5]]}}}],["start",{"_index":60,"t":{"947":{"position":[[55,7]]},"1000":{"position":[[402,6],[2563,8]]},"1022":{"position":[[293,21],[397,5]]},"1024":{"position":[[190,5]]},"1128":{"position":[[86,5],[143,5],[291,5]]}}}],["start_year",{"_index":115,"t":{"974":{"position":[[217,10]]},"1183":{"position":[[169,10]]}}}],["startdat",{"_index":471,"t":{"996":{"position":[[874,10],[1144,10],[1521,10],[1799,10],[1870,10]]},"1004":{"position":[[1833,10],[2103,10],[2480,10],[2799,10],[2870,10]]}}}],["statement",{"_index":846,"t":{"1004":{"position":[[1449,10],[2624,10]]}}}],["statements/1.insert",{"_index":124,"t":{"974":{"position":[[538,19],[680,19]]}}}],["statements/4.delet",{"_index":126,"t":{"974":{"position":[[611,19],[747,19]]}}}],["static",{"_index":732,"t":{"1002":{"position":[[3564,6]]}}}],["statu",{"_index":50,"t":{"935":{"position":[[601,11]]}}}],["stock",{"_index":664,"t":{"1002":{"position":[[1175,5],[1309,5]]}}}],["storag",{"_index":18,"t":{"931":{"position":[[463,8],[489,7],[505,8]]},"951":{"position":[[263,11]]},"1004":{"position":[[3178,7]]},"1008":{"position":[[39,7]]},"1012":{"position":[[30,18],[94,12],[119,8],[171,7],[246,7],[349,28],[408,7],[438,7]]},"1022":{"position":[[998,7],[1006,22]]},"1032":{"position":[[495,8]]},"1043":{"position":[[54,7]]},"1047":{"position":[[75,7],[98,8],[117,7]]},"1051":{"position":[[0,7],[20,8],[53,8],[98,8],[148,7],[168,7],[348,7],[371,7],[407,7],[471,7],[588,7]]},"1054":{"position":[[280,7]]},"1056":{"position":[[223,7],[482,7]]},"1069":{"position":[[3,7]]},"1077":{"position":[[55,7],[90,7]]},"1079":{"position":[[0,7],[52,7],[159,7],[211,7],[263,7],[340,12]]}}}],["store",{"_index":21,"t":{"931":{"position":[[554,8]]},"1002":{"position":[[3078,5]]},"1004":{"position":[[194,6]]},"1051":{"position":[[456,5]]},"1096":{"position":[[230,7],[257,7],[279,7]]}}}],["string",{"_index":111,"t":{"974":{"position":[[148,8],[186,8]]},"1056":{"position":[[311,6]]},"1234":{"position":[[242,7]]}}}],["structur",{"_index":232,"t":{"986":{"position":[[2448,11]]},"1004":{"position":[[39,10],[109,10],[180,9],[542,9],[583,11],[1103,11],[3238,9]]}}}],["structure）。因为这样对于应用程序非常笨重，neo4j",{"_index":230,"t":{"986":{"position":[[2188,31]]}}}],["student",{"_index":1311,"t":{"1269":{"position":[[745,29]]}}}],["student表中。这里的player表和stud",{"_index":1312,"t":{"1269":{"position":[[781,43]]}}}],["studi",{"_index":578,"t":{"1000":{"position":[[1237,5]]},"1002":{"position":[[48,7]]}}}],["studio、nebula",{"_index":1237,"t":{"1145":{"position":[[36,13]]}}}],["style",{"_index":1244,"t":{"1172":{"position":[[19,5]]}}}],["subgraph",{"_index":1290,"t":{"1255":{"position":[[435,8]]}}}],["subgraph`语句采用的是`trail",{"_index":1048,"t":{"1085":{"position":[[152,27]]}}}],["such",{"_index":547,"t":{"1000":{"position":[[581,4],[679,4]]},"1002":{"position":[[1021,4],[1976,4],[3195,4],[4444,4],[5263,4]]},"1004":{"position":[[60,4],[658,4]]}}}],["suitabl",{"_index":796,"t":{"1002":{"position":[[5421,8]]}}}],["supervisor",{"_index":660,"t":{"1002":{"position":[[1042,11]]}}}],["suppli",{"_index":862,"t":{"1004":{"position":[[3532,6]]}}}],["support",{"_index":393,"t":{"988":{"position":[[3498,10]]}}}],["svensson",{"_index":226,"t":{"986":{"position":[[1953,8]]}}}],["sylvest",{"_index":575,"t":{"1000":{"position":[[1130,9]]}}}],["syment",{"_index":1342,"t":{"1298":{"position":[[893,8]]},"1300":{"position":[[304,8]]}}}],["system",{"_index":530,"t":{"1000":{"position":[[191,8]]},"1002":{"position":[[1718,8],[2243,6]]},"1116":{"position":[[698,8],[844,6]]},"1298":{"position":[[472,6]]}}}],["sɪwi",{"_index":1334,"t":{"1298":{"position":[[417,7]]}}}],["t",{"_index":390,"t":{"988":{"position":[[3462,2]]}}}],["t01",{"_index":433,"t":{"994":{"position":[[342,81]]},"1002":{"position":[[1321,4]]}}}],["tabl",{"_index":689,"t":{"1002":{"position":[[1914,6]]},"1004":{"position":[[577,5],[813,6],[1047,7]]}}}],["tag",{"_index":89,"t":{"972":{"position":[[198,4],[255,4],[629,7],[637,3],[751,3]]},"974":{"position":[[132,3],[172,3]]},"1056":{"position":[[156,3],[359,3]]},"1064":{"position":[[41,37]]},"1120":{"position":[[196,27],[254,3],[327,3],[394,9]]},"1179":{"position":[[90,3],[102,3],[167,4]]},"1183":{"position":[[44,3]]},"1185":{"position":[[24,4],[71,3],[151,26]]},"1230":{"position":[[106,7]]},"1265":{"position":[[278,3]]},"1269":{"position":[[832,6],[966,3],[1006,3]]}}}],["tagid",{"_index":983,"t":{"1056":{"position":[[126,5],[348,5]]}}}],["tags、permissions、stack",{"_index":43,"t":{"935":{"position":[[366,22]]}}}],["tag、edg",{"_index":969,"t":{"1041":{"position":[[35,8]]},"1236":{"position":[[228,8]]},"1244":{"position":[[15,8]]},"1261":{"position":[[15,8]]}}}],["tag）、关系类型（edg",{"_index":1252,"t":{"1183":{"position":[[0,25]]}}}],["tag）。例如，绿色点的两个属性age和name，它们被包含在集合player中。这里的play",{"_index":1249,"t":{"1179":{"position":[[14,75]]}}}],["tag）和关系类型（edg",{"_index":1277,"t":{"1236":{"position":[[95,43]]},"1238":{"position":[[37,43]]},"1267":{"position":[[37,43]]}}}],["tag）：play",{"_index":1253,"t":{"1183":{"position":[[94,15]]}}}],["tail",{"_index":99,"t":{"972":{"position":[[557,7]]}}}],["take",{"_index":1346,"t":{"1300":{"position":[[119,4],[196,4]]}}}],["taken",{"_index":632,"t":{"1000":{"position":[[2625,5]]}}}],["tangibl",{"_index":349,"t":{"988":{"position":[[2749,8]]}}}],["taylor",{"_index":245,"t":{"986":{"position":[[3164,6]]}}}],["tb",{"_index":1133,"t":{"1110":{"position":[[447,20]]}}}],["tb，100",{"_index":1132,"t":{"1110":{"position":[[440,6]]}}}],["team",{"_index":113,"t":{"974":{"position":[[176,4]]},"1002":{"position":[[2284,5]]}}}],["technolog",{"_index":739,"t":{"1002":{"position":[[3837,10],[4582,11]]},"1004":{"position":[[3655,10],[3712,10]]},"1116":{"position":[[500,10]]}}}],["telecommun",{"_index":880,"t":{"1004":{"position":[[3876,19]]}}}],["temp",{"_index":1295,"t":{"1265":{"position":[[719,4]]}}}],["tempor",{"_index":729,"t":{"1002":{"position":[[3527,8]]}}}],["term",{"_index":573,"t":{"1000":{"position":[[1103,4]]}}}],["test",{"_index":714,"t":{"1002":{"position":[[3174,7]]},"1300":{"position":[[360,4]]}}}],["tester",{"_index":721,"t":{"1002":{"position":[[3421,7]]}}}],["themselv",{"_index":836,"t":{"1004":{"position":[[1256,10]]}}}],["theori",{"_index":561,"t":{"1000":{"position":[[858,7],[875,7],[1223,6],[1260,6]]},"1002":{"position":[[41,6]]},"1006":{"position":[[134,6],[217,6]]}}}],["think",{"_index":520,"t":{"1000":{"position":[[64,5]]}}}],["threadcount",{"_index":486,"t":{"996":{"position":[[1317,11],[1993,12]]},"1004":{"position":[[2276,11],[2993,12]]}}}],["threat",{"_index":854,"t":{"1004":{"position":[[3416,6]]}}}],["threshold",{"_index":705,"t":{"1002":{"position":[[2504,9],[2890,9]]}}}],["throne",{"_index":675,"t":{"1002":{"position":[[1427,7]]},"1004":{"position":[[784,8]]},"1006":{"position":[[366,7]]}}}],["through",{"_index":690,"t":{"1002":{"position":[[1943,7],[4574,7]]}}}],["thu",{"_index":702,"t":{"1002":{"position":[[2435,5]]}}}],["tice",{"_index":439,"t":{"994":{"position":[[691,87],[818,154]]},"1002":{"position":[[2250,5],[2700,5],[3126,4]]}}}],["tigergraph",{"_index":319,"t":{"988":{"position":[[1783,11],[2050,11],[2067,10]]}}}],["tim",{"_index":920,"t":{"1018":{"position":[[105,5]]},"1020":{"position":[[209,5],[477,5],[613,5],[725,5]]},"1183":{"position":[[134,3]]}}}],["time",{"_index":537,"t":{"1000":{"position":[[315,5],[420,5],[466,4],[1700,5]]},"1002":{"position":[[1006,5],[1266,4],[3777,5],[4626,5],[4948,5],[4982,4],[5276,4],[5449,4]]},"1004":{"position":[[1297,7],[1323,4],[1338,4]]}}}],["tinkerpop",{"_index":192,"t":{"986":{"position":[[1149,9],[2490,37]]}}}],["tinkerpop开发的图语言(https://tinkerpop.apache.org",{"_index":414,"t":{"988":{"position":[[3807,48]]}}}],["tinkerpop的gremlin。前者通常被称为声明式语言(declar",{"_index":180,"t":{"986":{"position":[[765,42]]}}}],["titan",{"_index":295,"t":{"988":{"position":[[753,18],[849,5],[855,15],[1130,7],[1214,5],[1712,5],[1741,14]]}}}],["titantitan",{"_index":298,"t":{"988":{"position":[[829,12]]}}}],["titl",{"_index":287,"t":{"988":{"position":[[643,5],[747,5]]}}}],["tobia",{"_index":238,"t":{"986":{"position":[[2669,6]]},"988":{"position":[[3732,6]]}}}],["todo",{"_index":1242,"t":{"1172":{"position":[[6,5]]}}}],["toni",{"_index":1222,"t":{"1128":{"position":[[209,5]]}}}],["tool",{"_index":687,"t":{"1002":{"position":[[1838,6],[1862,5]]}}}],["top",{"_index":356,"t":{"988":{"position":[[2846,3]]}}}],["topic",{"_index":559,"t":{"1000":{"position":[[809,5],[1184,5]]},"1002":{"position":[[315,6],[385,6]]},"1006":{"position":[[5,5]]}}}],["topolog",{"_index":831,"t":{"1004":{"position":[[955,9]]}}}],["toss",{"_index":1008,"t":{"1062":{"position":[[1115,4]]}}}],["tpc",{"_index":1124,"t":{"1110":{"position":[[268,3],[275,3]]}}}],["trace",{"_index":695,"t":{"1002":{"position":[[2096,6],[4746,7]]}}}],["trail",{"_index":1049,"t":{"1085":{"position":[[182,5],[256,5],[359,5]]},"1203":{"position":[[112,5],[118,5]]},"1205":{"position":[[171,5]]},"1255":{"position":[[9,52],[62,31],[165,40],[444,36]]},"1259":{"position":[[58,5]]}}}],["trail类型中，存在两种特殊的路径类型，cycle和circuit",{"_index":1288,"t":{"1255":{"position":[[206,55]]}}}],["trail类型的路径由有限的边序列构成。遍历时只有点可以重复，边不可以重复。柯尼斯堡七桥问题的路径类型就是trail",{"_index":1045,"t":{"1085":{"position":[[0,59]]}}}],["train",{"_index":63,"t":{"947":{"position":[[83,8]]}}}],["trajectori",{"_index":786,"t":{"1002":{"position":[[5164,13]]}}}],["transfer",{"_index":738,"t":{"1002":{"position":[[3716,8],[3803,9]]},"1004":{"position":[[666,8]]}}}],["transport",{"_index":879,"t":{"1004":{"position":[[3860,15]]},"1069":{"position":[[323,9],[377,9]]}}}],["travers",{"_index":847,"t":{"1004":{"position":[[3102,9]]}}}],["tree",{"_index":1203,"t":{"1120":{"position":[[456,4]]}}}],["trend",{"_index":357,"t":{"988":{"position":[[2872,6]]}}}],["tri",{"_index":612,"t":{"1000":{"position":[[1851,3]]}}}],["true，plann",{"_index":941,"t":{"1022":{"position":[[159,12]]}}}],["ttl",{"_index":971,"t":{"1043":{"position":[[76,4]]}}}],["ttl、长任务、存储过程和udf",{"_index":134,"t":{"976":{"position":[[44,98]]}}}],["ttl（time",{"_index":970,"t":{"1043":{"position":[[10,8]]}}}],["tupl",{"_index":1068,"t":{"1094":{"position":[[1071,91]]}}}],["tv",{"_index":674,"t":{"1002":{"position":[[1404,2]]}}}],["two",{"_index":528,"t":{"1000":{"position":[[174,3],[1504,3],[1531,3],[2777,3],[2849,3]]},"1002":{"position":[[508,3],[1656,3],[2416,3],[2803,3]]}}}],["type",{"_index":72,"t":{"953":{"position":[[123,15]]},"972":{"position":[[341,9],[400,5],[468,30],[665,5],[676,4],[762,4]]},"974":{"position":[[206,4],[288,4]]},"998":{"position":[[192,5]]},"1000":{"position":[[326,4],[729,4]]},"1020":{"position":[[566,7],[579,4]]},"1041":{"position":[[62,4]]},"1056":{"position":[[170,4],[429,4],[614,4]]},"1181":{"position":[[113,4],[137,5]]},"1183":{"position":[[26,17],[55,4]]},"1185":{"position":[[80,4],[273,6]]},"1236":{"position":[[139,9]]},"1238":{"position":[[81,9]]},"1267":{"position":[[81,9]]},"1269":{"position":[[1030,4]]},"1271":{"position":[[50,5]]}}}],["type、partid（x）、vid（src",{"_index":1001,"t":{"1062":{"position":[[357,25]]}}}],["type、partid（y）、vid（dst",{"_index":1005,"t":{"1062":{"position":[[610,25]]}}}],["type、tag",{"_index":927,"t":{"1020":{"position":[[104,8]]},"1041":{"position":[[44,8]]}}}],["type、vid、rank",{"_index":1278,"t":{"1236":{"position":[[237,13]]},"1244":{"position":[[24,13]]},"1261":{"position":[[24,13]]}}}],["type）。例如，黄色的边有两个属性end_year和start_year，这两个属性被包含在集合serve中。serv",{"_index":1251,"t":{"1181":{"position":[[40,67]]}}}],["type）：serv",{"_index":1257,"t":{"1183":{"position":[[157,11]]}}}],["u.",{"_index":410,"t":{"988":{"position":[[3750,4]]}}}],["ubiqu",{"_index":505,"t":{"996":{"position":[[2257,12]]},"1004":{"position":[[3619,9]]},"1106":{"position":[[0,48]]}}}],["ui",{"_index":1324,"t":{"1296":{"position":[[70,2]]}}}],["uint64_t",{"_index":1011,"t":{"1064":{"position":[[289,8]]}}}],["underli",{"_index":641,"t":{"1002":{"position":[[135,10],[5627,10]]}}}],["understand",{"_index":889,"t":{"1006":{"position":[[117,10],[200,10]]}}}],["undirect",{"_index":646,"t":{"1002":{"position":[[462,10]]}}}],["union",{"_index":288,"t":{"988":{"position":[[649,5]]},"996":{"position":[[898,5]]},"1004":{"position":[[1857,5]]}}}],["unrecogn",{"_index":71,"t":{"953":{"position":[[90,23]]}}}],["unsolv",{"_index":619,"t":{"1000":{"position":[[1995,10],[3080,11]]}}}],["us",{"_index":279,"t":{"988":{"position":[[571,3],[676,3]]},"1000":{"position":[[651,4],[919,4],[2555,4]]},"1002":{"position":[[661,3],[1688,4],[2143,4],[2265,4],[2620,4],[3019,4],[3827,3],[4023,4],[5235,4],[5499,4],[5586,3]]},"1004":{"position":[[84,4],[1460,5],[2635,5],[3645,3],[4001,5],[4045,3]]}}}],["us/free/cosmo",{"_index":421,"t":{"988":{"position":[[4040,14]]}}}],["usa",{"_index":1166,"t":{"1116":{"position":[[993,4]]}}}],["usd",{"_index":366,"t":{"988":{"position":[[3078,3]]}}}],["user",{"_index":1360,"t":{"1300":{"position":[[523,4]]}}}],["usual",{"_index":643,"t":{"1002":{"position":[[234,7],[424,8],[721,7]]}}}],["util",{"_index":961,"t":{"1026":{"position":[[185,4]]}}}],["uuid",{"_index":1196,"t":{"1120":{"position":[[163,5]]}}}],["v1:player",{"_index":1298,"t":{"1265":{"position":[[910,11]]}}}],["v:player",{"_index":1224,"t":{"1128":{"position":[[232,9]]}}}],["valid",{"_index":915,"t":{"1016":{"position":[[47,17]]},"1020":{"position":[[0,9],[842,15]]},"1022":{"position":[[70,9],[177,9],[672,9]]},"1026":{"position":[[200,9]]}}}],["valu",{"_index":106,"t":{"972":{"position":[[722,5]]},"986":{"position":[[1839,5],[2129,5]]},"988":{"position":[[2406,11]]},"1022":{"position":[[383,5]]},"1056":{"position":[[56,5],[138,5],[397,17],[768,17]]},"1062":{"position":[[38,5],[488,15],[741,16],[1028,5]]},"1096":{"position":[[224,5]]},"1104":{"position":[[210,5],[280,6]]},"1234":{"position":[[287,6]]}}}],["var",{"_index":928,"t":{"1020":{"position":[[190,8],[311,3],[338,4]]}}}],["var.id",{"_index":929,"t":{"1020":{"position":[[256,7]]}}}],["variabl",{"_index":715,"t":{"1002":{"position":[[3238,9],[3302,10]]}}}],["variou",{"_index":546,"t":{"1000":{"position":[[565,7]]}}}],["veri",{"_index":683,"t":{"1002":{"position":[[1768,4],[2006,4]]}}}],["verif",{"_index":860,"t":{"1004":{"position":[[3488,13]]}}}],["verifiedmarketresearcv",{"_index":147,"t":{"983":{"position":[[3,25]]}}}],["vertex",{"_index":84,"t":{"972":{"position":[[98,9]]},"992":{"position":[[404,26]]},"994":{"position":[[77,30]]},"1002":{"position":[[714,6],[1056,6],[1150,6],[1533,6],[2711,6],[3214,6],[3679,6],[4876,6]]},"1118":{"position":[[40,6]]},"1232":{"position":[[204,32]]}}}],["vertex.md)、[delet",{"_index":125,"t":{"974":{"position":[[558,18]]}}}],["vertex.md)、[insert",{"_index":127,"t":{"974":{"position":[[631,18]]}}}],["vertex/edg",{"_index":976,"t":{"1051":{"position":[[286,25]]}}}],["vertex](../3.ngql",{"_index":122,"t":{"974":{"position":[[504,17],[577,17]]}}}],["vertexid",{"_index":985,"t":{"1056":{"position":[[262,8],[521,8]]}}}],["vertex中的valu",{"_index":1305,"t":{"1269":{"position":[[404,14]]}}}],["vertex语句删除点的时候，没有使用with",{"_index":1269,"t":{"1232":{"position":[[102,23]]}}}],["vertex）和边（edge），还可以将属性（properti",{"_index":1230,"t":{"1132":{"position":[[0,84]]}}}],["vertic",{"_index":570,"t":{"1000":{"position":[[1020,8]]},"1002":{"position":[[339,9],[871,8],[1441,8],[4128,8],[4810,8]]},"1004":{"position":[[885,8]]},"1128":{"position":[[347,8]]}}}],["vid",{"_index":95,"t":{"972":{"position":[[361,4]]},"1064":{"position":[[22,3],[238,3],[298,3],[404,3],[447,3],[555,3],[611,14],[663,8],[684,8]]},"1118":{"position":[[34,3]]},"1120":{"position":[[0,3],[55,3],[63,3],[114,3],[130,3],[169,3],[192,3],[318,3],[390,3],[443,3],[481,3]]},"1122":{"position":[[21,3],[99,3],[127,4],[165,4],[179,3]]},"1124":{"position":[[0,3],[50,11],[62,4],[82,16],[118,16],[267,6]]},"1126":{"position":[[0,3],[32,3]]},"1128":{"position":[[77,5],[92,3],[149,3],[297,4]]},"1230":{"position":[[68,19],[88,3]]},"1236":{"position":[[47,3],[84,3]]},"1238":{"position":[[26,3]]},"1265":{"position":[[228,10],[258,3],[401,3],[505,3]]},"1267":{"position":[[26,3]]},"1269":{"position":[[23,3],[330,20],[357,6],[434,7],[456,3],[495,3],[518,3],[582,10],[716,3],[729,3],[921,3],[1000,3]]}}}],["vid、edg",{"_index":93,"t":{"972":{"position":[[332,8]]}}}],["vid（start",{"_index":1219,"t":{"1128":{"position":[[67,9]]}}}],["vid）标识的。vid在同一图空间中唯一。vid",{"_index":85,"t":{"972":{"position":[[124,32]]}}}],["vid，再进行图操作的性能会变差，例如lookup",{"_index":1212,"t":{"1122":{"position":[[269,25]]}}}],["view",{"_index":609,"t":{"1000":{"position":[[1809,4]]},"1002":{"position":[[29,5]]},"1104":{"position":[[863,50]]},"1116":{"position":[[673,4]]}}}],["viru",{"_index":911,"t":{"1006":{"position":[[940,5]]}}}],["visitor",{"_index":962,"t":{"1026":{"position":[[220,7]]}}}],["visual",{"_index":813,"t":{"1004":{"position":[[363,6]]}}}],["vivo",{"_index":802,"t":{"1002":{"position":[[5537,5]]}}}],["vivo、oppo",{"_index":450,"t":{"994":{"position":[[1605,55]]}}}],["vpc",{"_index":33,"t":{"935":{"position":[[104,3],[129,3]]},"951":{"position":[[97,3]]},"957":{"position":[[34,3],[125,3],[136,3],[173,3]]}}}],["vpc、子网、nat",{"_index":73,"t":{"957":{"position":[[76,10]]}}}],["vpc（virtual",{"_index":3,"t":{"931":{"position":[[132,11]]}}}],["vs",{"_index":1190,"t":{"1116":{"position":[[1638,2]]}}}],["vue",{"_index":1322,"t":{"1296":{"position":[[62,3]]}}}],["vue.j",{"_index":1338,"t":{"1298":{"position":[[485,6]]}}}],["vuej",{"_index":1321,"t":{"1296":{"position":[[4,5]]}}}],["wal",{"_index":982,"t":{"1054":{"position":[[355,21],[377,4]]},"1067":{"position":[[291,3],[343,3],[457,3],[506,3]]},"1069":{"position":[[259,13]]},"1071":{"position":[[67,3],[130,3],[154,3],[171,26],[198,3]]}}}],["walk",{"_index":1038,"t":{"1083":{"position":[[0,33]]},"1203":{"position":[[72,4],[77,4]]},"1205":{"position":[[145,4]]},"1253":{"position":[[0,15],[251,17]]},"1259":{"position":[[53,4]]}}}],["walk、trail、path",{"_index":1037,"t":{"1081":{"position":[[44,44]]},"1203":{"position":[[0,71]]}}}],["walk、trail和path",{"_index":1279,"t":{"1251":{"position":[[0,99]]}}}],["walk就像是在小区跑步的你，每一条路和地点你都可以到达并且重复地走。walk",{"_index":1285,"t":{"1253":{"position":[[143,78]]}}}],["ware",{"_index":438,"t":{"994":{"position":[[619,10]]},"1002":{"position":[[1970,5]]}}}],["warehous",{"_index":685,"t":{"1002":{"position":[[1784,9],[1817,9],[1933,9]]}}}],["way",{"_index":815,"t":{"1004":{"position":[[384,3]]}}}],["web",{"_index":79,"t":{"965":{"position":[[175,3]]},"1096":{"position":[[483,3]]},"1291":{"position":[[5,3],[86,3]]},"1296":{"position":[[91,3]]},"1298":{"position":[[20,3],[712,3]]},"1300":{"position":[[107,3]]}}}],["web_speech_api",{"_index":1335,"t":{"1298":{"position":[[431,14]]}}}],["webank",{"_index":682,"t":{"1002":{"position":[[1755,6]]},"1006":{"position":[[475,8]]}}}],["wechat",{"_index":804,"t":{"1002":{"position":[[5549,7]]}}}],["wechatweixin",{"_index":760,"t":{"1002":{"position":[[4487,13]]}}}],["wg3",{"_index":162,"t":{"986":{"position":[[209,3],[1344,3]]}}}],["wide",{"_index":849,"t":{"1004":{"position":[[3285,4]]}}}],["wifi",{"_index":443,"t":{"994":{"position":[[1193,4],[1228,4]]},"1002":{"position":[[4174,4],[4322,4]]}}}],["within",{"_index":681,"t":{"1002":{"position":[[1708,6],[2225,6]]}}}],["wood",{"_index":391,"t":{"988":{"position":[[3465,5]]}}}],["word",{"_index":517,"t":{"1000":{"position":[[40,4]]}}}],["world",{"_index":352,"t":{"988":{"position":[[2776,5]]}}}],["wright",{"_index":1193,"t":{"1116":{"position":[[1653,7]]}}}],["write",{"_index":845,"t":{"1004":{"position":[[1434,5],[2609,5]]}}}],["wsgi.pi",{"_index":1363,"t":{"1300":{"position":[[577,7]]}}}],["x",{"_index":998,"t":{"1062":{"position":[[224,1],[279,1],[344,1]]}}}],["xml/json",{"_index":451,"t":{"996":{"position":[[10,8]]},"1004":{"position":[[68,8]]}}}],["xml、josn、yaml",{"_index":1081,"t":{"1096":{"position":[[1092,13]]}}}],["xpath",{"_index":187,"t":{"986":{"position":[[1041,5],[2728,5],[2821,19]]}}}],["xxx",{"_index":1208,"t":{"1122":{"position":[[203,3]]}}}],["y",{"_index":999,"t":{"1062":{"position":[[238,1],[533,1],[597,1]]}}}],["yield",{"_index":923,"t":{"1018":{"position":[[159,5]]},"1020":{"position":[[225,5],[275,5],[490,5],[635,5],[741,5],[790,5]]},"1234":{"position":[[357,5],[488,5],[561,5]]},"1265":{"position":[[724,5]]}}}],["york",{"_index":1164,"t":{"1116":{"position":[[983,5]]}}}],["zh",{"_index":966,"t":{"1032":{"position":[[504,7]]}}}],["zhihuzhihu",{"_index":761,"t":{"1002":{"position":[[4501,11]]}}}],["zhipin",{"_index":650,"t":{"1002":{"position":[[654,6]]}}}]],"pipeline":["stemmer"]}}]