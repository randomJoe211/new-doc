"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8326],{5374:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"1.1.0","label":"1.1.0","banner":null,"badge":true,"noIndex":false,"className":"docs-version-1.1.0","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"NebulaGraph Database","href":"/docs/","docId":"intro"},{"type":"category","label":"Introduction","items":[{"type":"link","label":"An introduction to graphs","href":"/docs/introduction/graph","docId":"introduction/graph"},{"type":"link","label":"Market overview of graph databases","href":"/docs/introduction/graph-database","docId":"introduction/graph-database"},{"type":"link","label":"Related technologies","href":"/docs/introduction/related-tech","docId":"introduction/related-tech"},{"type":"link","label":"What is Nebula Graph","href":"/docs/introduction/what-is-nebula-graph","docId":"introduction/what-is-nebula-graph"},{"type":"category","label":"NebulaGraph Architecture","items":[{"type":"link","label":"Architecture overview","href":"/docs/introduction/nebula-graph-architecture/architecture-overview","docId":"introduction/nebula-graph-architecture/architecture-overview"},{"type":"link","label":"Meta Service","href":"/docs/introduction/nebula-graph-architecture/meta-service","docId":"introduction/nebula-graph-architecture/meta-service"},{"type":"link","label":"Graph Service","href":"/docs/introduction/nebula-graph-architecture/graph-service","docId":"introduction/nebula-graph-architecture/graph-service"},{"type":"link","label":"Storage Service","href":"/docs/introduction/nebula-graph-architecture/storage-service","docId":"introduction/nebula-graph-architecture/storage-service"}],"collapsed":true,"collapsible":true,"href":"/docs/category/nebulagraph-architecture"},{"type":"link","label":"Data modeling","href":"/docs/introduction/data-model","docId":"introduction/data-model"},{"type":"link","label":"Path types","href":"/docs/introduction/path","docId":"introduction/path"},{"type":"link","label":"VID","href":"/docs/introduction/vid","docId":"introduction/vid"}],"collapsed":true,"collapsible":true,"href":"/docs/category/introduction"}]},"docs":{"intro":{"id":"intro","title":"NebulaGraph Database","description":"Welcome to the NebulaGraph database documentation","sidebar":"docs"},"introduction/data-model":{"id":"introduction/data-model","title":"Data modeling","description":"A data model is a model that organizes data and specifies how they are related to one another. This topic describes the Nebula\xa0Graph data model and provides suggestions for data modeling with Nebula Graph.","sidebar":"docs"},"introduction/graph":{"id":"introduction/graph","title":"An introduction to graphs","description":"People from tech giants (such as Amazon and Facebook) to small research teams are devoting significant resources to exploring the potential of graph databases to solve data relationships problems. What exactly is a graph database? What can it do? Where does it fit in the database landscape? To answer these questions, we first need to understand graphs.","sidebar":"docs"},"introduction/graph-database":{"id":"introduction/graph-database","title":"Market overview of graph databases","description":"Now that we have discussed what a graph is, let\'s move on to further understanding graph databases developed based on graph theory and the property graph model.","sidebar":"docs"},"introduction/nebula-graph-architecture/architecture-overview":{"id":"introduction/nebula-graph-architecture/architecture-overview","title":"Architecture overview","description":"Nebula Graph consists of three services: the Graph Service, the Storage Service, and the Meta Service. It applies the separation of storage and computing architecture.","sidebar":"docs"},"introduction/nebula-graph-architecture/graph-service":{"id":"introduction/nebula-graph-architecture/graph-service","title":"Graph Service","description":"The Graph Service is used to process the query. It has four submodules: Parser, Validator, Planner, and Executor. This topic will describe the Graph Service accordingly.","sidebar":"docs"},"introduction/nebula-graph-architecture/meta-service":{"id":"introduction/nebula-graph-architecture/meta-service","title":"Meta Service","description":"This topic introduces the architecture and functions of the Meta Service.","sidebar":"docs"},"introduction/nebula-graph-architecture/storage-service":{"id":"introduction/nebula-graph-architecture/storage-service","title":"Storage Service","description":"The persistent data of Nebula Graph have two parts. One is the Meta Service that stores the meta-related data.","sidebar":"docs"},"introduction/path":{"id":"introduction/path","title":"Path types","description":"In graph theory, a path in a graph is a finite or infinite sequence of edges which joins a sequence of vertices. Paths are fundamental concepts of graph theory.","sidebar":"docs"},"introduction/related-tech":{"id":"introduction/related-tech","title":"Related technologies","description":"This topic introduces databases and graph-related technologies that are closely related to distributed graph databases.","sidebar":"docs"},"introduction/vid":{"id":"introduction/vid","title":"VID","description":"In Nebula Graph, a vertex is uniquely identified by its ID, which is called a VID or a Vertex ID.","sidebar":"docs"},"introduction/what-is-nebula-graph":{"id":"introduction/what-is-nebula-graph","title":"What is Nebula Graph","description":"Nebula Graph is an open-source, distributed, easily scalable, and native graph database. It is capable of hosting graphs with hundreds of billions of vertices and trillions of edges, and serving queries with millisecond-latency.","sidebar":"docs"}}}')}}]);